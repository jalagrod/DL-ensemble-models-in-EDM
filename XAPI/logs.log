2024-08-01 12:16:37,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:16:37,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:16:37,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:16:37,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:16:38,556:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2024-08-01 12:17:46,555:INFO:PyCaret ClassificationExperiment
2024-08-01 12:17:46,555:INFO:Logging name: clf-default-name
2024-08-01 12:17:46,555:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-01 12:17:46,555:INFO:version 3.0.0
2024-08-01 12:17:46,555:INFO:Initializing setup()
2024-08-01 12:17:46,555:INFO:self.USI: 5a5c
2024-08-01 12:17:46,555:INFO:self._variable_keys: {'n_jobs_param', 'USI', 'log_plots_param', 'gpu_param', 'target_param', 'html_param', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'exp_id', 'data', 'idx', 'memory', 'fix_imbalance', 'is_multiclass', 'X_test', 'seed', 'X', 'fold_groups_param', 'y_test', '_ml_usecase', 'X_train', 'fold_generator', 'y_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y'}
2024-08-01 12:17:46,555:INFO:Checking environment
2024-08-01 12:17:46,555:INFO:python_version: 3.11.4
2024-08-01 12:17:46,555:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-08-01 12:17:46,555:INFO:machine: AMD64
2024-08-01 12:17:46,555:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-01 12:17:46,570:INFO:Memory: svmem(total=68659781632, available=49529839616, percent=27.9, used=19129942016, free=49529839616)
2024-08-01 12:17:46,570:INFO:Physical Core: 16
2024-08-01 12:17:46,570:INFO:Logical Core: 32
2024-08-01 12:17:46,570:INFO:Checking libraries
2024-08-01 12:17:46,570:INFO:System:
2024-08-01 12:17:46,570:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-08-01 12:17:46,570:INFO:executable: c:\Users\JAL\AppData\Local\Programs\Python\Python311\python.exe
2024-08-01 12:17:46,570:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-01 12:17:46,570:INFO:PyCaret required dependencies:
2024-08-01 12:17:46,621:INFO:                 pip: 24.1.2
2024-08-01 12:17:46,621:INFO:          setuptools: 70.3.0
2024-08-01 12:17:46,621:INFO:             pycaret: 3.0.0
2024-08-01 12:17:46,621:INFO:             IPython: 8.15.0
2024-08-01 12:17:46,621:INFO:          ipywidgets: 8.1.3
2024-08-01 12:17:46,621:INFO:                tqdm: 4.66.4
2024-08-01 12:17:46,621:INFO:               numpy: 1.24.4
2024-08-01 12:17:46,621:INFO:              pandas: 2.2.2
2024-08-01 12:17:46,621:INFO:              jinja2: 3.1.4
2024-08-01 12:17:46,621:INFO:               scipy: 1.11.4
2024-08-01 12:17:46,621:INFO:              joblib: 1.3.2
2024-08-01 12:17:46,621:INFO:             sklearn: 1.3.0
2024-08-01 12:17:46,621:INFO:                pyod: 2.0.1
2024-08-01 12:17:46,621:INFO:            imblearn: 0.12.3
2024-08-01 12:17:46,621:INFO:   category_encoders: 2.6.3
2024-08-01 12:17:46,621:INFO:            lightgbm: 4.3.0
2024-08-01 12:17:46,621:INFO:               numba: 0.60.0
2024-08-01 12:17:46,621:INFO:            requests: 2.32.3
2024-08-01 12:17:46,621:INFO:          matplotlib: 3.7.5
2024-08-01 12:17:46,621:INFO:          scikitplot: 0.3.7
2024-08-01 12:17:46,621:INFO:         yellowbrick: 1.5
2024-08-01 12:17:46,621:INFO:              plotly: 5.22.0
2024-08-01 12:17:46,621:INFO:             kaleido: 0.2.1
2024-08-01 12:17:46,621:INFO:         statsmodels: 0.14.2
2024-08-01 12:17:46,621:INFO:              sktime: 0.26.0
2024-08-01 12:17:46,621:INFO:               tbats: 1.1.3
2024-08-01 12:17:46,621:INFO:            pmdarima: 2.0.4
2024-08-01 12:17:46,621:INFO:              psutil: 5.9.5
2024-08-01 12:17:46,621:INFO:PyCaret optional dependencies:
2024-08-01 12:17:46,688:INFO:                shap: Not installed
2024-08-01 12:17:46,688:INFO:           interpret: Not installed
2024-08-01 12:17:46,688:INFO:                umap: Not installed
2024-08-01 12:17:46,688:INFO:    pandas_profiling: Not installed
2024-08-01 12:17:46,688:INFO:  explainerdashboard: Not installed
2024-08-01 12:17:46,688:INFO:             autoviz: Not installed
2024-08-01 12:17:46,688:INFO:           fairlearn: Not installed
2024-08-01 12:17:46,688:INFO:             xgboost: 2.0.3
2024-08-01 12:17:46,688:INFO:            catboost: 1.2.5
2024-08-01 12:17:46,688:INFO:              kmodes: Not installed
2024-08-01 12:17:46,688:INFO:             mlxtend: Not installed
2024-08-01 12:17:46,688:INFO:       statsforecast: 1.4.0
2024-08-01 12:17:46,688:INFO:        tune_sklearn: Not installed
2024-08-01 12:17:46,688:INFO:                 ray: 2.10.0
2024-08-01 12:17:46,688:INFO:            hyperopt: 0.2.7
2024-08-01 12:17:46,688:INFO:              optuna: Not installed
2024-08-01 12:17:46,688:INFO:               skopt: Not installed
2024-08-01 12:17:46,688:INFO:              mlflow: Not installed
2024-08-01 12:17:46,688:INFO:              gradio: Not installed
2024-08-01 12:17:46,688:INFO:             fastapi: Not installed
2024-08-01 12:17:46,688:INFO:             uvicorn: Not installed
2024-08-01 12:17:46,688:INFO:              m2cgen: Not installed
2024-08-01 12:17:46,688:INFO:           evidently: Not installed
2024-08-01 12:17:46,688:INFO:               fugue: Not installed
2024-08-01 12:17:46,688:INFO:           streamlit: 1.31.0
2024-08-01 12:17:46,688:INFO:             prophet: Not installed
2024-08-01 12:17:46,688:INFO:None
2024-08-01 12:17:46,688:INFO:Set up GPU usage.
2024-08-01 12:17:46,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,688:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2024-08-01 12:17:46,688:INFO:Set up data.
2024-08-01 12:17:46,688:INFO:Set up train/test split.
2024-08-01 12:17:46,688:INFO:Set up index.
2024-08-01 12:17:46,688:INFO:Set up folding strategy.
2024-08-01 12:17:46,688:INFO:Assigning column types.
2024-08-01 12:17:46,704:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-01 12:17:46,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:17:46,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:17:46,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:46,756:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:47,155:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:47,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:17:47,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,456:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:17:47,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,458:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,472:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:47,555:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:47,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-01 12:17:47,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:17:47,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,626:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:47,707:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:47,707:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:17:47,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,759:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:47,856:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:47,856:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-01 12:17:47,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:47,905:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:48,009:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:48,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,073:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:48,171:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:48,171:INFO:Preparing preprocessing pipeline...
2024-08-01 12:17:48,171:INFO:Set up label encoding.
2024-08-01 12:17:48,171:INFO:Set up simple imputation.
2024-08-01 12:17:48,188:INFO:Set up encoding of ordinal features.
2024-08-01 12:17:48,188:INFO:Set up encoding of categorical features.
2024-08-01 12:17:48,288:INFO:Finished creating preprocessing pipeline.
2024-08-01 12:17:48,324:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-08-01 12:17:48,324:INFO:Creating final display dataframe.
2024-08-01 12:17:48,555:INFO:Setup _display_container:                     Description             Value
0                    Session id              2797
1                        Target             Class
2                   Target type        Multiclass
3                Target mapping  H: 0, L: 1, M: 2
4           Original data shape         (360, 17)
5        Transformed data shape         (360, 67)
6   Transformed train set shape         (270, 67)
7    Transformed test set shape          (90, 67)
8              Ordinal features                 6
9              Numeric features                 4
10         Categorical features                12
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU              True
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              5a5c
2024-08-01 12:17:48,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,606:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:48,691:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:48,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:17:48,738:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:17:48,838:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:17:48,839:INFO:setup() successfully completed in 2.97s...............
2024-08-01 12:17:48,840:INFO:Initializing compare_models()
2024-08-01 12:17:48,840:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:17:48,840:INFO:Checking exceptions
2024-08-01 12:17:48,842:INFO:Preparing display monitor
2024-08-01 12:17:48,857:INFO:Initializing Logistic Regression
2024-08-01 12:17:48,857:INFO:Total runtime is 0.0 minutes
2024-08-01 12:17:48,857:INFO:SubProcess create_model() called ==================================
2024-08-01 12:17:48,857:INFO:Initializing create_model()
2024-08-01 12:17:48,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:17:48,857:INFO:Checking exceptions
2024-08-01 12:17:48,857:INFO:Importing libraries
2024-08-01 12:17:48,857:INFO:Copying training dataset
2024-08-01 12:17:48,857:INFO:Defining folds
2024-08-01 12:17:48,857:INFO:Declaring metric variables
2024-08-01 12:17:48,857:INFO:Importing untrained model
2024-08-01 12:17:48,857:INFO:Logistic Regression Imported successfully
2024-08-01 12:17:48,857:INFO:Starting cross validation
2024-08-01 12:17:48,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:17:49,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:49,255:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:49,255:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:49,255:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:49,821:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:49,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:49,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:49,955:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:50,505:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:50,655:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:50,655:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:50,655:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:51,221:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:51,354:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:51,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:51,356:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:51,905:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:52,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:52,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:52,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:52,588:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:52,721:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:52,721:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:52,721:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:53,290:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:53,421:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:53,421:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:53,421:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:53,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:54,088:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:54,088:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:54,088:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:54,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:54,838:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:54,838:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:54,838:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:55,389:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:17:55,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:55,520:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:55,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:17:55,857:INFO:Calculating mean and std
2024-08-01 12:17:55,857:INFO:Creating metrics dataframe
2024-08-01 12:17:56,190:INFO:Uploading results into container
2024-08-01 12:17:56,190:INFO:Uploading model into container now
2024-08-01 12:17:56,190:INFO:_master_model_container: 1
2024-08-01 12:17:56,190:INFO:_display_container: 2
2024-08-01 12:17:56,190:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:17:56,190:INFO:create_model() successfully completed......................................
2024-08-01 12:17:56,255:INFO:SubProcess create_model() end ==================================
2024-08-01 12:17:56,255:INFO:Creating metrics dataframe
2024-08-01 12:17:56,255:INFO:Initializing K Neighbors Classifier
2024-08-01 12:17:56,255:INFO:Total runtime is 0.12329837083816528 minutes
2024-08-01 12:17:56,255:INFO:SubProcess create_model() called ==================================
2024-08-01 12:17:56,255:INFO:Initializing create_model()
2024-08-01 12:17:56,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:17:56,255:INFO:Checking exceptions
2024-08-01 12:17:56,255:INFO:Importing libraries
2024-08-01 12:17:56,255:INFO:Copying training dataset
2024-08-01 12:17:56,271:INFO:Defining folds
2024-08-01 12:17:56,271:INFO:Declaring metric variables
2024-08-01 12:17:56,271:INFO:Importing untrained model
2024-08-01 12:17:56,271:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:17:56,271:INFO:Starting cross validation
2024-08-01 12:17:56,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:17:56,507:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:56,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:57,304:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:57,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:58,088:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:58,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:58,888:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:59,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:59,683:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:17:59,921:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:00,477:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:00,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:01,276:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:01,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:02,054:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:02,307:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:02,857:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:03,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:03,638:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:03,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:04,221:INFO:Calculating mean and std
2024-08-01 12:18:04,221:INFO:Creating metrics dataframe
2024-08-01 12:18:04,571:INFO:Uploading results into container
2024-08-01 12:18:04,571:INFO:Uploading model into container now
2024-08-01 12:18:04,571:INFO:_master_model_container: 2
2024-08-01 12:18:04,571:INFO:_display_container: 2
2024-08-01 12:18:04,571:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:18:04,573:INFO:create_model() successfully completed......................................
2024-08-01 12:18:04,621:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:18:04,638:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:18:04,638:INFO:Initializing create_model()
2024-08-01 12:18:04,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:04,638:INFO:Checking exceptions
2024-08-01 12:18:04,638:INFO:Importing libraries
2024-08-01 12:18:04,638:INFO:Copying training dataset
2024-08-01 12:18:04,638:INFO:Defining folds
2024-08-01 12:18:04,638:INFO:Declaring metric variables
2024-08-01 12:18:04,638:INFO:Importing untrained model
2024-08-01 12:18:04,638:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:18:04,654:INFO:Starting cross validation
2024-08-01 12:18:04,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:04,838:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:05,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:05,638:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:05,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:06,443:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:06,702:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:07,238:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:07,497:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:08,021:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:08,274:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:08,807:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:09,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:09,597:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:09,838:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:10,371:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:10,621:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:11,171:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:11,421:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:11,938:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:12,200:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:18:12,538:INFO:Calculating mean and std
2024-08-01 12:18:12,538:INFO:Creating metrics dataframe
2024-08-01 12:18:12,887:INFO:Uploading results into container
2024-08-01 12:18:12,887:INFO:Uploading model into container now
2024-08-01 12:18:12,887:INFO:_master_model_container: 3
2024-08-01 12:18:12,888:INFO:_display_container: 2
2024-08-01 12:18:12,888:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:18:12,888:INFO:create_model() successfully completed......................................
2024-08-01 12:18:12,954:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:18:12,954:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:18:12,954:INFO:Initializing Naive Bayes
2024-08-01 12:18:12,954:INFO:Total runtime is 0.40162630081176753 minutes
2024-08-01 12:18:12,954:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:12,954:INFO:Initializing create_model()
2024-08-01 12:18:12,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:12,954:INFO:Checking exceptions
2024-08-01 12:18:12,954:INFO:Importing libraries
2024-08-01 12:18:12,954:INFO:Copying training dataset
2024-08-01 12:18:12,954:INFO:Defining folds
2024-08-01 12:18:12,954:INFO:Declaring metric variables
2024-08-01 12:18:12,954:INFO:Importing untrained model
2024-08-01 12:18:12,954:INFO:Naive Bayes Imported successfully
2024-08-01 12:18:12,954:INFO:Starting cross validation
2024-08-01 12:18:12,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:13,723:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:13,723:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:13,723:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:14,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:15,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,438:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,438:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:16,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,992:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,993:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:16,994:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:17,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:17,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:17,537:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:18,074:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:18,074:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:18,074:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:18,421:INFO:Calculating mean and std
2024-08-01 12:18:18,421:INFO:Creating metrics dataframe
2024-08-01 12:18:18,758:INFO:Uploading results into container
2024-08-01 12:18:18,759:INFO:Uploading model into container now
2024-08-01 12:18:18,759:INFO:_master_model_container: 4
2024-08-01 12:18:18,759:INFO:_display_container: 2
2024-08-01 12:18:18,759:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:18:18,759:INFO:create_model() successfully completed......................................
2024-08-01 12:18:18,826:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:18,826:INFO:Creating metrics dataframe
2024-08-01 12:18:18,830:INFO:Initializing Decision Tree Classifier
2024-08-01 12:18:18,830:INFO:Total runtime is 0.49954887628555295 minutes
2024-08-01 12:18:18,832:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:18,832:INFO:Initializing create_model()
2024-08-01 12:18:18,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:18,832:INFO:Checking exceptions
2024-08-01 12:18:18,832:INFO:Importing libraries
2024-08-01 12:18:18,832:INFO:Copying training dataset
2024-08-01 12:18:18,834:INFO:Defining folds
2024-08-01 12:18:18,834:INFO:Declaring metric variables
2024-08-01 12:18:18,836:INFO:Importing untrained model
2024-08-01 12:18:18,837:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:18:18,841:INFO:Starting cross validation
2024-08-01 12:18:18,842:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:19,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:19,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:19,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:19,590:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:19,590:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:19,590:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,140:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,140:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,687:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,688:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:20,689:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,221:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,221:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,221:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:21,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:22,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,424:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,990:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,990:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:23,990:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:24,337:INFO:Calculating mean and std
2024-08-01 12:18:24,337:INFO:Creating metrics dataframe
2024-08-01 12:18:24,673:INFO:Uploading results into container
2024-08-01 12:18:24,673:INFO:Uploading model into container now
2024-08-01 12:18:24,673:INFO:_master_model_container: 5
2024-08-01 12:18:24,673:INFO:_display_container: 2
2024-08-01 12:18:24,673:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best')
2024-08-01 12:18:24,673:INFO:create_model() successfully completed......................................
2024-08-01 12:18:24,744:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:24,744:INFO:Creating metrics dataframe
2024-08-01 12:18:24,748:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:18:24,749:INFO:Total runtime is 0.5982085426648458 minutes
2024-08-01 12:18:24,750:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:24,751:INFO:Initializing create_model()
2024-08-01 12:18:24,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:24,751:INFO:Checking exceptions
2024-08-01 12:18:24,751:INFO:Importing libraries
2024-08-01 12:18:24,751:INFO:Copying training dataset
2024-08-01 12:18:24,754:INFO:Defining folds
2024-08-01 12:18:24,754:INFO:Declaring metric variables
2024-08-01 12:18:24,756:INFO:Importing untrained model
2024-08-01 12:18:24,758:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:18:24,761:INFO:Starting cross validation
2024-08-01 12:18:24,763:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:24,937:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:24,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:24,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:24,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,437:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:25,437:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,453:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,454:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,954:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:25,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:25,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:25,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,457:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:26,457:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,472:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:26,472:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,971:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:26,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:26,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:26,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:27,488:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:27,488:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:27,488:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:27,488:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:27,504:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,021:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:28,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,521:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:28,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:28,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,037:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:29,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:29,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,554:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:29,554:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:29,904:INFO:Calculating mean and std
2024-08-01 12:18:29,904:INFO:Creating metrics dataframe
2024-08-01 12:18:30,237:INFO:Uploading results into container
2024-08-01 12:18:30,237:INFO:Uploading model into container now
2024-08-01 12:18:30,237:INFO:_master_model_container: 6
2024-08-01 12:18:30,237:INFO:_display_container: 2
2024-08-01 12:18:30,241:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:18:30,241:INFO:create_model() successfully completed......................................
2024-08-01 12:18:30,287:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:30,287:INFO:Creating metrics dataframe
2024-08-01 12:18:30,303:INFO:Initializing Ridge Classifier
2024-08-01 12:18:30,303:INFO:Total runtime is 0.6907714605331421 minutes
2024-08-01 12:18:30,305:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:30,306:INFO:Initializing create_model()
2024-08-01 12:18:30,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:30,306:INFO:Checking exceptions
2024-08-01 12:18:30,306:INFO:Importing libraries
2024-08-01 12:18:30,306:INFO:Copying training dataset
2024-08-01 12:18:30,307:INFO:Defining folds
2024-08-01 12:18:30,307:INFO:Declaring metric variables
2024-08-01 12:18:30,307:INFO:Importing untrained model
2024-08-01 12:18:30,307:INFO:Ridge Classifier Imported successfully
2024-08-01 12:18:30,307:INFO:Starting cross validation
2024-08-01 12:18:30,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:30,471:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:30,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:30,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:30,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:30,971:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:30,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:30,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:30,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,471:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:31,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,971:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:31,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:31,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,454:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:32,454:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,454:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,454:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,950:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:32,951:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,952:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:32,953:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,437:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:33,437:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,437:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,437:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,937:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:33,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,953:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:33,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,441:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:34,441:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,441:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,441:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,937:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:18:34,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:34,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:35,297:INFO:Calculating mean and std
2024-08-01 12:18:35,297:INFO:Creating metrics dataframe
2024-08-01 12:18:35,640:INFO:Uploading results into container
2024-08-01 12:18:35,640:INFO:Uploading model into container now
2024-08-01 12:18:35,640:INFO:_master_model_container: 7
2024-08-01 12:18:35,641:INFO:_display_container: 2
2024-08-01 12:18:35,641:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001)
2024-08-01 12:18:35,641:INFO:create_model() successfully completed......................................
2024-08-01 12:18:35,704:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:35,704:INFO:Creating metrics dataframe
2024-08-01 12:18:35,704:INFO:Initializing Random Forest Classifier
2024-08-01 12:18:35,704:INFO:Total runtime is 0.7807870308558146 minutes
2024-08-01 12:18:35,704:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:35,704:INFO:Initializing create_model()
2024-08-01 12:18:35,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:35,704:INFO:Checking exceptions
2024-08-01 12:18:35,704:INFO:Importing libraries
2024-08-01 12:18:35,704:INFO:Copying training dataset
2024-08-01 12:18:35,704:INFO:Defining folds
2024-08-01 12:18:35,704:INFO:Declaring metric variables
2024-08-01 12:18:35,704:INFO:Importing untrained model
2024-08-01 12:18:35,704:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:18:35,721:INFO:Starting cross validation
2024-08-01 12:18:35,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:36,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:36,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:36,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:36,897:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:36,897:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:36,903:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:37,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:37,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:37,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:38,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:38,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:38,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:39,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:40,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:40,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:40,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:40,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:41,339:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:41,339:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:41,339:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,136:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,139:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:42,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:43,254:INFO:Calculating mean and std
2024-08-01 12:18:43,254:INFO:Creating metrics dataframe
2024-08-01 12:18:43,604:INFO:Uploading results into container
2024-08-01 12:18:43,604:INFO:Uploading model into container now
2024-08-01 12:18:43,604:INFO:_master_model_container: 8
2024-08-01 12:18:43,604:INFO:_display_container: 2
2024-08-01 12:18:43,604:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:18:43,616:INFO:create_model() successfully completed......................................
2024-08-01 12:18:43,670:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:43,670:INFO:Creating metrics dataframe
2024-08-01 12:18:43,670:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:18:43,686:INFO:Total runtime is 0.9138234972953796 minutes
2024-08-01 12:18:43,688:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:43,688:INFO:Initializing create_model()
2024-08-01 12:18:43,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:43,688:INFO:Checking exceptions
2024-08-01 12:18:43,688:INFO:Importing libraries
2024-08-01 12:18:43,688:INFO:Copying training dataset
2024-08-01 12:18:43,688:INFO:Defining folds
2024-08-01 12:18:43,688:INFO:Declaring metric variables
2024-08-01 12:18:43,688:INFO:Importing untrained model
2024-08-01 12:18:43,688:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:18:43,688:INFO:Starting cross validation
2024-08-01 12:18:43,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:43,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:43,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:43,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:43,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:44,387:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:44,493:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:44,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:44,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:44,936:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:45,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:45,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:45,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:45,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:45,570:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:45,586:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:45,587:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:46,154:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,154:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,154:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,603:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:46,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:46,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:47,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:18:47,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,694:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:47,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:47,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:48,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:18:48,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:48,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:49,266:INFO:Calculating mean and std
2024-08-01 12:18:49,267:INFO:Creating metrics dataframe
2024-08-01 12:18:49,604:INFO:Uploading results into container
2024-08-01 12:18:49,604:INFO:Uploading model into container now
2024-08-01 12:18:49,604:INFO:_master_model_container: 9
2024-08-01 12:18:49,604:INFO:_display_container: 2
2024-08-01 12:18:49,604:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:18:49,604:INFO:create_model() successfully completed......................................
2024-08-01 12:18:49,654:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:49,654:INFO:Creating metrics dataframe
2024-08-01 12:18:49,671:INFO:Initializing Ada Boost Classifier
2024-08-01 12:18:49,671:INFO:Total runtime is 1.0135696371396383 minutes
2024-08-01 12:18:49,671:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:49,671:INFO:Initializing create_model()
2024-08-01 12:18:49,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:49,671:INFO:Checking exceptions
2024-08-01 12:18:49,671:INFO:Importing libraries
2024-08-01 12:18:49,671:INFO:Copying training dataset
2024-08-01 12:18:49,671:INFO:Defining folds
2024-08-01 12:18:49,671:INFO:Declaring metric variables
2024-08-01 12:18:49,671:INFO:Importing untrained model
2024-08-01 12:18:49,681:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:18:49,681:INFO:Starting cross validation
2024-08-01 12:18:49,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:49,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:49,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:49,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:50,598:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:50,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:50,600:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,220:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,220:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,220:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,854:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:51,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:52,513:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:52,514:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:52,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,137:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,153:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,770:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,770:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:53,770:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:54,420:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:54,420:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:54,420:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:55,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:56,004:INFO:Calculating mean and std
2024-08-01 12:18:56,004:INFO:Creating metrics dataframe
2024-08-01 12:18:56,337:INFO:Uploading results into container
2024-08-01 12:18:56,353:INFO:Uploading model into container now
2024-08-01 12:18:56,353:INFO:_master_model_container: 10
2024-08-01 12:18:56,353:INFO:_display_container: 2
2024-08-01 12:18:56,354:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797)
2024-08-01 12:18:56,354:INFO:create_model() successfully completed......................................
2024-08-01 12:18:56,407:INFO:SubProcess create_model() end ==================================
2024-08-01 12:18:56,407:INFO:Creating metrics dataframe
2024-08-01 12:18:56,420:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:18:56,420:INFO:Total runtime is 1.1260590513547262 minutes
2024-08-01 12:18:56,420:INFO:SubProcess create_model() called ==================================
2024-08-01 12:18:56,420:INFO:Initializing create_model()
2024-08-01 12:18:56,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:18:56,420:INFO:Checking exceptions
2024-08-01 12:18:56,420:INFO:Importing libraries
2024-08-01 12:18:56,420:INFO:Copying training dataset
2024-08-01 12:18:56,420:INFO:Defining folds
2024-08-01 12:18:56,420:INFO:Declaring metric variables
2024-08-01 12:18:56,420:INFO:Importing untrained model
2024-08-01 12:18:56,420:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:18:56,420:INFO:Starting cross validation
2024-08-01 12:18:56,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:18:57,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:57,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:57,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:57,992:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:57,993:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:57,994:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:58,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:58,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:58,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:59,905:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:59,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:18:59,908:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:00,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:00,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:00,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:01,837:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:01,837:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:01,837:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:02,798:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:02,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:02,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:03,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:03,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:03,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:04,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:04,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:04,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:05,728:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:05,729:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:05,730:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:06,070:INFO:Calculating mean and std
2024-08-01 12:19:06,070:INFO:Creating metrics dataframe
2024-08-01 12:19:06,406:INFO:Uploading results into container
2024-08-01 12:19:06,415:INFO:Uploading model into container now
2024-08-01 12:19:06,415:INFO:_master_model_container: 11
2024-08-01 12:19:06,415:INFO:_display_container: 2
2024-08-01 12:19:06,415:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:19:06,415:INFO:create_model() successfully completed......................................
2024-08-01 12:19:06,470:INFO:SubProcess create_model() end ==================================
2024-08-01 12:19:06,470:INFO:Creating metrics dataframe
2024-08-01 12:19:06,470:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:19:06,470:INFO:Total runtime is 1.2935561577479044 minutes
2024-08-01 12:19:06,470:INFO:SubProcess create_model() called ==================================
2024-08-01 12:19:06,470:INFO:Initializing create_model()
2024-08-01 12:19:06,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:19:06,470:INFO:Checking exceptions
2024-08-01 12:19:06,470:INFO:Importing libraries
2024-08-01 12:19:06,470:INFO:Copying training dataset
2024-08-01 12:19:06,470:INFO:Defining folds
2024-08-01 12:19:06,470:INFO:Declaring metric variables
2024-08-01 12:19:06,487:INFO:Importing untrained model
2024-08-01 12:19:06,489:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:19:06,492:INFO:Starting cross validation
2024-08-01 12:19:06,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:19:06,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:06,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:06,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,259:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,260:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,261:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,820:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,820:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:07,820:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:08,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:09,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:09,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:09,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,603:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,604:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:10,605:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,156:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,156:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,156:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:11,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:12,053:INFO:Calculating mean and std
2024-08-01 12:19:12,069:INFO:Creating metrics dataframe
2024-08-01 12:19:12,429:INFO:Uploading results into container
2024-08-01 12:19:12,429:INFO:Uploading model into container now
2024-08-01 12:19:12,429:INFO:_master_model_container: 12
2024-08-01 12:19:12,429:INFO:_display_container: 2
2024-08-01 12:19:12,429:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:19:12,429:INFO:create_model() successfully completed......................................
2024-08-01 12:19:12,492:INFO:SubProcess create_model() end ==================================
2024-08-01 12:19:12,492:INFO:Creating metrics dataframe
2024-08-01 12:19:12,498:INFO:Initializing Extra Trees Classifier
2024-08-01 12:19:12,498:INFO:Total runtime is 1.39402570327123 minutes
2024-08-01 12:19:12,499:INFO:SubProcess create_model() called ==================================
2024-08-01 12:19:12,500:INFO:Initializing create_model()
2024-08-01 12:19:12,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:19:12,500:INFO:Checking exceptions
2024-08-01 12:19:12,500:INFO:Importing libraries
2024-08-01 12:19:12,500:INFO:Copying training dataset
2024-08-01 12:19:12,502:INFO:Defining folds
2024-08-01 12:19:12,502:INFO:Declaring metric variables
2024-08-01 12:19:12,504:INFO:Importing untrained model
2024-08-01 12:19:12,504:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:19:12,504:INFO:Starting cross validation
2024-08-01 12:19:12,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:19:12,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:12,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:12,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:13,566:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:13,567:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:13,569:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,271:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,994:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:14,997:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:15,710:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:15,711:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:15,713:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:16,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:16,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:16,420:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,827:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,827:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:17,827:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:18,536:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:18,536:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:18,536:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:19,240:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:19,240:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:19,240:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:19,600:INFO:Calculating mean and std
2024-08-01 12:19:19,600:INFO:Creating metrics dataframe
2024-08-01 12:19:19,950:INFO:Uploading results into container
2024-08-01 12:19:19,950:INFO:Uploading model into container now
2024-08-01 12:19:19,950:INFO:_master_model_container: 13
2024-08-01 12:19:19,950:INFO:_display_container: 2
2024-08-01 12:19:19,951:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:19:19,951:INFO:create_model() successfully completed......................................
2024-08-01 12:19:20,003:INFO:SubProcess create_model() end ==================================
2024-08-01 12:19:20,003:INFO:Creating metrics dataframe
2024-08-01 12:19:20,014:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:19:20,014:INFO:Total runtime is 1.5192873954772947 minutes
2024-08-01 12:19:20,020:INFO:SubProcess create_model() called ==================================
2024-08-01 12:19:20,020:INFO:Initializing create_model()
2024-08-01 12:19:20,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:19:20,020:INFO:Checking exceptions
2024-08-01 12:19:20,020:INFO:Importing libraries
2024-08-01 12:19:20,020:INFO:Copying training dataset
2024-08-01 12:19:20,020:INFO:Defining folds
2024-08-01 12:19:20,020:INFO:Declaring metric variables
2024-08-01 12:19:20,020:INFO:Importing untrained model
2024-08-01 12:19:20,020:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:19:20,020:INFO:Starting cross validation
2024-08-01 12:19:20,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:19:20,955:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:20] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:21,219:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:21,220:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:21,220:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:22,423:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:22] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:22,686:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:22,687:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:22,689:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:23,953:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:23] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:24,223:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:24,226:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:24,227:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:25,219:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:25] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:25,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:25,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:25,470:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:26,423:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:26] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:26,694:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:26,695:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:26,697:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:27,859:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:27] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:28,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:28,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:28,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:29,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:29] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:29,386:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:29,386:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:29,386:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:30,403:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:30] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:30,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:30,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:30,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:31,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:31] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:31,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:31,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:31,936:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:33,036:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:19:33] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:19:33,286:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:33,302:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:33,304:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:33,670:INFO:Calculating mean and std
2024-08-01 12:19:33,670:INFO:Creating metrics dataframe
2024-08-01 12:19:34,003:INFO:Uploading results into container
2024-08-01 12:19:34,003:INFO:Uploading model into container now
2024-08-01 12:19:34,018:INFO:_master_model_container: 14
2024-08-01 12:19:34,018:INFO:_display_container: 2
2024-08-01 12:19:34,018:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:19:34,018:INFO:create_model() successfully completed......................................
2024-08-01 12:19:34,070:INFO:SubProcess create_model() end ==================================
2024-08-01 12:19:34,070:INFO:Creating metrics dataframe
2024-08-01 12:19:34,086:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:19:34,086:INFO:Total runtime is 1.7538286407788592 minutes
2024-08-01 12:19:34,086:INFO:SubProcess create_model() called ==================================
2024-08-01 12:19:34,086:INFO:Initializing create_model()
2024-08-01 12:19:34,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:19:34,086:INFO:Checking exceptions
2024-08-01 12:19:34,086:INFO:Importing libraries
2024-08-01 12:19:34,086:INFO:Copying training dataset
2024-08-01 12:19:34,086:INFO:Defining folds
2024-08-01 12:19:34,086:INFO:Declaring metric variables
2024-08-01 12:19:34,086:INFO:Importing untrained model
2024-08-01 12:19:34,086:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:19:34,086:INFO:Starting cross validation
2024-08-01 12:19:34,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:19:34,203:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:34,203:INFO:[LightGBM] [Info] Total Bins 238
2024-08-01 12:19:34,203:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:34,286:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:34,286:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:34,420:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:34,420:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:34,436:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001631 secs. 0 sparse feature groups
2024-08-01 12:19:34,436:INFO:[LightGBM] [Info] Start training from score -1.162328
2024-08-01 12:19:34,436:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:34,436:INFO:[LightGBM] [Info] Start training from score -0.848671
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:34,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:35,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:35,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:35,736:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:35,736:INFO:[LightGBM] [Info] Total Bins 232
2024-08-01 12:19:35,736:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:35,803:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:35,803:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001325 secs. 0 sparse feature groups
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] Start training from score -1.162328
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:35,820:INFO:[LightGBM] [Info] Start training from score -0.848671
2024-08-01 12:19:35,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:35,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:36,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:36,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:36,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:37,003:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:37,003:INFO:[LightGBM] [Info] Total Bins 230
2024-08-01 12:19:37,003:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:37,069:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:37,069:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:37,092:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:37,100:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:37,103:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.003817 secs. 0 sparse feature groups
2024-08-01 12:19:37,103:INFO:[LightGBM] [Info] Start training from score -1.162328
2024-08-01 12:19:37,103:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:37,103:INFO:[LightGBM] [Info] Start training from score -0.848671
2024-08-01 12:19:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:37,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:37,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:37,936:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:38,403:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:38,403:INFO:[LightGBM] [Info] Total Bins 238
2024-08-01 12:19:38,403:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:38,486:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:38,486:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:38,495:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:38,497:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:38,498:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001358 secs. 0 sparse feature groups
2024-08-01 12:19:38,499:INFO:[LightGBM] [Info] Start training from score -1.162328
2024-08-01 12:19:38,499:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:38,499:INFO:[LightGBM] [Info] Start training from score -0.848671
2024-08-01 12:19:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:38,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,319:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:39,319:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:39,319:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:39,803:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:39,803:INFO:[LightGBM] [Info] Total Bins 235
2024-08-01 12:19:39,803:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:39,869:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:39,869:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:39,869:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:39,886:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:39,887:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001418 secs. 0 sparse feature groups
2024-08-01 12:19:39,888:INFO:[LightGBM] [Info] Start training from score -1.162328
2024-08-01 12:19:39,888:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:39,888:INFO:[LightGBM] [Info] Start training from score -0.848671
2024-08-01 12:19:39,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:39,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:40,687:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:40,687:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:40,703:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:41,178:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:41,178:INFO:[LightGBM] [Info] Total Bins 234
2024-08-01 12:19:41,179:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 26
2024-08-01 12:19:41,240:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:41,240:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001292 secs. 0 sparse feature groups
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] Start training from score -1.149256
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:41,253:INFO:[LightGBM] [Info] Start training from score -0.858332
2024-08-01 12:19:41,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:41,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:42,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:42,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:42,510:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:42,510:INFO:[LightGBM] [Info] Total Bins 231
2024-08-01 12:19:42,510:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:42,588:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:42,588:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:42,588:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:42,588:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:42,603:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001639 secs. 0 sparse feature groups
2024-08-01 12:19:42,603:INFO:[LightGBM] [Info] Start training from score -1.149256
2024-08-01 12:19:42,603:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:42,603:INFO:[LightGBM] [Info] Start training from score -0.858332
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:42,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:43,419:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:43,419:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:43,886:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:43,886:INFO:[LightGBM] [Info] Total Bins 233
2024-08-01 12:19:43,886:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:43,953:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:43,953:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001346 secs. 0 sparse feature groups
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] Start training from score -1.149256
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:43,969:INFO:[LightGBM] [Info] Start training from score -0.858332
2024-08-01 12:19:43,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:43,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:44,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:44,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:44,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:45,303:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:45,303:INFO:[LightGBM] [Info] Total Bins 234
2024-08-01 12:19:45,303:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:45,369:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:45,369:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:45,385:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:45,387:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:45,388:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001270 secs. 0 sparse feature groups
2024-08-01 12:19:45,389:INFO:[LightGBM] [Info] Start training from score -1.149256
2024-08-01 12:19:45,389:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:45,389:INFO:[LightGBM] [Info] Start training from score -0.858332
2024-08-01 12:19:45,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:45,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,252:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:46,253:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:46,253:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:46,736:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:19:46,736:INFO:[LightGBM] [Info] Total Bins 230
2024-08-01 12:19:46,736:INFO:[LightGBM] [Info] Number of data points in the train set: 243, number of used features: 27
2024-08-01 12:19:46,803:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:19:46,803:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:19:46,822:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:19:46,823:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:19:46,823:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001337 secs. 0 sparse feature groups
2024-08-01 12:19:46,823:INFO:[LightGBM] [Info] Start training from score -1.149256
2024-08-01 12:19:46,823:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:19:46,823:INFO:[LightGBM] [Info] Start training from score -0.858332
2024-08-01 12:19:46,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:46,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:19:47,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:47,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:47,653:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:48,053:INFO:Calculating mean and std
2024-08-01 12:19:48,053:INFO:Creating metrics dataframe
2024-08-01 12:19:48,403:INFO:Uploading results into container
2024-08-01 12:19:48,403:INFO:Uploading model into container now
2024-08-01 12:19:48,403:INFO:_master_model_container: 15
2024-08-01 12:19:48,403:INFO:_display_container: 2
2024-08-01 12:19:48,403:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:19:48,403:INFO:create_model() successfully completed......................................
2024-08-01 12:19:48,469:INFO:SubProcess create_model() end ==================================
2024-08-01 12:19:48,469:INFO:Creating metrics dataframe
2024-08-01 12:19:48,486:INFO:Initializing CatBoost Classifier
2024-08-01 12:19:48,486:INFO:Total runtime is 1.993821891148885 minutes
2024-08-01 12:19:48,486:INFO:SubProcess create_model() called ==================================
2024-08-01 12:19:48,486:INFO:Initializing create_model()
2024-08-01 12:19:48,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E39353E10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:19:48,486:INFO:Checking exceptions
2024-08-01 12:19:48,486:INFO:Importing libraries
2024-08-01 12:19:48,486:INFO:Copying training dataset
2024-08-01 12:19:48,486:INFO:Defining folds
2024-08-01 12:19:48,486:INFO:Declaring metric variables
2024-08-01 12:19:48,486:INFO:Importing untrained model
2024-08-01 12:19:48,486:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:19:48,486:INFO:Starting cross validation
2024-08-01 12:19:48,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:19:54,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:54,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:19:54,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:00,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:00,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:00,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:07,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:07,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:07,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:13,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:13,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:13,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:19,552:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:19,552:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:19,552:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:25,885:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:25,885:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:25,902:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:32,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:32,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:32,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:38,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:38,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:38,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:44,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:44,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:44,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:50,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:50,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:50,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:20:51,295:INFO:Calculating mean and std
2024-08-01 12:20:51,296:INFO:Creating metrics dataframe
2024-08-01 12:20:51,652:INFO:Uploading results into container
2024-08-01 12:20:51,652:INFO:Uploading model into container now
2024-08-01 12:20:51,652:INFO:_master_model_container: 16
2024-08-01 12:20:51,652:INFO:_display_container: 2
2024-08-01 12:20:51,652:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E39232190>
2024-08-01 12:20:51,660:INFO:create_model() successfully completed......................................
2024-08-01 12:20:51,718:INFO:SubProcess create_model() end ==================================
2024-08-01 12:20:51,718:INFO:Creating metrics dataframe
2024-08-01 12:20:51,735:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:20:51,735:INFO:Initializing create_model()
2024-08-01 12:20:51,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:20:51,735:INFO:Checking exceptions
2024-08-01 12:20:51,735:INFO:Importing libraries
2024-08-01 12:20:51,735:INFO:Copying training dataset
2024-08-01 12:20:51,735:INFO:Defining folds
2024-08-01 12:20:51,735:INFO:Declaring metric variables
2024-08-01 12:20:51,735:INFO:Importing untrained model
2024-08-01 12:20:51,735:INFO:Declaring custom model
2024-08-01 12:20:51,735:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:20:51,735:INFO:Cross validation set to False
2024-08-01 12:20:51,735:INFO:Fitting Model
2024-08-01 12:20:52,269:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:20:52,269:INFO:create_model() successfully completed......................................
2024-08-01 12:20:52,338:INFO:Initializing create_model()
2024-08-01 12:20:52,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:20:52,338:INFO:Checking exceptions
2024-08-01 12:20:52,338:INFO:Importing libraries
2024-08-01 12:20:52,338:INFO:Copying training dataset
2024-08-01 12:20:52,353:INFO:Defining folds
2024-08-01 12:20:52,353:INFO:Declaring metric variables
2024-08-01 12:20:52,353:INFO:Importing untrained model
2024-08-01 12:20:52,353:INFO:Declaring custom model
2024-08-01 12:20:52,353:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:20:52,353:INFO:Cross validation set to False
2024-08-01 12:20:52,353:INFO:Fitting Model
2024-08-01 12:20:52,989:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:20:52,989:INFO:create_model() successfully completed......................................
2024-08-01 12:20:53,052:INFO:Initializing create_model()
2024-08-01 12:20:53,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:20:53,052:INFO:Checking exceptions
2024-08-01 12:20:53,067:INFO:Importing libraries
2024-08-01 12:20:53,067:INFO:Copying training dataset
2024-08-01 12:20:53,069:INFO:Defining folds
2024-08-01 12:20:53,069:INFO:Declaring metric variables
2024-08-01 12:20:53,069:INFO:Importing untrained model
2024-08-01 12:20:53,069:INFO:Declaring custom model
2024-08-01 12:20:53,069:INFO:str Imported successfully
2024-08-01 12:20:53,069:INFO:Cross validation set to False
2024-08-01 12:20:53,069:INFO:Fitting Model
2024-08-01 12:20:53,571:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797)
2024-08-01 12:20:53,571:INFO:create_model() successfully completed......................................
2024-08-01 12:20:53,635:INFO:Initializing create_model()
2024-08-01 12:20:53,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:20:53,635:INFO:Checking exceptions
2024-08-01 12:20:53,636:INFO:Importing libraries
2024-08-01 12:20:53,636:INFO:Copying training dataset
2024-08-01 12:20:53,639:INFO:Defining folds
2024-08-01 12:20:53,639:INFO:Declaring metric variables
2024-08-01 12:20:53,639:INFO:Importing untrained model
2024-08-01 12:20:53,639:INFO:Declaring custom model
2024-08-01 12:20:53,639:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:20:53,639:INFO:Cross validation set to False
2024-08-01 12:20:53,639:INFO:Fitting Model
2024-08-01 12:20:54,435:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:20:54,435:INFO:create_model() successfully completed......................................
2024-08-01 12:20:54,502:INFO:Initializing create_model()
2024-08-01 12:20:54,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=<catboost.core.CatBoostClassifier object at 0x0000028E39232190>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:20:54,502:INFO:Checking exceptions
2024-08-01 12:20:54,512:INFO:Importing libraries
2024-08-01 12:20:54,512:INFO:Copying training dataset
2024-08-01 12:20:54,513:INFO:Defining folds
2024-08-01 12:20:54,513:INFO:Declaring metric variables
2024-08-01 12:20:54,513:INFO:Importing untrained model
2024-08-01 12:20:54,513:INFO:Declaring custom model
2024-08-01 12:20:54,513:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:20:54,513:INFO:Cross validation set to False
2024-08-01 12:20:54,513:INFO:Fitting Model
2024-08-01 12:21:00,551:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E39310050>
2024-08-01 12:21:00,551:INFO:create_model() successfully completed......................................
2024-08-01 12:21:00,618:INFO:Initializing create_model()
2024-08-01 12:21:00,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:00,618:INFO:Checking exceptions
2024-08-01 12:21:00,619:INFO:Importing libraries
2024-08-01 12:21:00,619:INFO:Copying training dataset
2024-08-01 12:21:00,620:INFO:Defining folds
2024-08-01 12:21:00,620:INFO:Declaring metric variables
2024-08-01 12:21:00,620:INFO:Importing untrained model
2024-08-01 12:21:00,620:INFO:Declaring custom model
2024-08-01 12:21:00,620:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:21:00,620:INFO:Cross validation set to False
2024-08-01 12:21:00,620:INFO:Fitting Model
2024-08-01 12:21:00,718:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:21:00,718:INFO:[LightGBM] [Info] Total Bins 246
2024-08-01 12:21:00,718:INFO:[LightGBM] [Info] Number of data points in the train set: 270, number of used features: 27
2024-08-01 12:21:00,802:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:21:00,802:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:21:00,821:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:21:00,822:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:21:00,822:INFO:[LightGBM] [Info] 16 dense feature groups (0.00 MB) transferred to GPU in 0.001265 secs. 0 sparse feature groups
2024-08-01 12:21:00,822:INFO:[LightGBM] [Info] Start training from score -1.155771
2024-08-01 12:21:00,822:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:21:00,822:INFO:[LightGBM] [Info] Start training from score -0.853490
2024-08-01 12:21:00,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:00,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:21:01,971:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:21:01,971:INFO:create_model() successfully completed......................................
2024-08-01 12:21:02,057:INFO:Initializing create_model()
2024-08-01 12:21:02,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:02,058:INFO:Checking exceptions
2024-08-01 12:21:02,059:INFO:Importing libraries
2024-08-01 12:21:02,059:INFO:Copying training dataset
2024-08-01 12:21:02,061:INFO:Defining folds
2024-08-01 12:21:02,061:INFO:Declaring metric variables
2024-08-01 12:21:02,061:INFO:Importing untrained model
2024-08-01 12:21:02,062:INFO:Declaring custom model
2024-08-01 12:21:02,062:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:21:02,063:INFO:Cross validation set to False
2024-08-01 12:21:02,063:INFO:Fitting Model
2024-08-01 12:21:02,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:21:02,521:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:21:02,521:INFO:create_model() successfully completed......................................
2024-08-01 12:21:02,592:INFO:Initializing create_model()
2024-08-01 12:21:02,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:02,592:INFO:Checking exceptions
2024-08-01 12:21:02,594:INFO:Importing libraries
2024-08-01 12:21:02,594:INFO:Copying training dataset
2024-08-01 12:21:02,594:INFO:Defining folds
2024-08-01 12:21:02,594:INFO:Declaring metric variables
2024-08-01 12:21:02,594:INFO:Importing untrained model
2024-08-01 12:21:02,594:INFO:Declaring custom model
2024-08-01 12:21:02,594:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:21:02,594:INFO:Cross validation set to False
2024-08-01 12:21:02,594:INFO:Fitting Model
2024-08-01 12:21:03,118:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:21:03,118:INFO:create_model() successfully completed......................................
2024-08-01 12:21:03,194:INFO:Initializing create_model()
2024-08-01 12:21:03,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:03,194:INFO:Checking exceptions
2024-08-01 12:21:03,195:INFO:Importing libraries
2024-08-01 12:21:03,195:INFO:Copying training dataset
2024-08-01 12:21:03,198:INFO:Defining folds
2024-08-01 12:21:03,198:INFO:Declaring metric variables
2024-08-01 12:21:03,198:INFO:Importing untrained model
2024-08-01 12:21:03,198:INFO:Declaring custom model
2024-08-01 12:21:03,198:INFO:Ridge Classifier Imported successfully
2024-08-01 12:21:03,199:INFO:Cross validation set to False
2024-08-01 12:21:03,199:INFO:Fitting Model
2024-08-01 12:21:03,635:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001)
2024-08-01 12:21:03,635:INFO:create_model() successfully completed......................................
2024-08-01 12:21:03,706:INFO:Initializing create_model()
2024-08-01 12:21:03,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:03,706:INFO:Checking exceptions
2024-08-01 12:21:03,708:INFO:Importing libraries
2024-08-01 12:21:03,708:INFO:Copying training dataset
2024-08-01 12:21:03,708:INFO:Defining folds
2024-08-01 12:21:03,708:INFO:Declaring metric variables
2024-08-01 12:21:03,708:INFO:Importing untrained model
2024-08-01 12:21:03,708:INFO:Declaring custom model
2024-08-01 12:21:03,708:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:21:03,708:INFO:Cross validation set to False
2024-08-01 12:21:03,708:INFO:Fitting Model
2024-08-01 12:21:04,301:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:21:04] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:21:04,752:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:21:04,752:INFO:create_model() successfully completed......................................
2024-08-01 12:21:04,802:INFO:Initializing create_model()
2024-08-01 12:21:04,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:04,802:INFO:Checking exceptions
2024-08-01 12:21:04,815:INFO:Importing libraries
2024-08-01 12:21:04,815:INFO:Copying training dataset
2024-08-01 12:21:04,816:INFO:Defining folds
2024-08-01 12:21:04,816:INFO:Declaring metric variables
2024-08-01 12:21:04,818:INFO:Importing untrained model
2024-08-01 12:21:04,818:INFO:Declaring custom model
2024-08-01 12:21:04,818:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:21:04,819:INFO:Cross validation set to False
2024-08-01 12:21:04,819:INFO:Fitting Model
2024-08-01 12:21:05,288:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:21:05,288:INFO:create_model() successfully completed......................................
2024-08-01 12:21:05,359:INFO:Initializing create_model()
2024-08-01 12:21:05,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:05,359:INFO:Checking exceptions
2024-08-01 12:21:05,359:INFO:Importing libraries
2024-08-01 12:21:05,359:INFO:Copying training dataset
2024-08-01 12:21:05,359:INFO:Defining folds
2024-08-01 12:21:05,359:INFO:Declaring metric variables
2024-08-01 12:21:05,359:INFO:Importing untrained model
2024-08-01 12:21:05,359:INFO:Declaring custom model
2024-08-01 12:21:05,359:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:21:05,359:INFO:Cross validation set to False
2024-08-01 12:21:05,359:INFO:Fitting Model
2024-08-01 12:21:05,821:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best')
2024-08-01 12:21:05,821:INFO:create_model() successfully completed......................................
2024-08-01 12:21:05,889:INFO:Initializing create_model()
2024-08-01 12:21:05,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:05,889:INFO:Checking exceptions
2024-08-01 12:21:05,890:INFO:Importing libraries
2024-08-01 12:21:05,890:INFO:Copying training dataset
2024-08-01 12:21:05,892:INFO:Defining folds
2024-08-01 12:21:05,893:INFO:Declaring metric variables
2024-08-01 12:21:05,893:INFO:Importing untrained model
2024-08-01 12:21:05,893:INFO:Declaring custom model
2024-08-01 12:21:05,893:INFO:Logistic Regression Imported successfully
2024-08-01 12:21:05,894:INFO:Cross validation set to False
2024-08-01 12:21:05,894:INFO:Fitting Model
2024-08-01 12:21:06,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:21:06,491:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:21:06,491:INFO:create_model() successfully completed......................................
2024-08-01 12:21:06,551:INFO:Initializing create_model()
2024-08-01 12:21:06,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:06,551:INFO:Checking exceptions
2024-08-01 12:21:06,551:INFO:Importing libraries
2024-08-01 12:21:06,551:INFO:Copying training dataset
2024-08-01 12:21:06,551:INFO:Defining folds
2024-08-01 12:21:06,551:INFO:Declaring metric variables
2024-08-01 12:21:06,551:INFO:Importing untrained model
2024-08-01 12:21:06,551:INFO:Declaring custom model
2024-08-01 12:21:06,551:INFO:Naive Bayes Imported successfully
2024-08-01 12:21:06,551:INFO:Cross validation set to False
2024-08-01 12:21:06,551:INFO:Fitting Model
2024-08-01 12:21:07,018:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:21:07,018:INFO:create_model() successfully completed......................................
2024-08-01 12:21:07,090:INFO:_master_model_container: 16
2024-08-01 12:21:07,090:INFO:_display_container: 2
2024-08-01 12:21:07,092:INFO:[SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), <catboost.core.CatBoostClassifier object at 0x0000028E39310050>, LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001), XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09)]
2024-08-01 12:21:07,092:INFO:compare_models() successfully completed......................................
2024-08-01 12:21:07,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\codecarbon\output_methods\file.py:50: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  df = pd.concat([df, pd.DataFrame.from_records([dict(total.values)])])

2024-08-01 12:21:07,104:INFO:Initializing compare_models()
2024-08-01 12:21:07,104:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:21:07,104:INFO:Checking exceptions
2024-08-01 12:21:07,104:INFO:Preparing display monitor
2024-08-01 12:21:07,117:INFO:Initializing Logistic Regression
2024-08-01 12:21:07,117:INFO:Total runtime is 0.0 minutes
2024-08-01 12:21:07,119:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:07,119:INFO:Initializing create_model()
2024-08-01 12:21:07,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:07,119:INFO:Checking exceptions
2024-08-01 12:21:07,119:INFO:Importing libraries
2024-08-01 12:21:07,119:INFO:Copying training dataset
2024-08-01 12:21:07,121:INFO:Defining folds
2024-08-01 12:21:07,121:INFO:Declaring metric variables
2024-08-01 12:21:07,124:INFO:Importing untrained model
2024-08-01 12:21:07,124:INFO:Logistic Regression Imported successfully
2024-08-01 12:21:07,129:INFO:Starting cross validation
2024-08-01 12:21:07,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:07,335:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:07,335:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:07,335:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:07,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:07,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:07,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:08,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:08,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:08,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,089:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,090:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,092:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:09,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,237:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,239:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:10,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,376:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,377:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:11,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:12,538:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:12,539:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:12,540:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:12,901:INFO:Calculating mean and std
2024-08-01 12:21:12,901:INFO:Creating metrics dataframe
2024-08-01 12:21:13,251:INFO:Uploading results into container
2024-08-01 12:21:13,251:INFO:Uploading model into container now
2024-08-01 12:21:13,267:INFO:_master_model_container: 17
2024-08-01 12:21:13,267:INFO:_display_container: 3
2024-08-01 12:21:13,268:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:21:13,268:INFO:create_model() successfully completed......................................
2024-08-01 12:21:13,318:INFO:SubProcess create_model() end ==================================
2024-08-01 12:21:13,318:INFO:Creating metrics dataframe
2024-08-01 12:21:13,318:INFO:Initializing K Neighbors Classifier
2024-08-01 12:21:13,318:INFO:Total runtime is 0.10334959427515665 minutes
2024-08-01 12:21:13,318:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:13,318:INFO:Initializing create_model()
2024-08-01 12:21:13,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:13,318:INFO:Checking exceptions
2024-08-01 12:21:13,318:INFO:Importing libraries
2024-08-01 12:21:13,318:INFO:Copying training dataset
2024-08-01 12:21:13,333:INFO:Defining folds
2024-08-01 12:21:13,333:INFO:Declaring metric variables
2024-08-01 12:21:13,335:INFO:Importing untrained model
2024-08-01 12:21:13,335:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:21:13,335:INFO:Starting cross validation
2024-08-01 12:21:13,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:13,539:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:13,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:14,335:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:14,585:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:15,151:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:15,402:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:15,968:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:16,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:16,785:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:17,035:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:17,601:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:17,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:18,420:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:18,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:19,218:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:19,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:20,021:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:20,287:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:20,853:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:21,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:21,451:INFO:Calculating mean and std
2024-08-01 12:21:21,451:INFO:Creating metrics dataframe
2024-08-01 12:21:21,818:INFO:Uploading results into container
2024-08-01 12:21:21,819:INFO:Uploading model into container now
2024-08-01 12:21:21,819:INFO:_master_model_container: 18
2024-08-01 12:21:21,819:INFO:_display_container: 3
2024-08-01 12:21:21,819:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:21:21,819:INFO:create_model() successfully completed......................................
2024-08-01 12:21:21,887:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:21:21,887:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:21:21,888:INFO:Initializing create_model()
2024-08-01 12:21:21,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:21,888:INFO:Checking exceptions
2024-08-01 12:21:21,888:INFO:Importing libraries
2024-08-01 12:21:21,888:INFO:Copying training dataset
2024-08-01 12:21:21,890:INFO:Defining folds
2024-08-01 12:21:21,890:INFO:Declaring metric variables
2024-08-01 12:21:21,892:INFO:Importing untrained model
2024-08-01 12:21:21,893:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:21:21,898:INFO:Starting cross validation
2024-08-01 12:21:21,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:22,101:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:22,354:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:22,918:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:23,178:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:23,718:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:23,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:24,526:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:24,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:25,333:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:25,585:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:26,137:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:26,385:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:26,951:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:27,201:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:27,754:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:28,001:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:28,568:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:28,818:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:29,401:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:29,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:21:30,001:INFO:Calculating mean and std
2024-08-01 12:21:30,001:INFO:Creating metrics dataframe
2024-08-01 12:21:30,368:INFO:Uploading results into container
2024-08-01 12:21:30,368:INFO:Uploading model into container now
2024-08-01 12:21:30,368:INFO:_master_model_container: 19
2024-08-01 12:21:30,368:INFO:_display_container: 3
2024-08-01 12:21:30,368:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:21:30,377:INFO:create_model() successfully completed......................................
2024-08-01 12:21:30,434:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:21:30,434:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:21:30,434:INFO:Initializing Naive Bayes
2024-08-01 12:21:30,434:INFO:Total runtime is 0.3886233965555827 minutes
2024-08-01 12:21:30,434:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:30,434:INFO:Initializing create_model()
2024-08-01 12:21:30,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:30,434:INFO:Checking exceptions
2024-08-01 12:21:30,434:INFO:Importing libraries
2024-08-01 12:21:30,434:INFO:Copying training dataset
2024-08-01 12:21:30,434:INFO:Defining folds
2024-08-01 12:21:30,434:INFO:Declaring metric variables
2024-08-01 12:21:30,434:INFO:Importing untrained model
2024-08-01 12:21:30,434:INFO:Naive Bayes Imported successfully
2024-08-01 12:21:30,434:INFO:Starting cross validation
2024-08-01 12:21:30,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:30,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:30,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:30,651:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,776:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:31,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:31,779:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:32,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:33,467:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:33,468:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:33,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:34,021:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:34,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,701:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,717:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:35,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:36,075:INFO:Calculating mean and std
2024-08-01 12:21:36,076:INFO:Creating metrics dataframe
2024-08-01 12:21:36,434:INFO:Uploading results into container
2024-08-01 12:21:36,434:INFO:Uploading model into container now
2024-08-01 12:21:36,434:INFO:_master_model_container: 20
2024-08-01 12:21:36,434:INFO:_display_container: 3
2024-08-01 12:21:36,434:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:21:36,434:INFO:create_model() successfully completed......................................
2024-08-01 12:21:36,501:INFO:SubProcess create_model() end ==================================
2024-08-01 12:21:36,501:INFO:Creating metrics dataframe
2024-08-01 12:21:36,501:INFO:Initializing Decision Tree Classifier
2024-08-01 12:21:36,501:INFO:Total runtime is 0.4897324045499166 minutes
2024-08-01 12:21:36,501:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:36,501:INFO:Initializing create_model()
2024-08-01 12:21:36,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:36,501:INFO:Checking exceptions
2024-08-01 12:21:36,501:INFO:Importing libraries
2024-08-01 12:21:36,501:INFO:Copying training dataset
2024-08-01 12:21:36,517:INFO:Defining folds
2024-08-01 12:21:36,517:INFO:Declaring metric variables
2024-08-01 12:21:36,518:INFO:Importing untrained model
2024-08-01 12:21:36,518:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:21:36,518:INFO:Starting cross validation
2024-08-01 12:21:36,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:36,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:36,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:36,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:37,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:38,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:39,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:39,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:39,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,087:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,088:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,089:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:40,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:41,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:42,134:INFO:Calculating mean and std
2024-08-01 12:21:42,134:INFO:Creating metrics dataframe
2024-08-01 12:21:42,486:INFO:Uploading results into container
2024-08-01 12:21:42,486:INFO:Uploading model into container now
2024-08-01 12:21:42,486:INFO:_master_model_container: 21
2024-08-01 12:21:42,486:INFO:_display_container: 3
2024-08-01 12:21:42,496:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best')
2024-08-01 12:21:42,496:INFO:create_model() successfully completed......................................
2024-08-01 12:21:42,551:INFO:SubProcess create_model() end ==================================
2024-08-01 12:21:42,551:INFO:Creating metrics dataframe
2024-08-01 12:21:42,551:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:21:42,551:INFO:Total runtime is 0.5905639489491781 minutes
2024-08-01 12:21:42,551:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:42,551:INFO:Initializing create_model()
2024-08-01 12:21:42,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:42,551:INFO:Checking exceptions
2024-08-01 12:21:42,551:INFO:Importing libraries
2024-08-01 12:21:42,551:INFO:Copying training dataset
2024-08-01 12:21:42,551:INFO:Defining folds
2024-08-01 12:21:42,551:INFO:Declaring metric variables
2024-08-01 12:21:42,567:INFO:Importing untrained model
2024-08-01 12:21:42,568:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:21:42,571:INFO:Starting cross validation
2024-08-01 12:21:42,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:42,734:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:42,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:42,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:42,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,268:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:43,269:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,803:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:43,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:43,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:43,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,334:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:44,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:44,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,873:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:44,873:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,874:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:44,875:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:44,876:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,399:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:45,399:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,402:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:45,402:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,933:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:45,933:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,934:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:45,934:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,451:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:46,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,983:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:46,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:46,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:46,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:47,501:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:47,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:47,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:47,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:47,851:INFO:Calculating mean and std
2024-08-01 12:21:47,851:INFO:Creating metrics dataframe
2024-08-01 12:21:48,221:INFO:Uploading results into container
2024-08-01 12:21:48,221:INFO:Uploading model into container now
2024-08-01 12:21:48,221:INFO:_master_model_container: 22
2024-08-01 12:21:48,221:INFO:_display_container: 3
2024-08-01 12:21:48,221:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:21:48,221:INFO:create_model() successfully completed......................................
2024-08-01 12:21:48,284:INFO:SubProcess create_model() end ==================================
2024-08-01 12:21:48,284:INFO:Creating metrics dataframe
2024-08-01 12:21:48,284:INFO:Initializing Ridge Classifier
2024-08-01 12:21:48,284:INFO:Total runtime is 0.6861189126968383 minutes
2024-08-01 12:21:48,284:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:48,284:INFO:Initializing create_model()
2024-08-01 12:21:48,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:48,284:INFO:Checking exceptions
2024-08-01 12:21:48,284:INFO:Importing libraries
2024-08-01 12:21:48,284:INFO:Copying training dataset
2024-08-01 12:21:48,284:INFO:Defining folds
2024-08-01 12:21:48,284:INFO:Declaring metric variables
2024-08-01 12:21:48,300:INFO:Importing untrained model
2024-08-01 12:21:48,301:INFO:Ridge Classifier Imported successfully
2024-08-01 12:21:48,301:INFO:Starting cross validation
2024-08-01 12:21:48,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:48,451:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:48,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:48,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:48,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:48,979:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:48,980:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:48,981:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:48,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,483:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:49,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,486:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,984:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:49,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:49,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:50,501:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:50,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:50,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:50,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,004:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:51,004:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,004:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,004:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,517:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:51,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:51,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,052:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:52,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,584:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:52,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:52,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:53,101:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:21:53,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:53,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:53,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:53,484:INFO:Calculating mean and std
2024-08-01 12:21:53,485:INFO:Creating metrics dataframe
2024-08-01 12:21:53,851:INFO:Uploading results into container
2024-08-01 12:21:53,851:INFO:Uploading model into container now
2024-08-01 12:21:53,851:INFO:_master_model_container: 23
2024-08-01 12:21:53,851:INFO:_display_container: 3
2024-08-01 12:21:53,851:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001)
2024-08-01 12:21:53,853:INFO:create_model() successfully completed......................................
2024-08-01 12:21:53,917:INFO:SubProcess create_model() end ==================================
2024-08-01 12:21:53,917:INFO:Creating metrics dataframe
2024-08-01 12:21:53,917:INFO:Initializing Random Forest Classifier
2024-08-01 12:21:53,917:INFO:Total runtime is 0.7800055424372354 minutes
2024-08-01 12:21:53,917:INFO:SubProcess create_model() called ==================================
2024-08-01 12:21:53,917:INFO:Initializing create_model()
2024-08-01 12:21:53,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:21:53,917:INFO:Checking exceptions
2024-08-01 12:21:53,917:INFO:Importing libraries
2024-08-01 12:21:53,917:INFO:Copying training dataset
2024-08-01 12:21:53,917:INFO:Defining folds
2024-08-01 12:21:53,917:INFO:Declaring metric variables
2024-08-01 12:21:53,917:INFO:Importing untrained model
2024-08-01 12:21:53,917:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:21:53,935:INFO:Starting cross validation
2024-08-01 12:21:53,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:21:54,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:54,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:54,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:54,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:54,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:54,984:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:55,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:55,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:55,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:56,457:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:56,457:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:56,457:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,191:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,191:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,191:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:57,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:58,601:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:58,601:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:58,601:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:21:58,601:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:59,406:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:59,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:21:59,410:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,068:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,728:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,733:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:00,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:01,086:INFO:Calculating mean and std
2024-08-01 12:22:01,086:INFO:Creating metrics dataframe
2024-08-01 12:22:01,434:INFO:Uploading results into container
2024-08-01 12:22:01,434:INFO:Uploading model into container now
2024-08-01 12:22:01,434:INFO:_master_model_container: 24
2024-08-01 12:22:01,434:INFO:_display_container: 3
2024-08-01 12:22:01,445:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:22:01,445:INFO:create_model() successfully completed......................................
2024-08-01 12:22:01,501:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:01,501:INFO:Creating metrics dataframe
2024-08-01 12:22:01,501:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:22:01,501:INFO:Total runtime is 0.9063923557599385 minutes
2024-08-01 12:22:01,501:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:01,501:INFO:Initializing create_model()
2024-08-01 12:22:01,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:01,501:INFO:Checking exceptions
2024-08-01 12:22:01,501:INFO:Importing libraries
2024-08-01 12:22:01,501:INFO:Copying training dataset
2024-08-01 12:22:01,501:INFO:Defining folds
2024-08-01 12:22:01,501:INFO:Declaring metric variables
2024-08-01 12:22:01,517:INFO:Importing untrained model
2024-08-01 12:22:01,519:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:22:01,520:INFO:Starting cross validation
2024-08-01 12:22:01,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:01,620:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:01,732:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:01,733:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:01,735:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,184:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:02,301:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,301:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,301:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:02,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,880:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:02,881:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:03,340:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:03,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:03,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:03,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:03,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:04,001:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:04,017:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:04,017:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:04,468:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:04,577:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:04,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:04,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:05,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:22:05,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,600:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:05,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:05,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:06,280:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,281:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,283:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:22:06,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:06,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:07,220:INFO:Calculating mean and std
2024-08-01 12:22:07,220:INFO:Creating metrics dataframe
2024-08-01 12:22:07,584:INFO:Uploading results into container
2024-08-01 12:22:07,584:INFO:Uploading model into container now
2024-08-01 12:22:07,584:INFO:_master_model_container: 25
2024-08-01 12:22:07,584:INFO:_display_container: 3
2024-08-01 12:22:07,587:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:22:07,587:INFO:create_model() successfully completed......................................
2024-08-01 12:22:07,650:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:07,650:INFO:Creating metrics dataframe
2024-08-01 12:22:07,653:INFO:Initializing Ada Boost Classifier
2024-08-01 12:22:07,653:INFO:Total runtime is 1.0089385946591694 minutes
2024-08-01 12:22:07,653:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:07,653:INFO:Initializing create_model()
2024-08-01 12:22:07,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:07,653:INFO:Checking exceptions
2024-08-01 12:22:07,653:INFO:Importing libraries
2024-08-01 12:22:07,653:INFO:Copying training dataset
2024-08-01 12:22:07,653:INFO:Defining folds
2024-08-01 12:22:07,653:INFO:Declaring metric variables
2024-08-01 12:22:07,653:INFO:Importing untrained model
2024-08-01 12:22:07,653:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:22:07,667:INFO:Starting cross validation
2024-08-01 12:22:07,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:07,949:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:07,950:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:07,950:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:08,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:08,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:08,584:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:09,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:10,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:10,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:10,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,774:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,776:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:11,777:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:12,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:12,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:12,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,050:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,050:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,050:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,684:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,684:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:13,684:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:14,050:INFO:Calculating mean and std
2024-08-01 12:22:14,050:INFO:Creating metrics dataframe
2024-08-01 12:22:14,403:INFO:Uploading results into container
2024-08-01 12:22:14,403:INFO:Uploading model into container now
2024-08-01 12:22:14,403:INFO:_master_model_container: 26
2024-08-01 12:22:14,403:INFO:_display_container: 3
2024-08-01 12:22:14,403:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797)
2024-08-01 12:22:14,411:INFO:create_model() successfully completed......................................
2024-08-01 12:22:14,476:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:14,476:INFO:Creating metrics dataframe
2024-08-01 12:22:14,481:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:22:14,481:INFO:Total runtime is 1.1227300564448037 minutes
2024-08-01 12:22:14,483:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:14,483:INFO:Initializing create_model()
2024-08-01 12:22:14,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:14,484:INFO:Checking exceptions
2024-08-01 12:22:14,484:INFO:Importing libraries
2024-08-01 12:22:14,484:INFO:Copying training dataset
2024-08-01 12:22:14,484:INFO:Defining folds
2024-08-01 12:22:14,484:INFO:Declaring metric variables
2024-08-01 12:22:14,484:INFO:Importing untrained model
2024-08-01 12:22:14,484:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:22:14,484:INFO:Starting cross validation
2024-08-01 12:22:14,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:14,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:14,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:14,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:15,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:15,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:15,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,789:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:16,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:17,456:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:17,456:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:17,456:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:18,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:19,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:19,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:19,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,150:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,150:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,150:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:20,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:21,200:INFO:Calculating mean and std
2024-08-01 12:22:21,200:INFO:Creating metrics dataframe
2024-08-01 12:22:21,550:INFO:Uploading results into container
2024-08-01 12:22:21,550:INFO:Uploading model into container now
2024-08-01 12:22:21,550:INFO:_master_model_container: 27
2024-08-01 12:22:21,550:INFO:_display_container: 3
2024-08-01 12:22:21,559:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:22:21,559:INFO:create_model() successfully completed......................................
2024-08-01 12:22:21,617:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:21,617:INFO:Creating metrics dataframe
2024-08-01 12:22:21,623:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:22:21,623:INFO:Total runtime is 1.2417669375737506 minutes
2024-08-01 12:22:21,623:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:21,623:INFO:Initializing create_model()
2024-08-01 12:22:21,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:21,623:INFO:Checking exceptions
2024-08-01 12:22:21,623:INFO:Importing libraries
2024-08-01 12:22:21,623:INFO:Copying training dataset
2024-08-01 12:22:21,623:INFO:Defining folds
2024-08-01 12:22:21,623:INFO:Declaring metric variables
2024-08-01 12:22:21,623:INFO:Importing untrained model
2024-08-01 12:22:21,634:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:22:21,634:INFO:Starting cross validation
2024-08-01 12:22:21,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:21,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:21,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:21,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,986:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,986:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:22,986:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:23,562:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:23,562:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:23,566:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:24,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:25,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,417:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,987:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,987:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:26,987:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:27,359:INFO:Calculating mean and std
2024-08-01 12:22:27,360:INFO:Creating metrics dataframe
2024-08-01 12:22:27,700:INFO:Uploading results into container
2024-08-01 12:22:27,700:INFO:Uploading model into container now
2024-08-01 12:22:27,700:INFO:_master_model_container: 28
2024-08-01 12:22:27,700:INFO:_display_container: 3
2024-08-01 12:22:27,700:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:22:27,700:INFO:create_model() successfully completed......................................
2024-08-01 12:22:27,771:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:27,771:INFO:Creating metrics dataframe
2024-08-01 12:22:27,776:INFO:Initializing Extra Trees Classifier
2024-08-01 12:22:27,776:INFO:Total runtime is 1.3443121830622353 minutes
2024-08-01 12:22:27,778:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:27,778:INFO:Initializing create_model()
2024-08-01 12:22:27,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:27,778:INFO:Checking exceptions
2024-08-01 12:22:27,778:INFO:Importing libraries
2024-08-01 12:22:27,778:INFO:Copying training dataset
2024-08-01 12:22:27,780:INFO:Defining folds
2024-08-01 12:22:27,780:INFO:Declaring metric variables
2024-08-01 12:22:27,782:INFO:Importing untrained model
2024-08-01 12:22:27,784:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:22:27,784:INFO:Starting cross validation
2024-08-01 12:22:27,788:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:28,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:28,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:28,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:28,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:28,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:28,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:29,573:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:29,575:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:29,576:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:30,285:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:30,285:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:30,285:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,003:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,003:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,003:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,712:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,717:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:31,717:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:32,428:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:32,432:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:32,433:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,148:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,149:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,867:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:33,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:34,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:34,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:34,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:35,010:INFO:Calculating mean and std
2024-08-01 12:22:35,011:INFO:Creating metrics dataframe
2024-08-01 12:22:35,380:INFO:Uploading results into container
2024-08-01 12:22:35,380:INFO:Uploading model into container now
2024-08-01 12:22:35,380:INFO:_master_model_container: 29
2024-08-01 12:22:35,381:INFO:_display_container: 3
2024-08-01 12:22:35,381:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False)
2024-08-01 12:22:35,381:INFO:create_model() successfully completed......................................
2024-08-01 12:22:35,437:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:35,437:INFO:Creating metrics dataframe
2024-08-01 12:22:35,450:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:22:35,450:INFO:Total runtime is 1.4722169081370033 minutes
2024-08-01 12:22:35,450:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:35,450:INFO:Initializing create_model()
2024-08-01 12:22:35,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:35,450:INFO:Checking exceptions
2024-08-01 12:22:35,450:INFO:Importing libraries
2024-08-01 12:22:35,450:INFO:Copying training dataset
2024-08-01 12:22:35,450:INFO:Defining folds
2024-08-01 12:22:35,450:INFO:Declaring metric variables
2024-08-01 12:22:35,450:INFO:Importing untrained model
2024-08-01 12:22:35,450:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:22:35,450:INFO:Starting cross validation
2024-08-01 12:22:35,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:35,600:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:35] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:35,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:35,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:35,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:36,317:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:36] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:36,524:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:36,524:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:36,524:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:37,054:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:37] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:37,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:37,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:37,270:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:37,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:37] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:38,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:38,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:38,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:38,533:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:38] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:38,717:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:38,733:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:38,733:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:39,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:39] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:39,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:39,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:39,472:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:39,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:39] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:40,193:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:40,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:40,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:40,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:40] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:40,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:40,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:40,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:41,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:41] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:41,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:41,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:41,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:42,183:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:22:42] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:22:42,382:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:42,383:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:42,383:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:42,775:INFO:Calculating mean and std
2024-08-01 12:22:42,776:INFO:Creating metrics dataframe
2024-08-01 12:22:43,132:INFO:Uploading results into container
2024-08-01 12:22:43,133:INFO:Uploading model into container now
2024-08-01 12:22:43,133:INFO:_master_model_container: 30
2024-08-01 12:22:43,133:INFO:_display_container: 3
2024-08-01 12:22:43,134:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:22:43,134:INFO:create_model() successfully completed......................................
2024-08-01 12:22:43,199:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:43,200:INFO:Creating metrics dataframe
2024-08-01 12:22:43,200:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:22:43,200:INFO:Total runtime is 1.601381472746531 minutes
2024-08-01 12:22:43,200:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:43,200:INFO:Initializing create_model()
2024-08-01 12:22:43,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:43,200:INFO:Checking exceptions
2024-08-01 12:22:43,200:INFO:Importing libraries
2024-08-01 12:22:43,200:INFO:Copying training dataset
2024-08-01 12:22:43,200:INFO:Defining folds
2024-08-01 12:22:43,200:INFO:Declaring metric variables
2024-08-01 12:22:43,200:INFO:Importing untrained model
2024-08-01 12:22:43,200:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:22:43,217:INFO:Starting cross validation
2024-08-01 12:22:43,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:43,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:43,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:43,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,217:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:44,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:45,620:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:45,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:45,624:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:46,300:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:46,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:46,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,017:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,713:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:47,716:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:48,394:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:48,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:48,401:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,084:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,086:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,086:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:49,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:50,168:INFO:Calculating mean and std
2024-08-01 12:22:50,168:INFO:Creating metrics dataframe
2024-08-01 12:22:50,536:INFO:Uploading results into container
2024-08-01 12:22:50,536:INFO:Uploading model into container now
2024-08-01 12:22:50,536:INFO:_master_model_container: 31
2024-08-01 12:22:50,536:INFO:_display_container: 3
2024-08-01 12:22:50,536:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:22:50,536:INFO:create_model() successfully completed......................................
2024-08-01 12:22:50,602:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:50,602:INFO:Creating metrics dataframe
2024-08-01 12:22:50,616:INFO:Initializing CatBoost Classifier
2024-08-01 12:22:50,616:INFO:Total runtime is 1.7249908328056334 minutes
2024-08-01 12:22:50,616:INFO:SubProcess create_model() called ==================================
2024-08-01 12:22:50,616:INFO:Initializing create_model()
2024-08-01 12:22:50,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32AD7710>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:50,616:INFO:Checking exceptions
2024-08-01 12:22:50,616:INFO:Importing libraries
2024-08-01 12:22:50,616:INFO:Copying training dataset
2024-08-01 12:22:50,616:INFO:Defining folds
2024-08-01 12:22:50,616:INFO:Declaring metric variables
2024-08-01 12:22:50,616:INFO:Importing untrained model
2024-08-01 12:22:50,616:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:22:50,616:INFO:Starting cross validation
2024-08-01 12:22:50,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:22:50,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:50,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:50,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:51,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:51,452:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:51,452:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:52,635:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,218:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:53,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:54,403:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:54,403:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:54,403:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:55,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:56,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:56,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:56,182:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:22:56,559:INFO:Calculating mean and std
2024-08-01 12:22:56,561:INFO:Creating metrics dataframe
2024-08-01 12:22:56,935:INFO:Uploading results into container
2024-08-01 12:22:56,936:INFO:Uploading model into container now
2024-08-01 12:22:56,936:INFO:_master_model_container: 32
2024-08-01 12:22:56,936:INFO:_display_container: 3
2024-08-01 12:22:56,936:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3936CD90>
2024-08-01 12:22:56,936:INFO:create_model() successfully completed......................................
2024-08-01 12:22:56,983:INFO:SubProcess create_model() end ==================================
2024-08-01 12:22:56,983:INFO:Creating metrics dataframe
2024-08-01 12:22:57,000:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:22:57,006:INFO:Initializing create_model()
2024-08-01 12:22:57,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B32250>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:22:57,006:INFO:Checking exceptions
2024-08-01 12:22:57,006:INFO:Importing libraries
2024-08-01 12:22:57,006:INFO:Copying training dataset
2024-08-01 12:22:57,006:INFO:Defining folds
2024-08-01 12:22:57,006:INFO:Declaring metric variables
2024-08-01 12:22:57,006:INFO:Importing untrained model
2024-08-01 12:22:57,006:INFO:Declaring custom model
2024-08-01 12:22:57,006:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:22:57,006:INFO:Cross validation set to False
2024-08-01 12:22:57,006:INFO:Fitting Model
2024-08-01 12:22:57,483:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:22:57,483:INFO:create_model() successfully completed......................................
2024-08-01 12:22:57,567:INFO:_master_model_container: 32
2024-08-01 12:22:57,567:INFO:_display_container: 3
2024-08-01 12:22:57,567:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:22:57,567:INFO:compare_models() successfully completed......................................
2024-08-01 12:22:57,603:INFO:Initializing save_model()
2024-08-01 12:22:57,603:INFO:save_model(model=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2797, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_7525/SGDClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:22:57,603:INFO:Adding model into prep_pipe
2024-08-01 12:22:57,604:INFO:GPU_1_XAPI_ML_VALIDATION_7525/SGDClassifier.pkl saved in current working directory
2024-08-01 12:22:57,633:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=2797,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:22:57,633:INFO:save_model() successfully completed......................................
2024-08-01 12:22:58,116:INFO:Initializing save_model()
2024-08-01 12:22:58,116:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2797, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_7525/RandomForestClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:22:58,116:INFO:Adding model into prep_pipe
2024-08-01 12:22:58,154:INFO:GPU_1_XAPI_ML_VALIDATION_7525/RandomForestClassifier.pkl saved in current working directory
2024-08-01 12:22:58,183:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=2797,
                                        verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:22:58,183:INFO:save_model() successfully completed......................................
2024-08-01 12:22:58,666:INFO:Initializing save_model()
2024-08-01 12:22:58,666:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2797), model_name=GPU_1_XAPI_ML_VALIDATION_7525/AdaBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:22:58,666:INFO:Adding model into prep_pipe
2024-08-01 12:22:58,683:INFO:GPU_1_XAPI_ML_VALIDATION_7525/AdaBoostClassifier.pkl saved in current working directory
2024-08-01 12:22:58,716:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=2797))],
         verbose=False)
2024-08-01 12:22:58,716:INFO:save_model() successfully completed......................................
2024-08-01 12:22:59,200:INFO:Initializing save_model()
2024-08-01 12:22:59,200:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2797, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_7525/GradientBoostingClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:22:59,200:INFO:Adding model into prep_pipe
2024-08-01 12:22:59,218:INFO:GPU_1_XAPI_ML_VALIDATION_7525/GradientBoostingClassifier.pkl saved in current working directory
2024-08-01 12:22:59,250:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2797, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:22:59,250:INFO:save_model() successfully completed......................................
2024-08-01 12:22:59,733:INFO:Initializing save_model()
2024-08-01 12:22:59,733:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000028E39310050>, model_name=GPU_1_XAPI_ML_VALIDATION_7525/CatBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:22:59,733:INFO:Adding model into prep_pipe
2024-08-01 12:22:59,750:INFO:GPU_1_XAPI_ML_VALIDATION_7525/CatBoostClassifier.pkl saved in current working directory
2024-08-01 12:22:59,783:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000028E39310050>)],
         verbose=False)
2024-08-01 12:22:59,783:INFO:save_model() successfully completed......................................
2024-08-01 12:23:00,266:INFO:Initializing save_model()
2024-08-01 12:23:00,266:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=2797, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), model_name=GPU_1_XAPI_ML_VALIDATION_7525/LGBMClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:00,266:INFO:Adding model into prep_pipe
2024-08-01 12:23:00,283:INFO:GPU_1_XAPI_ML_VALIDATION_7525/LGBMClassifier.pkl saved in current working directory
2024-08-01 12:23:00,333:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, device='gpu',
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=20,
                                min_child_weight=0.001, min_split_gain=0.0,
                                n_estimators=100, n_jobs=-1, num_leaves=31,
                                objective=None, random_state=2797,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2024-08-01 12:23:00,333:INFO:save_model() successfully completed......................................
2024-08-01 12:23:00,836:INFO:Initializing save_model()
2024-08-01 12:23:00,836:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_7525/QuadraticDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:00,836:INFO:Adding model into prep_pipe
2024-08-01 12:23:00,836:INFO:GPU_1_XAPI_ML_VALIDATION_7525/QuadraticDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:23:00,866:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-08-01 12:23:00,866:INFO:save_model() successfully completed......................................
2024-08-01 12:23:01,350:INFO:Initializing save_model()
2024-08-01 12:23:01,350:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2797, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_7525/ExtraTreesClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:01,350:INFO:Adding model into prep_pipe
2024-08-01 12:23:01,386:INFO:GPU_1_XAPI_ML_VALIDATION_7525/ExtraTreesClassifier.pkl saved in current working directory
2024-08-01 12:23:01,416:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=2797,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:23:01,416:INFO:save_model() successfully completed......................................
2024-08-01 12:23:01,915:INFO:Initializing save_model()
2024-08-01 12:23:01,916:INFO:save_model(model=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2797, solver='auto',
                tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_7525/RidgeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:01,916:INFO:Adding model into prep_pipe
2024-08-01 12:23:01,919:INFO:GPU_1_XAPI_ML_VALIDATION_7525/RidgeClassifier.pkl saved in current working directory
2024-08-01 12:23:01,950:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=2797,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-08-01 12:23:01,950:INFO:save_model() successfully completed......................................
2024-08-01 12:23:02,433:INFO:Initializing save_model()
2024-08-01 12:23:02,433:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=GPU_1_XAPI_ML_VALIDATION_7525/XGBClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:02,433:INFO:Adding model into prep_pipe
2024-08-01 12:23:02,454:INFO:GPU_1_XAPI_ML_VALIDATION_7525/XGBClassifier.pkl saved in current working directory
2024-08-01 12:23:02,502:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-08-01 12:23:02,502:INFO:save_model() successfully completed......................................
2024-08-01 12:23:03,006:INFO:Initializing save_model()
2024-08-01 12:23:03,006:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_7525/LinearDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:03,006:INFO:Adding model into prep_pipe
2024-08-01 12:23:03,006:INFO:GPU_1_XAPI_ML_VALIDATION_7525/LinearDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:23:03,050:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-08-01 12:23:03,050:INFO:save_model() successfully completed......................................
2024-08-01 12:23:03,533:INFO:Initializing save_model()
2024-08-01 12:23:03,533:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2797, splitter='best'), model_name=GPU_1_XAPI_ML_VALIDATION_7525/DecisionTreeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:03,533:INFO:Adding model into prep_pipe
2024-08-01 12:23:03,534:INFO:GPU_1_XAPI_ML_VALIDATION_7525/DecisionTreeClassifier.pkl saved in current working directory
2024-08-01 12:23:03,576:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=2797, splitter='best'))],
         verbose=False)
2024-08-01 12:23:03,576:INFO:save_model() successfully completed......................................
2024-08-01 12:23:04,053:INFO:Initializing save_model()
2024-08-01 12:23:04,053:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_7525/LogisticRegression, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:04,053:INFO:Adding model into prep_pipe
2024-08-01 12:23:04,066:INFO:GPU_1_XAPI_ML_VALIDATION_7525/LogisticRegression.pkl saved in current working directory
2024-08-01 12:23:04,100:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2797,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-08-01 12:23:04,100:INFO:save_model() successfully completed......................................
2024-08-01 12:23:04,583:INFO:Initializing save_model()
2024-08-01 12:23:04,583:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=GPU_1_XAPI_ML_VALIDATION_7525/GaussianNB, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:23:04,583:INFO:Adding model into prep_pipe
2024-08-01 12:23:04,590:INFO:GPU_1_XAPI_ML_VALIDATION_7525/GaussianNB.pkl saved in current working directory
2024-08-01 12:23:04,616:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-08-01 12:23:04,616:INFO:save_model() successfully completed......................................
2024-08-01 12:23:05,083:WARNING:C:\Users\JAL\AppData\Local\Temp\ipykernel_24440\220787957.py:82: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  best_model[best_model.select_dtypes(include=['number']).columns] *= 100

2024-08-01 12:23:05,804:INFO:PyCaret ClassificationExperiment
2024-08-01 12:23:05,804:INFO:Logging name: clf-default-name
2024-08-01 12:23:05,804:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-01 12:23:05,804:INFO:version 3.0.0
2024-08-01 12:23:05,804:INFO:Initializing setup()
2024-08-01 12:23:05,804:INFO:self.USI: 81f0
2024-08-01 12:23:05,804:INFO:self._variable_keys: {'n_jobs_param', 'USI', 'log_plots_param', 'gpu_param', 'target_param', 'html_param', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'exp_id', 'data', 'idx', 'memory', 'fix_imbalance', 'is_multiclass', 'X_test', 'seed', 'X', 'fold_groups_param', 'y_test', '_ml_usecase', 'X_train', 'fold_generator', 'y_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y'}
2024-08-01 12:23:05,804:INFO:Checking environment
2024-08-01 12:23:05,804:INFO:python_version: 3.11.4
2024-08-01 12:23:05,804:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-08-01 12:23:05,804:INFO:machine: AMD64
2024-08-01 12:23:05,804:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-01 12:23:05,819:INFO:Memory: svmem(total=68659781632, available=49106259968, percent=28.5, used=19553521664, free=49106259968)
2024-08-01 12:23:05,819:INFO:Physical Core: 16
2024-08-01 12:23:05,819:INFO:Logical Core: 32
2024-08-01 12:23:05,819:INFO:Checking libraries
2024-08-01 12:23:05,819:INFO:System:
2024-08-01 12:23:05,819:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-08-01 12:23:05,819:INFO:executable: c:\Users\JAL\AppData\Local\Programs\Python\Python311\python.exe
2024-08-01 12:23:05,819:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-01 12:23:05,819:INFO:PyCaret required dependencies:
2024-08-01 12:23:05,819:INFO:                 pip: 24.1.2
2024-08-01 12:23:05,819:INFO:          setuptools: 70.3.0
2024-08-01 12:23:05,819:INFO:             pycaret: 3.0.0
2024-08-01 12:23:05,819:INFO:             IPython: 8.15.0
2024-08-01 12:23:05,819:INFO:          ipywidgets: 8.1.3
2024-08-01 12:23:05,819:INFO:                tqdm: 4.66.4
2024-08-01 12:23:05,819:INFO:               numpy: 1.24.4
2024-08-01 12:23:05,819:INFO:              pandas: 2.2.2
2024-08-01 12:23:05,819:INFO:              jinja2: 3.1.4
2024-08-01 12:23:05,819:INFO:               scipy: 1.11.4
2024-08-01 12:23:05,819:INFO:              joblib: 1.3.2
2024-08-01 12:23:05,819:INFO:             sklearn: 1.3.0
2024-08-01 12:23:05,819:INFO:                pyod: 2.0.1
2024-08-01 12:23:05,819:INFO:            imblearn: 0.12.3
2024-08-01 12:23:05,819:INFO:   category_encoders: 2.6.3
2024-08-01 12:23:05,819:INFO:            lightgbm: 4.3.0
2024-08-01 12:23:05,819:INFO:               numba: 0.60.0
2024-08-01 12:23:05,819:INFO:            requests: 2.32.3
2024-08-01 12:23:05,819:INFO:          matplotlib: 3.7.5
2024-08-01 12:23:05,819:INFO:          scikitplot: 0.3.7
2024-08-01 12:23:05,819:INFO:         yellowbrick: 1.5
2024-08-01 12:23:05,819:INFO:              plotly: 5.22.0
2024-08-01 12:23:05,819:INFO:             kaleido: 0.2.1
2024-08-01 12:23:05,820:INFO:         statsmodels: 0.14.2
2024-08-01 12:23:05,820:INFO:              sktime: 0.26.0
2024-08-01 12:23:05,820:INFO:               tbats: 1.1.3
2024-08-01 12:23:05,820:INFO:            pmdarima: 2.0.4
2024-08-01 12:23:05,820:INFO:              psutil: 5.9.5
2024-08-01 12:23:05,820:INFO:PyCaret optional dependencies:
2024-08-01 12:23:05,820:INFO:                shap: Not installed
2024-08-01 12:23:05,820:INFO:           interpret: Not installed
2024-08-01 12:23:05,820:INFO:                umap: Not installed
2024-08-01 12:23:05,820:INFO:    pandas_profiling: Not installed
2024-08-01 12:23:05,820:INFO:  explainerdashboard: Not installed
2024-08-01 12:23:05,820:INFO:             autoviz: Not installed
2024-08-01 12:23:05,820:INFO:           fairlearn: Not installed
2024-08-01 12:23:05,820:INFO:             xgboost: 2.0.3
2024-08-01 12:23:05,820:INFO:            catboost: 1.2.5
2024-08-01 12:23:05,820:INFO:              kmodes: Not installed
2024-08-01 12:23:05,820:INFO:             mlxtend: Not installed
2024-08-01 12:23:05,820:INFO:       statsforecast: 1.4.0
2024-08-01 12:23:05,820:INFO:        tune_sklearn: Not installed
2024-08-01 12:23:05,820:INFO:                 ray: 2.10.0
2024-08-01 12:23:05,820:INFO:            hyperopt: 0.2.7
2024-08-01 12:23:05,820:INFO:              optuna: Not installed
2024-08-01 12:23:05,820:INFO:               skopt: Not installed
2024-08-01 12:23:05,820:INFO:              mlflow: Not installed
2024-08-01 12:23:05,820:INFO:              gradio: Not installed
2024-08-01 12:23:05,820:INFO:             fastapi: Not installed
2024-08-01 12:23:05,820:INFO:             uvicorn: Not installed
2024-08-01 12:23:05,820:INFO:              m2cgen: Not installed
2024-08-01 12:23:05,820:INFO:           evidently: Not installed
2024-08-01 12:23:05,820:INFO:               fugue: Not installed
2024-08-01 12:23:05,820:INFO:           streamlit: 1.31.0
2024-08-01 12:23:05,820:INFO:             prophet: Not installed
2024-08-01 12:23:05,820:INFO:None
2024-08-01 12:23:05,820:INFO:Set up GPU usage.
2024-08-01 12:23:05,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,820:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2024-08-01 12:23:05,820:INFO:Set up data.
2024-08-01 12:23:05,825:INFO:Set up train/test split.
2024-08-01 12:23:05,828:INFO:Set up index.
2024-08-01 12:23:05,828:INFO:Set up folding strategy.
2024-08-01 12:23:05,828:INFO:Assigning column types.
2024-08-01 12:23:05,830:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-01 12:23:05,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:23:05,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,850:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:23:05,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:05,869:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:05,987:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:05,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,016:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:23:06,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:23:06,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,033:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:06,133:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:06,133:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-01 12:23:06,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:23:06,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,183:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:06,283:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:06,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:23:06,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,334:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:06,433:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:06,433:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-01 12:23:06,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,483:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:06,585:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:06,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,637:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:06,637:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:06,737:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:06,737:INFO:Preparing preprocessing pipeline...
2024-08-01 12:23:06,737:INFO:Set up label encoding.
2024-08-01 12:23:06,737:INFO:Set up simple imputation.
2024-08-01 12:23:06,737:INFO:Set up encoding of ordinal features.
2024-08-01 12:23:06,737:INFO:Set up encoding of categorical features.
2024-08-01 12:23:06,850:INFO:Finished creating preprocessing pipeline.
2024-08-01 12:23:06,883:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-08-01 12:23:06,883:INFO:Creating final display dataframe.
2024-08-01 12:23:07,118:INFO:Setup _display_container:                     Description             Value
0                    Session id              8226
1                        Target             Class
2                   Target type        Multiclass
3                Target mapping  H: 0, L: 1, M: 2
4           Original data shape         (480, 17)
5        Transformed data shape         (480, 67)
6   Transformed train set shape         (336, 67)
7    Transformed test set shape         (144, 67)
8              Ordinal features                 6
9              Numeric features                 4
10         Categorical features                12
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU              True
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              81f0
2024-08-01 12:23:07,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,169:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:07,259:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:07,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-01 12:23:07,302:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:23:07,401:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:23:07,402:INFO:setup() successfully completed in 1.95s...............
2024-08-01 12:23:07,402:INFO:Initializing compare_models()
2024-08-01 12:23:07,402:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:23:07,402:INFO:Checking exceptions
2024-08-01 12:23:07,403:INFO:Preparing display monitor
2024-08-01 12:23:07,418:INFO:Initializing Logistic Regression
2024-08-01 12:23:07,418:INFO:Total runtime is 0.0 minutes
2024-08-01 12:23:07,420:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:07,420:INFO:Initializing create_model()
2024-08-01 12:23:07,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:07,421:INFO:Checking exceptions
2024-08-01 12:23:07,421:INFO:Importing libraries
2024-08-01 12:23:07,421:INFO:Copying training dataset
2024-08-01 12:23:07,424:INFO:Defining folds
2024-08-01 12:23:07,425:INFO:Declaring metric variables
2024-08-01 12:23:07,427:INFO:Importing untrained model
2024-08-01 12:23:07,429:INFO:Logistic Regression Imported successfully
2024-08-01 12:23:07,436:INFO:Starting cross validation
2024-08-01 12:23:07,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:07,685:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:07,816:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:07,816:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:07,816:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:08,402:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:08,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:08,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:08,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:09,151:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:09,283:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:09,283:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:09,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:09,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:10,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:10,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:10,019:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:10,601:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:10,735:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:10,735:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:10,735:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:11,335:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:11,467:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:11,467:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:11,467:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,053:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:12,167:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,167:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,183:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,767:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:12,899:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,899:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:12,899:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:13,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:13,610:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:13,610:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:13,610:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:14,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:23:14,333:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:14,333:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:14,333:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:14,700:INFO:Calculating mean and std
2024-08-01 12:23:14,700:INFO:Creating metrics dataframe
2024-08-01 12:23:15,079:INFO:Uploading results into container
2024-08-01 12:23:15,080:INFO:Uploading model into container now
2024-08-01 12:23:15,080:INFO:_master_model_container: 1
2024-08-01 12:23:15,080:INFO:_display_container: 2
2024-08-01 12:23:15,080:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:23:15,080:INFO:create_model() successfully completed......................................
2024-08-01 12:23:15,137:INFO:SubProcess create_model() end ==================================
2024-08-01 12:23:15,137:INFO:Creating metrics dataframe
2024-08-01 12:23:15,152:INFO:Initializing K Neighbors Classifier
2024-08-01 12:23:15,152:INFO:Total runtime is 0.12890414794286092 minutes
2024-08-01 12:23:15,154:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:15,154:INFO:Initializing create_model()
2024-08-01 12:23:15,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:15,154:INFO:Checking exceptions
2024-08-01 12:23:15,154:INFO:Importing libraries
2024-08-01 12:23:15,154:INFO:Copying training dataset
2024-08-01 12:23:15,154:INFO:Defining folds
2024-08-01 12:23:15,154:INFO:Declaring metric variables
2024-08-01 12:23:15,154:INFO:Importing untrained model
2024-08-01 12:23:15,154:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:23:15,154:INFO:Starting cross validation
2024-08-01 12:23:15,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:15,366:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:15,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:16,220:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:16,483:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:17,065:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:17,330:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:17,899:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:18,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:18,753:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:19,013:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:19,587:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:19,847:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:20,419:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:20,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:21,267:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:21,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:22,085:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:22,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:22,912:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:23,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:23,535:INFO:Calculating mean and std
2024-08-01 12:23:23,535:INFO:Creating metrics dataframe
2024-08-01 12:23:23,899:INFO:Uploading results into container
2024-08-01 12:23:23,899:INFO:Uploading model into container now
2024-08-01 12:23:23,899:INFO:_master_model_container: 2
2024-08-01 12:23:23,899:INFO:_display_container: 2
2024-08-01 12:23:23,899:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:23:23,899:INFO:create_model() successfully completed......................................
2024-08-01 12:23:23,952:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:23:23,952:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:23:23,952:INFO:Initializing create_model()
2024-08-01 12:23:23,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:23,968:INFO:Checking exceptions
2024-08-01 12:23:23,968:INFO:Importing libraries
2024-08-01 12:23:23,968:INFO:Copying training dataset
2024-08-01 12:23:23,969:INFO:Defining folds
2024-08-01 12:23:23,969:INFO:Declaring metric variables
2024-08-01 12:23:23,969:INFO:Importing untrained model
2024-08-01 12:23:23,969:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:23:23,969:INFO:Starting cross validation
2024-08-01 12:23:23,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:24,169:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:24,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:24,996:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:25,251:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:25,848:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:26,100:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:26,676:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:26,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:27,468:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:27,731:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:28,312:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:28,567:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:29,132:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:29,402:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:29,966:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:30,226:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:30,785:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:31,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:31,598:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:31,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:23:32,216:INFO:Calculating mean and std
2024-08-01 12:23:32,216:INFO:Creating metrics dataframe
2024-08-01 12:23:32,603:INFO:Uploading results into container
2024-08-01 12:23:32,603:INFO:Uploading model into container now
2024-08-01 12:23:32,604:INFO:_master_model_container: 3
2024-08-01 12:23:32,604:INFO:_display_container: 2
2024-08-01 12:23:32,604:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:23:32,604:INFO:create_model() successfully completed......................................
2024-08-01 12:23:32,666:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:23:32,666:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:23:32,666:INFO:Initializing Naive Bayes
2024-08-01 12:23:32,666:INFO:Total runtime is 0.42079774538675946 minutes
2024-08-01 12:23:32,668:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:32,668:INFO:Initializing create_model()
2024-08-01 12:23:32,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:32,668:INFO:Checking exceptions
2024-08-01 12:23:32,668:INFO:Importing libraries
2024-08-01 12:23:32,668:INFO:Copying training dataset
2024-08-01 12:23:32,668:INFO:Defining folds
2024-08-01 12:23:32,668:INFO:Declaring metric variables
2024-08-01 12:23:32,668:INFO:Importing untrained model
2024-08-01 12:23:32,668:INFO:Naive Bayes Imported successfully
2024-08-01 12:23:32,668:INFO:Starting cross validation
2024-08-01 12:23:32,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:32,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:32,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:32,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:33,452:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:33,452:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:33,466:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:34,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,184:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,186:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,186:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,766:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:35,766:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,346:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,348:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:36,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:37,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:37,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:37,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:38,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:38,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:38,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:38,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:38,462:INFO:Calculating mean and std
2024-08-01 12:23:38,465:INFO:Creating metrics dataframe
2024-08-01 12:23:38,832:INFO:Uploading results into container
2024-08-01 12:23:38,832:INFO:Uploading model into container now
2024-08-01 12:23:38,832:INFO:_master_model_container: 4
2024-08-01 12:23:38,832:INFO:_display_container: 2
2024-08-01 12:23:38,832:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:23:38,834:INFO:create_model() successfully completed......................................
2024-08-01 12:23:38,882:INFO:SubProcess create_model() end ==================================
2024-08-01 12:23:38,882:INFO:Creating metrics dataframe
2024-08-01 12:23:38,899:INFO:Initializing Decision Tree Classifier
2024-08-01 12:23:38,899:INFO:Total runtime is 0.5246845881144206 minutes
2024-08-01 12:23:38,899:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:38,899:INFO:Initializing create_model()
2024-08-01 12:23:38,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:38,899:INFO:Checking exceptions
2024-08-01 12:23:38,899:INFO:Importing libraries
2024-08-01 12:23:38,899:INFO:Copying training dataset
2024-08-01 12:23:38,899:INFO:Defining folds
2024-08-01 12:23:38,899:INFO:Declaring metric variables
2024-08-01 12:23:38,899:INFO:Importing untrained model
2024-08-01 12:23:38,899:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:23:38,912:INFO:Starting cross validation
2024-08-01 12:23:38,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:39,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:39,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:39,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:39,699:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:39,699:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:39,699:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,282:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:40,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:41,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:41,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:41,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,031:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,621:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,623:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:42,624:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,182:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,767:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,769:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:43,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:44,342:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:44,344:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:44,345:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:44,716:INFO:Calculating mean and std
2024-08-01 12:23:44,721:INFO:Creating metrics dataframe
2024-08-01 12:23:45,099:INFO:Uploading results into container
2024-08-01 12:23:45,099:INFO:Uploading model into container now
2024-08-01 12:23:45,099:INFO:_master_model_container: 5
2024-08-01 12:23:45,099:INFO:_display_container: 2
2024-08-01 12:23:45,102:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best')
2024-08-01 12:23:45,102:INFO:create_model() successfully completed......................................
2024-08-01 12:23:45,166:INFO:SubProcess create_model() end ==================================
2024-08-01 12:23:45,166:INFO:Creating metrics dataframe
2024-08-01 12:23:45,166:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:23:45,166:INFO:Total runtime is 0.6291299263636272 minutes
2024-08-01 12:23:45,166:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:45,166:INFO:Initializing create_model()
2024-08-01 12:23:45,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:45,166:INFO:Checking exceptions
2024-08-01 12:23:45,166:INFO:Importing libraries
2024-08-01 12:23:45,166:INFO:Copying training dataset
2024-08-01 12:23:45,183:INFO:Defining folds
2024-08-01 12:23:45,183:INFO:Declaring metric variables
2024-08-01 12:23:45,186:INFO:Importing untrained model
2024-08-01 12:23:45,186:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:23:45,191:INFO:Starting cross validation
2024-08-01 12:23:45,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:45,366:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:45,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:45,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:45,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:45,916:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:45,916:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:45,916:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:45,916:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:45,931:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:46,469:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:46,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:46,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:46,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,032:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:47,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:47,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,582:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:47,582:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,588:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:47,588:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:47,588:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,116:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:48,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:48,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,666:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:48,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:48,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:48,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,199:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:49,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,215:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:49,216:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,749:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:49,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:49,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:49,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:50,299:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:50,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:50,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:50,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:23:50,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:50,669:INFO:Calculating mean and std
2024-08-01 12:23:50,669:INFO:Creating metrics dataframe
2024-08-01 12:23:51,032:INFO:Uploading results into container
2024-08-01 12:23:51,032:INFO:Uploading model into container now
2024-08-01 12:23:51,032:INFO:_master_model_container: 6
2024-08-01 12:23:51,032:INFO:_display_container: 2
2024-08-01 12:23:51,036:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:23:51,036:INFO:create_model() successfully completed......................................
2024-08-01 12:23:51,103:INFO:SubProcess create_model() end ==================================
2024-08-01 12:23:51,103:INFO:Creating metrics dataframe
2024-08-01 12:23:51,103:INFO:Initializing Ridge Classifier
2024-08-01 12:23:51,103:INFO:Total runtime is 0.7280842741330465 minutes
2024-08-01 12:23:51,103:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:51,103:INFO:Initializing create_model()
2024-08-01 12:23:51,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:51,103:INFO:Checking exceptions
2024-08-01 12:23:51,103:INFO:Importing libraries
2024-08-01 12:23:51,103:INFO:Copying training dataset
2024-08-01 12:23:51,103:INFO:Defining folds
2024-08-01 12:23:51,103:INFO:Declaring metric variables
2024-08-01 12:23:51,116:INFO:Importing untrained model
2024-08-01 12:23:51,116:INFO:Ridge Classifier Imported successfully
2024-08-01 12:23:51,116:INFO:Starting cross validation
2024-08-01 12:23:51,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:51,278:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:51,279:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:51,280:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:51,282:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:51,799:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:51,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:51,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:51,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,332:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:52,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,849:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:52,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:52,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,366:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:53,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,366:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,882:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:53,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,898:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:53,899:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,415:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:54,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,932:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:54,932:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,932:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:54,932:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,449:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:55,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,972:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:23:55,972:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,972:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:55,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:56,349:INFO:Calculating mean and std
2024-08-01 12:23:56,349:INFO:Creating metrics dataframe
2024-08-01 12:23:56,732:INFO:Uploading results into container
2024-08-01 12:23:56,732:INFO:Uploading model into container now
2024-08-01 12:23:56,732:INFO:_master_model_container: 7
2024-08-01 12:23:56,732:INFO:_display_container: 2
2024-08-01 12:23:56,732:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001)
2024-08-01 12:23:56,732:INFO:create_model() successfully completed......................................
2024-08-01 12:23:56,782:INFO:SubProcess create_model() end ==================================
2024-08-01 12:23:56,782:INFO:Creating metrics dataframe
2024-08-01 12:23:56,802:INFO:Initializing Random Forest Classifier
2024-08-01 12:23:56,802:INFO:Total runtime is 0.8230603059132895 minutes
2024-08-01 12:23:56,802:INFO:SubProcess create_model() called ==================================
2024-08-01 12:23:56,802:INFO:Initializing create_model()
2024-08-01 12:23:56,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:23:56,802:INFO:Checking exceptions
2024-08-01 12:23:56,802:INFO:Importing libraries
2024-08-01 12:23:56,802:INFO:Copying training dataset
2024-08-01 12:23:56,802:INFO:Defining folds
2024-08-01 12:23:56,802:INFO:Declaring metric variables
2024-08-01 12:23:56,802:INFO:Importing untrained model
2024-08-01 12:23:56,802:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:23:56,802:INFO:Starting cross validation
2024-08-01 12:23:56,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:23:57,277:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:57,281:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:57,282:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,861:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:58,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:59,719:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:59,719:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:23:59,719:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:00,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:00,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:00,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:01,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:01,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:01,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,123:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,123:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,123:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:02,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:03,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:03,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:03,771:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:04,537:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:04,537:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:04,537:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:04,903:INFO:Calculating mean and std
2024-08-01 12:24:04,903:INFO:Creating metrics dataframe
2024-08-01 12:24:05,265:INFO:Uploading results into container
2024-08-01 12:24:05,265:INFO:Uploading model into container now
2024-08-01 12:24:05,265:INFO:_master_model_container: 8
2024-08-01 12:24:05,265:INFO:_display_container: 2
2024-08-01 12:24:05,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:24:05,265:INFO:create_model() successfully completed......................................
2024-08-01 12:24:05,346:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:05,346:INFO:Creating metrics dataframe
2024-08-01 12:24:05,349:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:24:05,349:INFO:Total runtime is 0.9655123869578045 minutes
2024-08-01 12:24:05,349:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:05,349:INFO:Initializing create_model()
2024-08-01 12:24:05,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:05,349:INFO:Checking exceptions
2024-08-01 12:24:05,349:INFO:Importing libraries
2024-08-01 12:24:05,349:INFO:Copying training dataset
2024-08-01 12:24:05,349:INFO:Defining folds
2024-08-01 12:24:05,349:INFO:Declaring metric variables
2024-08-01 12:24:05,349:INFO:Importing untrained model
2024-08-01 12:24:05,359:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:24:05,359:INFO:Starting cross validation
2024-08-01 12:24:05,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:05,465:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:05,565:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:05,582:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:05,582:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,049:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:06,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:06,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,764:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:06,765:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,232:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:07,349:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,349:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,349:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,815:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:07,930:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,932:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:07,933:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:08,399:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:08,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:08,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:08,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:24:08,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:08,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:09,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:09,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:09,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:09,565:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:09,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:09,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:09,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,162:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:10,274:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,274:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,274:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:24:10,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:10,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:24:10,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:11,232:INFO:Calculating mean and std
2024-08-01 12:24:11,232:INFO:Creating metrics dataframe
2024-08-01 12:24:11,601:INFO:Uploading results into container
2024-08-01 12:24:11,601:INFO:Uploading model into container now
2024-08-01 12:24:11,601:INFO:_master_model_container: 9
2024-08-01 12:24:11,601:INFO:_display_container: 2
2024-08-01 12:24:11,601:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:24:11,613:INFO:create_model() successfully completed......................................
2024-08-01 12:24:11,665:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:11,665:INFO:Creating metrics dataframe
2024-08-01 12:24:11,665:INFO:Initializing Ada Boost Classifier
2024-08-01 12:24:11,665:INFO:Total runtime is 1.0707869211832683 minutes
2024-08-01 12:24:11,665:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:11,665:INFO:Initializing create_model()
2024-08-01 12:24:11,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:11,665:INFO:Checking exceptions
2024-08-01 12:24:11,665:INFO:Importing libraries
2024-08-01 12:24:11,665:INFO:Copying training dataset
2024-08-01 12:24:11,682:INFO:Defining folds
2024-08-01 12:24:11,682:INFO:Declaring metric variables
2024-08-01 12:24:11,682:INFO:Importing untrained model
2024-08-01 12:24:11,682:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:24:11,682:INFO:Starting cross validation
2024-08-01 12:24:11,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:11,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:11,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:11,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:12,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:12,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:12,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,965:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,965:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:13,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:14,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:14,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:14,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,297:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,302:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,302:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:15,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:16,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:16,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:16,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,264:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,265:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,265:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,915:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:17,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:18,285:INFO:Calculating mean and std
2024-08-01 12:24:18,285:INFO:Creating metrics dataframe
2024-08-01 12:24:18,648:INFO:Uploading results into container
2024-08-01 12:24:18,648:INFO:Uploading model into container now
2024-08-01 12:24:18,648:INFO:_master_model_container: 10
2024-08-01 12:24:18,648:INFO:_display_container: 2
2024-08-01 12:24:18,663:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226)
2024-08-01 12:24:18,663:INFO:create_model() successfully completed......................................
2024-08-01 12:24:18,719:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:18,719:INFO:Creating metrics dataframe
2024-08-01 12:24:18,727:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:24:18,727:INFO:Total runtime is 1.188475799560547 minutes
2024-08-01 12:24:18,727:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:18,727:INFO:Initializing create_model()
2024-08-01 12:24:18,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:18,727:INFO:Checking exceptions
2024-08-01 12:24:18,727:INFO:Importing libraries
2024-08-01 12:24:18,727:INFO:Copying training dataset
2024-08-01 12:24:18,732:INFO:Defining folds
2024-08-01 12:24:18,732:INFO:Declaring metric variables
2024-08-01 12:24:18,732:INFO:Importing untrained model
2024-08-01 12:24:18,732:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:24:18,732:INFO:Starting cross validation
2024-08-01 12:24:18,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:19,397:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:19,398:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:19,398:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:20,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:20,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:20,415:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:21,458:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:21,465:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:21,465:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:22,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:22,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:22,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:23,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:23,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:23,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:24,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:24,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:24,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:25,531:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:25,532:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:25,532:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:26,548:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:26,548:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:26,548:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:27,568:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:27,568:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:27,568:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:28,598:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:28,602:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:28,602:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:28,968:INFO:Calculating mean and std
2024-08-01 12:24:28,968:INFO:Creating metrics dataframe
2024-08-01 12:24:29,348:INFO:Uploading results into container
2024-08-01 12:24:29,348:INFO:Uploading model into container now
2024-08-01 12:24:29,348:INFO:_master_model_container: 11
2024-08-01 12:24:29,348:INFO:_display_container: 2
2024-08-01 12:24:29,348:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:24:29,348:INFO:create_model() successfully completed......................................
2024-08-01 12:24:29,415:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:29,415:INFO:Creating metrics dataframe
2024-08-01 12:24:29,415:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:24:29,415:INFO:Total runtime is 1.366614925861359 minutes
2024-08-01 12:24:29,415:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:29,415:INFO:Initializing create_model()
2024-08-01 12:24:29,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:29,415:INFO:Checking exceptions
2024-08-01 12:24:29,415:INFO:Importing libraries
2024-08-01 12:24:29,415:INFO:Copying training dataset
2024-08-01 12:24:29,415:INFO:Defining folds
2024-08-01 12:24:29,415:INFO:Declaring metric variables
2024-08-01 12:24:29,415:INFO:Importing untrained model
2024-08-01 12:24:29,430:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:24:29,434:INFO:Starting cross validation
2024-08-01 12:24:29,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:29,648:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:29,648:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:29,648:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,232:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,232:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,232:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:30,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:31,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:31,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:31,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,015:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,015:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,015:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,614:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:32,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:33,794:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,380:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,381:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,382:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:34,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:35,335:INFO:Calculating mean and std
2024-08-01 12:24:35,335:INFO:Creating metrics dataframe
2024-08-01 12:24:35,698:INFO:Uploading results into container
2024-08-01 12:24:35,698:INFO:Uploading model into container now
2024-08-01 12:24:35,698:INFO:_master_model_container: 12
2024-08-01 12:24:35,698:INFO:_display_container: 2
2024-08-01 12:24:35,709:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:24:35,709:INFO:create_model() successfully completed......................................
2024-08-01 12:24:35,768:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:35,768:INFO:Creating metrics dataframe
2024-08-01 12:24:35,768:INFO:Initializing Extra Trees Classifier
2024-08-01 12:24:35,768:INFO:Total runtime is 1.472501655419668 minutes
2024-08-01 12:24:35,768:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:35,768:INFO:Initializing create_model()
2024-08-01 12:24:35,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:35,768:INFO:Checking exceptions
2024-08-01 12:24:35,768:INFO:Importing libraries
2024-08-01 12:24:35,768:INFO:Copying training dataset
2024-08-01 12:24:35,768:INFO:Defining folds
2024-08-01 12:24:35,768:INFO:Declaring metric variables
2024-08-01 12:24:35,768:INFO:Importing untrained model
2024-08-01 12:24:35,781:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:24:35,781:INFO:Starting cross validation
2024-08-01 12:24:35,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:36,148:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:36,148:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:36,148:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:36,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:36,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:36,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:37,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:37,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:37,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:38,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:38,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:38,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:39,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:40,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:40,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:40,583:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:41,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:41,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:41,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:42,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:43,181:INFO:Calculating mean and std
2024-08-01 12:24:43,181:INFO:Creating metrics dataframe
2024-08-01 12:24:43,615:INFO:Uploading results into container
2024-08-01 12:24:43,615:INFO:Uploading model into container now
2024-08-01 12:24:43,615:INFO:_master_model_container: 13
2024-08-01 12:24:43,615:INFO:_display_container: 2
2024-08-01 12:24:43,624:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:24:43,624:INFO:create_model() successfully completed......................................
2024-08-01 12:24:43,681:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:43,681:INFO:Creating metrics dataframe
2024-08-01 12:24:43,681:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:24:43,681:INFO:Total runtime is 1.6043902595837916 minutes
2024-08-01 12:24:43,681:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:43,681:INFO:Initializing create_model()
2024-08-01 12:24:43,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:43,681:INFO:Checking exceptions
2024-08-01 12:24:43,681:INFO:Importing libraries
2024-08-01 12:24:43,681:INFO:Copying training dataset
2024-08-01 12:24:43,681:INFO:Defining folds
2024-08-01 12:24:43,681:INFO:Declaring metric variables
2024-08-01 12:24:43,697:INFO:Importing untrained model
2024-08-01 12:24:43,700:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:24:43,701:INFO:Starting cross validation
2024-08-01 12:24:43,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:44,815:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:44] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:45,081:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:45,081:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:45,098:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:46,281:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:46] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:46,531:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:46,531:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:46,531:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:47,607:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:47] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:47,867:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:47,867:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:47,867:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:49,265:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:49] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:49,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:49,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:49,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:50,931:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:50] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:51,181:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:51,181:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:51,197:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:52,698:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:52] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:52,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:52,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:52,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:54,464:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:54] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:54,731:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:54,731:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:54,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:55,981:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:55] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:56,235:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:56,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:56,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:57,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:57] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:57,598:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:57,598:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:57,598:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:58,683:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:24:58] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:24:58,915:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:58,931:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:58,931:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:24:59,334:INFO:Calculating mean and std
2024-08-01 12:24:59,334:INFO:Creating metrics dataframe
2024-08-01 12:24:59,698:INFO:Uploading results into container
2024-08-01 12:24:59,698:INFO:Uploading model into container now
2024-08-01 12:24:59,698:INFO:_master_model_container: 14
2024-08-01 12:24:59,698:INFO:_display_container: 2
2024-08-01 12:24:59,701:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:24:59,701:INFO:create_model() successfully completed......................................
2024-08-01 12:24:59,748:INFO:SubProcess create_model() end ==================================
2024-08-01 12:24:59,748:INFO:Creating metrics dataframe
2024-08-01 12:24:59,768:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:24:59,768:INFO:Total runtime is 1.8724944194157924 minutes
2024-08-01 12:24:59,768:INFO:SubProcess create_model() called ==================================
2024-08-01 12:24:59,768:INFO:Initializing create_model()
2024-08-01 12:24:59,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:24:59,768:INFO:Checking exceptions
2024-08-01 12:24:59,768:INFO:Importing libraries
2024-08-01 12:24:59,768:INFO:Copying training dataset
2024-08-01 12:24:59,768:INFO:Defining folds
2024-08-01 12:24:59,768:INFO:Declaring metric variables
2024-08-01 12:24:59,768:INFO:Importing untrained model
2024-08-01 12:24:59,768:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:24:59,768:INFO:Starting cross validation
2024-08-01 12:24:59,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:24:59,867:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:24:59,880:INFO:[LightGBM] [Info] Total Bins 268
2024-08-01 12:24:59,880:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 30
2024-08-01 12:24:59,948:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:24:59,948:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:24:59,963:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:24:59,964:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:24:59,964:INFO:[LightGBM] [Info] 15 dense feature groups (0.00 MB) transferred to GPU in 0.001087 secs. 1 sparse feature groups
2024-08-01 12:24:59,964:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:24:59,964:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:24:59,964:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:24:59,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:24:59,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:00,830:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:00,832:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:00,834:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:01,331:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:01,331:INFO:[LightGBM] [Info] Total Bins 268
2024-08-01 12:25:01,331:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 31
2024-08-01 12:25:01,398:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:01,398:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:01,413:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:01,414:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:01,414:INFO:[LightGBM] [Info] 14 dense feature groups (0.00 MB) transferred to GPU in 0.001130 secs. 1 sparse feature groups
2024-08-01 12:25:01,414:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:25:01,414:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:25:01,414:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:25:01,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:01,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:02,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:02,348:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:02,859:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:02,859:INFO:[LightGBM] [Info] Total Bins 260
2024-08-01 12:25:02,859:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 28
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] 15 dense feature groups (0.00 MB) transferred to GPU in 0.001059 secs. 1 sparse feature groups
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:25:02,931:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:25:02,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:02,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:03,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:03,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:03,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:04,348:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:04,348:INFO:[LightGBM] [Info] Total Bins 266
2024-08-01 12:25:04,348:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 29
2024-08-01 12:25:04,414:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:04,414:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] 14 dense feature groups (0.00 MB) transferred to GPU in 0.001066 secs. 1 sparse feature groups
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:25:04,431:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:25:04,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:04,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,298:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:05,298:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:05,298:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:05,798:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:05,798:INFO:[LightGBM] [Info] Total Bins 271
2024-08-01 12:25:05,798:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 30
2024-08-01 12:25:05,898:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:05,898:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:05,898:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:05,898:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:05,915:INFO:[LightGBM] [Info] 15 dense feature groups (0.00 MB) transferred to GPU in 0.002899 secs. 1 sparse feature groups
2024-08-01 12:25:05,915:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:25:05,915:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:25:05,915:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:25:05,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:05,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:06,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:06,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:06,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:07,331:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:07,331:INFO:[LightGBM] [Info] Total Bins 260
2024-08-01 12:25:07,331:INFO:[LightGBM] [Info] Number of data points in the train set: 302, number of used features: 28
2024-08-01 12:25:07,414:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:07,414:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] 14 dense feature groups (0.00 MB) transferred to GPU in 0.001007 secs. 1 sparse feature groups
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] Start training from score -1.221791
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] Start training from score -1.328400
2024-08-01 12:25:07,419:INFO:[LightGBM] [Info] Start training from score -0.820078
2024-08-01 12:25:07,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:07,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,364:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:08,364:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:08,364:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:08,864:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:08,864:INFO:[LightGBM] [Info] Total Bins 268
2024-08-01 12:25:08,864:INFO:[LightGBM] [Info] Number of data points in the train set: 303, number of used features: 31
2024-08-01 12:25:08,937:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:08,937:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] 15 dense feature groups (0.00 MB) transferred to GPU in 0.001105 secs. 1 sparse feature groups
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] Start training from score -1.225096
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] Start training from score -1.331706
2024-08-01 12:25:08,948:INFO:[LightGBM] [Info] Start training from score -0.815893
2024-08-01 12:25:08,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:08,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:09,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:09,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:09,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:10,264:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:10,264:INFO:[LightGBM] [Info] Total Bins 263
2024-08-01 12:25:10,264:INFO:[LightGBM] [Info] Number of data points in the train set: 303, number of used features: 29
2024-08-01 12:25:10,335:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:10,335:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:10,335:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:10,348:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:10,348:INFO:[LightGBM] [Info] 14 dense feature groups (0.00 MB) transferred to GPU in 0.001126 secs. 1 sparse feature groups
2024-08-01 12:25:10,348:INFO:[LightGBM] [Info] Start training from score -1.225096
2024-08-01 12:25:10,348:INFO:[LightGBM] [Info] Start training from score -1.331706
2024-08-01 12:25:10,348:INFO:[LightGBM] [Info] Start training from score -0.815893
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:10,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:11,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:11,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:11,631:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:11,631:INFO:[LightGBM] [Info] Total Bins 266
2024-08-01 12:25:11,631:INFO:[LightGBM] [Info] Number of data points in the train set: 303, number of used features: 29
2024-08-01 12:25:11,719:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:11,719:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:11,727:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:11,728:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:11,731:INFO:[LightGBM] [Info] 14 dense feature groups (0.00 MB) transferred to GPU in 0.001275 secs. 1 sparse feature groups
2024-08-01 12:25:11,731:INFO:[LightGBM] [Info] Start training from score -1.225096
2024-08-01 12:25:11,731:INFO:[LightGBM] [Info] Start training from score -1.319284
2024-08-01 12:25:11,731:INFO:[LightGBM] [Info] Start training from score -0.823384
2024-08-01 12:25:11,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:11,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:12,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:12,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:12,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:12,997:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:25:12,997:INFO:[LightGBM] [Info] Total Bins 263
2024-08-01 12:25:12,997:INFO:[LightGBM] [Info] Number of data points in the train set: 303, number of used features: 29
2024-08-01 12:25:13,064:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:25:13,064:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:25:13,064:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:25:13,080:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:25:13,081:INFO:[LightGBM] [Info] 15 dense feature groups (0.00 MB) transferred to GPU in 0.001499 secs. 1 sparse feature groups
2024-08-01 12:25:13,081:INFO:[LightGBM] [Info] Start training from score -1.213923
2024-08-01 12:25:13,081:INFO:[LightGBM] [Info] Start training from score -1.331706
2024-08-01 12:25:13,081:INFO:[LightGBM] [Info] Start training from score -0.823384
2024-08-01 12:25:13,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:25:13,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:13,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:13,980:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:14,381:INFO:Calculating mean and std
2024-08-01 12:25:14,381:INFO:Creating metrics dataframe
2024-08-01 12:25:14,764:INFO:Uploading results into container
2024-08-01 12:25:14,764:INFO:Uploading model into container now
2024-08-01 12:25:14,764:INFO:_master_model_container: 15
2024-08-01 12:25:14,764:INFO:_display_container: 2
2024-08-01 12:25:14,766:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:25:14,766:INFO:create_model() successfully completed......................................
2024-08-01 12:25:14,831:INFO:SubProcess create_model() end ==================================
2024-08-01 12:25:14,831:INFO:Creating metrics dataframe
2024-08-01 12:25:14,833:INFO:Initializing CatBoost Classifier
2024-08-01 12:25:14,833:INFO:Total runtime is 2.1235787113507594 minutes
2024-08-01 12:25:14,833:INFO:SubProcess create_model() called ==================================
2024-08-01 12:25:14,833:INFO:Initializing create_model()
2024-08-01 12:25:14,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3945F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:25:14,833:INFO:Checking exceptions
2024-08-01 12:25:14,833:INFO:Importing libraries
2024-08-01 12:25:14,833:INFO:Copying training dataset
2024-08-01 12:25:14,833:INFO:Defining folds
2024-08-01 12:25:14,833:INFO:Declaring metric variables
2024-08-01 12:25:14,833:INFO:Importing untrained model
2024-08-01 12:25:14,833:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:25:14,848:INFO:Starting cross validation
2024-08-01 12:25:14,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:25:20,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:20,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:20,634:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:26,897:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:26,897:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:26,897:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:33,350:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:33,350:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:33,350:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:39,414:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:39,414:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:39,414:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:45,830:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:45,830:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:45,830:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:52,030:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:52,031:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:52,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:58,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:58,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:25:58,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:04,530:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:04,547:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:04,547:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:10,580:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:10,580:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:10,580:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:17,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:17,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:17,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:17,457:INFO:Calculating mean and std
2024-08-01 12:26:17,457:INFO:Creating metrics dataframe
2024-08-01 12:26:17,831:INFO:Uploading results into container
2024-08-01 12:26:17,831:INFO:Uploading model into container now
2024-08-01 12:26:17,831:INFO:_master_model_container: 16
2024-08-01 12:26:17,831:INFO:_display_container: 2
2024-08-01 12:26:17,831:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3936ECD0>
2024-08-01 12:26:17,831:INFO:create_model() successfully completed......................................
2024-08-01 12:26:17,898:INFO:SubProcess create_model() end ==================================
2024-08-01 12:26:17,898:INFO:Creating metrics dataframe
2024-08-01 12:26:17,915:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:26:17,920:INFO:Initializing create_model()
2024-08-01 12:26:17,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:17,920:INFO:Checking exceptions
2024-08-01 12:26:17,921:INFO:Importing libraries
2024-08-01 12:26:17,921:INFO:Copying training dataset
2024-08-01 12:26:17,923:INFO:Defining folds
2024-08-01 12:26:17,923:INFO:Declaring metric variables
2024-08-01 12:26:17,923:INFO:Importing untrained model
2024-08-01 12:26:17,923:INFO:Declaring custom model
2024-08-01 12:26:17,924:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:26:17,925:INFO:Cross validation set to False
2024-08-01 12:26:17,925:INFO:Fitting Model
2024-08-01 12:26:18,813:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:26:18] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:26:19,355:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:26:19,355:INFO:create_model() successfully completed......................................
2024-08-01 12:26:19,413:INFO:Initializing create_model()
2024-08-01 12:26:19,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:19,413:INFO:Checking exceptions
2024-08-01 12:26:19,429:INFO:Importing libraries
2024-08-01 12:26:19,429:INFO:Copying training dataset
2024-08-01 12:26:19,431:INFO:Defining folds
2024-08-01 12:26:19,431:INFO:Declaring metric variables
2024-08-01 12:26:19,432:INFO:Importing untrained model
2024-08-01 12:26:19,432:INFO:Declaring custom model
2024-08-01 12:26:19,432:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:26:19,432:INFO:Cross validation set to False
2024-08-01 12:26:19,432:INFO:Fitting Model
2024-08-01 12:26:20,254:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:26:20,254:INFO:create_model() successfully completed......................................
2024-08-01 12:26:20,313:INFO:Initializing create_model()
2024-08-01 12:26:20,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:20,320:INFO:Checking exceptions
2024-08-01 12:26:20,321:INFO:Importing libraries
2024-08-01 12:26:20,321:INFO:Copying training dataset
2024-08-01 12:26:20,321:INFO:Defining folds
2024-08-01 12:26:20,321:INFO:Declaring metric variables
2024-08-01 12:26:20,321:INFO:Importing untrained model
2024-08-01 12:26:20,321:INFO:Declaring custom model
2024-08-01 12:26:20,321:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:26:20,321:INFO:Cross validation set to False
2024-08-01 12:26:20,321:INFO:Fitting Model
2024-08-01 12:26:20,413:INFO:[LightGBM] [Info] This is the GPU trainer!!
2024-08-01 12:26:20,413:INFO:[LightGBM] [Info] Total Bins 279
2024-08-01 12:26:20,413:INFO:[LightGBM] [Info] Number of data points in the train set: 336, number of used features: 31
2024-08-01 12:26:20,499:INFO:[LightGBM] [Info] Using GPU Device: NVIDIA GeForce RTX 3090, Vendor: NVIDIA Corporation
2024-08-01 12:26:20,499:INFO:[LightGBM] [Info] Compiling OpenCL Kernel with 64 bins...
2024-08-01 12:26:20,499:INFO:[LightGBM] [Info] GPU programs have been built
2024-08-01 12:26:20,499:INFO:[LightGBM] [Info] Size of histogram bin entry: 8
2024-08-01 12:26:20,513:INFO:[LightGBM] [Info] 14 dense feature groups (0.01 MB) transferred to GPU in 0.001224 secs. 1 sparse feature groups
2024-08-01 12:26:20,513:INFO:[LightGBM] [Info] Start training from score -1.221991
2024-08-01 12:26:20,513:INFO:[LightGBM] [Info] Start training from score -1.328475
2024-08-01 12:26:20,513:INFO:[LightGBM] [Info] Start training from score -0.819899
2024-08-01 12:26:20,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:26:21,746:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:26:21,746:INFO:create_model() successfully completed......................................
2024-08-01 12:26:21,821:INFO:Initializing create_model()
2024-08-01 12:26:21,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:21,826:INFO:Checking exceptions
2024-08-01 12:26:21,827:INFO:Importing libraries
2024-08-01 12:26:21,827:INFO:Copying training dataset
2024-08-01 12:26:21,827:INFO:Defining folds
2024-08-01 12:26:21,829:INFO:Declaring metric variables
2024-08-01 12:26:21,829:INFO:Importing untrained model
2024-08-01 12:26:21,829:INFO:Declaring custom model
2024-08-01 12:26:21,830:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:26:21,830:INFO:Cross validation set to False
2024-08-01 12:26:21,830:INFO:Fitting Model
2024-08-01 12:26:22,464:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:26:22,464:INFO:create_model() successfully completed......................................
2024-08-01 12:26:22,532:INFO:Initializing create_model()
2024-08-01 12:26:22,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=<catboost.core.CatBoostClassifier object at 0x0000028E3936ECD0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:22,532:INFO:Checking exceptions
2024-08-01 12:26:22,532:INFO:Importing libraries
2024-08-01 12:26:22,532:INFO:Copying training dataset
2024-08-01 12:26:22,532:INFO:Defining folds
2024-08-01 12:26:22,532:INFO:Declaring metric variables
2024-08-01 12:26:22,532:INFO:Importing untrained model
2024-08-01 12:26:22,532:INFO:Declaring custom model
2024-08-01 12:26:22,532:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:26:22,532:INFO:Cross validation set to False
2024-08-01 12:26:22,532:INFO:Fitting Model
2024-08-01 12:26:28,899:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3932B8D0>
2024-08-01 12:26:28,899:INFO:create_model() successfully completed......................................
2024-08-01 12:26:28,963:INFO:Initializing create_model()
2024-08-01 12:26:28,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:28,963:INFO:Checking exceptions
2024-08-01 12:26:28,971:INFO:Importing libraries
2024-08-01 12:26:28,972:INFO:Copying training dataset
2024-08-01 12:26:28,973:INFO:Defining folds
2024-08-01 12:26:28,973:INFO:Declaring metric variables
2024-08-01 12:26:28,973:INFO:Importing untrained model
2024-08-01 12:26:28,973:INFO:Declaring custom model
2024-08-01 12:26:28,973:INFO:str Imported successfully
2024-08-01 12:26:28,973:INFO:Cross validation set to False
2024-08-01 12:26:28,973:INFO:Fitting Model
2024-08-01 12:26:29,512:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226)
2024-08-01 12:26:29,513:INFO:create_model() successfully completed......................................
2024-08-01 12:26:29,584:INFO:Initializing create_model()
2024-08-01 12:26:29,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:29,591:INFO:Checking exceptions
2024-08-01 12:26:29,592:INFO:Importing libraries
2024-08-01 12:26:29,592:INFO:Copying training dataset
2024-08-01 12:26:29,592:INFO:Defining folds
2024-08-01 12:26:29,592:INFO:Declaring metric variables
2024-08-01 12:26:29,592:INFO:Importing untrained model
2024-08-01 12:26:29,592:INFO:Declaring custom model
2024-08-01 12:26:29,592:INFO:Ridge Classifier Imported successfully
2024-08-01 12:26:29,596:INFO:Cross validation set to False
2024-08-01 12:26:29,596:INFO:Fitting Model
2024-08-01 12:26:30,087:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001)
2024-08-01 12:26:30,087:INFO:create_model() successfully completed......................................
2024-08-01 12:26:30,146:INFO:Initializing create_model()
2024-08-01 12:26:30,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:30,146:INFO:Checking exceptions
2024-08-01 12:26:30,146:INFO:Importing libraries
2024-08-01 12:26:30,146:INFO:Copying training dataset
2024-08-01 12:26:30,146:INFO:Defining folds
2024-08-01 12:26:30,146:INFO:Declaring metric variables
2024-08-01 12:26:30,146:INFO:Importing untrained model
2024-08-01 12:26:30,146:INFO:Declaring custom model
2024-08-01 12:26:30,146:INFO:Logistic Regression Imported successfully
2024-08-01 12:26:30,146:INFO:Cross validation set to False
2024-08-01 12:26:30,146:INFO:Fitting Model
2024-08-01 12:26:30,380:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:26:30,780:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:26:30,780:INFO:create_model() successfully completed......................................
2024-08-01 12:26:30,832:INFO:Initializing create_model()
2024-08-01 12:26:30,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:30,832:INFO:Checking exceptions
2024-08-01 12:26:30,845:INFO:Importing libraries
2024-08-01 12:26:30,846:INFO:Copying training dataset
2024-08-01 12:26:30,847:INFO:Defining folds
2024-08-01 12:26:30,847:INFO:Declaring metric variables
2024-08-01 12:26:30,847:INFO:Importing untrained model
2024-08-01 12:26:30,847:INFO:Declaring custom model
2024-08-01 12:26:30,847:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:26:30,847:INFO:Cross validation set to False
2024-08-01 12:26:30,847:INFO:Fitting Model
2024-08-01 12:26:31,330:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:26:31,330:INFO:create_model() successfully completed......................................
2024-08-01 12:26:31,396:INFO:Initializing create_model()
2024-08-01 12:26:31,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:31,396:INFO:Checking exceptions
2024-08-01 12:26:31,402:INFO:Importing libraries
2024-08-01 12:26:31,402:INFO:Copying training dataset
2024-08-01 12:26:31,402:INFO:Defining folds
2024-08-01 12:26:31,402:INFO:Declaring metric variables
2024-08-01 12:26:31,402:INFO:Importing untrained model
2024-08-01 12:26:31,402:INFO:Declaring custom model
2024-08-01 12:26:31,402:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:26:31,402:INFO:Cross validation set to False
2024-08-01 12:26:31,402:INFO:Fitting Model
2024-08-01 12:26:31,946:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:26:31,946:INFO:create_model() successfully completed......................................
2024-08-01 12:26:32,016:INFO:Initializing create_model()
2024-08-01 12:26:32,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:32,016:INFO:Checking exceptions
2024-08-01 12:26:32,023:INFO:Importing libraries
2024-08-01 12:26:32,023:INFO:Copying training dataset
2024-08-01 12:26:32,023:INFO:Defining folds
2024-08-01 12:26:32,023:INFO:Declaring metric variables
2024-08-01 12:26:32,023:INFO:Importing untrained model
2024-08-01 12:26:32,023:INFO:Declaring custom model
2024-08-01 12:26:32,023:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:26:32,023:INFO:Cross validation set to False
2024-08-01 12:26:32,023:INFO:Fitting Model
2024-08-01 12:26:32,496:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best')
2024-08-01 12:26:32,496:INFO:create_model() successfully completed......................................
2024-08-01 12:26:32,559:INFO:Initializing create_model()
2024-08-01 12:26:32,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:32,559:INFO:Checking exceptions
2024-08-01 12:26:32,559:INFO:Importing libraries
2024-08-01 12:26:32,559:INFO:Copying training dataset
2024-08-01 12:26:32,564:INFO:Defining folds
2024-08-01 12:26:32,564:INFO:Declaring metric variables
2024-08-01 12:26:32,564:INFO:Importing untrained model
2024-08-01 12:26:32,564:INFO:Declaring custom model
2024-08-01 12:26:32,564:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:26:32,564:INFO:Cross validation set to False
2024-08-01 12:26:32,564:INFO:Fitting Model
2024-08-01 12:26:33,048:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:26:33,048:INFO:create_model() successfully completed......................................
2024-08-01 12:26:33,096:INFO:Initializing create_model()
2024-08-01 12:26:33,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:33,096:INFO:Checking exceptions
2024-08-01 12:26:33,096:INFO:Importing libraries
2024-08-01 12:26:33,096:INFO:Copying training dataset
2024-08-01 12:26:33,111:INFO:Defining folds
2024-08-01 12:26:33,111:INFO:Declaring metric variables
2024-08-01 12:26:33,111:INFO:Importing untrained model
2024-08-01 12:26:33,111:INFO:Declaring custom model
2024-08-01 12:26:33,111:INFO:Naive Bayes Imported successfully
2024-08-01 12:26:33,113:INFO:Cross validation set to False
2024-08-01 12:26:33,113:INFO:Fitting Model
2024-08-01 12:26:33,580:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:26:33,580:INFO:create_model() successfully completed......................................
2024-08-01 12:26:33,646:INFO:Initializing create_model()
2024-08-01 12:26:33,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:33,646:INFO:Checking exceptions
2024-08-01 12:26:33,646:INFO:Importing libraries
2024-08-01 12:26:33,646:INFO:Copying training dataset
2024-08-01 12:26:33,646:INFO:Defining folds
2024-08-01 12:26:33,646:INFO:Declaring metric variables
2024-08-01 12:26:33,646:INFO:Importing untrained model
2024-08-01 12:26:33,646:INFO:Declaring custom model
2024-08-01 12:26:33,646:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:26:33,646:INFO:Cross validation set to False
2024-08-01 12:26:33,646:INFO:Fitting Model
2024-08-01 12:26:33,746:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:26:34,130:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:26:34,130:INFO:create_model() successfully completed......................................
2024-08-01 12:26:34,201:INFO:_master_model_container: 16
2024-08-01 12:26:34,201:INFO:_display_container: 2
2024-08-01 12:26:34,201:INFO:[XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False), <catboost.core.CatBoostClassifier object at 0x0000028E3932B8D0>, AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best'), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)]
2024-08-01 12:26:34,201:INFO:compare_models() successfully completed......................................
2024-08-01 12:26:34,218:INFO:Initializing compare_models()
2024-08-01 12:26:34,218:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:26:34,218:INFO:Checking exceptions
2024-08-01 12:26:34,223:INFO:Preparing display monitor
2024-08-01 12:26:34,233:INFO:Initializing Logistic Regression
2024-08-01 12:26:34,233:INFO:Total runtime is 0.0 minutes
2024-08-01 12:26:34,235:INFO:SubProcess create_model() called ==================================
2024-08-01 12:26:34,235:INFO:Initializing create_model()
2024-08-01 12:26:34,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:34,235:INFO:Checking exceptions
2024-08-01 12:26:34,236:INFO:Importing libraries
2024-08-01 12:26:34,236:INFO:Copying training dataset
2024-08-01 12:26:34,238:INFO:Defining folds
2024-08-01 12:26:34,238:INFO:Declaring metric variables
2024-08-01 12:26:34,240:INFO:Importing untrained model
2024-08-01 12:26:34,241:INFO:Logistic Regression Imported successfully
2024-08-01 12:26:34,246:INFO:Starting cross validation
2024-08-01 12:26:34,247:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:26:34,446:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:34,446:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:34,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,045:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,046:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,046:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:35,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,280:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,280:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,280:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:36,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:37,480:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:37,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:37,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:38,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,279:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,279:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,279:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:39,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:40,229:INFO:Calculating mean and std
2024-08-01 12:26:40,229:INFO:Creating metrics dataframe
2024-08-01 12:26:40,599:INFO:Uploading results into container
2024-08-01 12:26:40,599:INFO:Uploading model into container now
2024-08-01 12:26:40,599:INFO:_master_model_container: 17
2024-08-01 12:26:40,599:INFO:_display_container: 3
2024-08-01 12:26:40,599:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:26:40,599:INFO:create_model() successfully completed......................................
2024-08-01 12:26:40,663:INFO:SubProcess create_model() end ==================================
2024-08-01 12:26:40,663:INFO:Creating metrics dataframe
2024-08-01 12:26:40,663:INFO:Initializing K Neighbors Classifier
2024-08-01 12:26:40,663:INFO:Total runtime is 0.10715670188268026 minutes
2024-08-01 12:26:40,678:INFO:SubProcess create_model() called ==================================
2024-08-01 12:26:40,678:INFO:Initializing create_model()
2024-08-01 12:26:40,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:40,678:INFO:Checking exceptions
2024-08-01 12:26:40,678:INFO:Importing libraries
2024-08-01 12:26:40,678:INFO:Copying training dataset
2024-08-01 12:26:40,679:INFO:Defining folds
2024-08-01 12:26:40,679:INFO:Declaring metric variables
2024-08-01 12:26:40,679:INFO:Importing untrained model
2024-08-01 12:26:40,679:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:26:40,688:INFO:Starting cross validation
2024-08-01 12:26:40,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:26:40,879:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:41,130:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:41,713:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:41,963:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:42,530:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:42,779:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:43,363:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:43,613:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:44,196:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:44,459:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:45,029:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:45,279:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:45,865:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:46,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:46,713:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:46,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:47,557:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:47,815:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:48,394:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:48,654:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:49,024:INFO:Calculating mean and std
2024-08-01 12:26:49,029:INFO:Creating metrics dataframe
2024-08-01 12:26:49,396:INFO:Uploading results into container
2024-08-01 12:26:49,396:INFO:Uploading model into container now
2024-08-01 12:26:49,396:INFO:_master_model_container: 18
2024-08-01 12:26:49,396:INFO:_display_container: 3
2024-08-01 12:26:49,396:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:26:49,396:INFO:create_model() successfully completed......................................
2024-08-01 12:26:49,472:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:26:49,472:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:26:49,473:INFO:Initializing create_model()
2024-08-01 12:26:49,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:49,473:INFO:Checking exceptions
2024-08-01 12:26:49,473:INFO:Importing libraries
2024-08-01 12:26:49,473:INFO:Copying training dataset
2024-08-01 12:26:49,475:INFO:Defining folds
2024-08-01 12:26:49,475:INFO:Declaring metric variables
2024-08-01 12:26:49,477:INFO:Importing untrained model
2024-08-01 12:26:49,479:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:26:49,483:INFO:Starting cross validation
2024-08-01 12:26:49,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:26:49,679:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:49,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:50,513:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:50,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:51,347:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:51,599:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:52,179:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:52,457:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:53,043:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:53,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:53,879:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:54,138:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:54,715:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:54,963:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:55,529:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:55,796:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:56,363:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:56,613:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:57,212:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:57,479:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:26:57,862:INFO:Calculating mean and std
2024-08-01 12:26:57,862:INFO:Creating metrics dataframe
2024-08-01 12:26:58,260:INFO:Uploading results into container
2024-08-01 12:26:58,260:INFO:Uploading model into container now
2024-08-01 12:26:58,261:INFO:_master_model_container: 19
2024-08-01 12:26:58,261:INFO:_display_container: 3
2024-08-01 12:26:58,261:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:26:58,261:INFO:create_model() successfully completed......................................
2024-08-01 12:26:58,312:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:26:58,312:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:26:58,312:INFO:Initializing Naive Bayes
2024-08-01 12:26:58,312:INFO:Total runtime is 0.40131943623224897 minutes
2024-08-01 12:26:58,329:INFO:SubProcess create_model() called ==================================
2024-08-01 12:26:58,329:INFO:Initializing create_model()
2024-08-01 12:26:58,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:26:58,329:INFO:Checking exceptions
2024-08-01 12:26:58,329:INFO:Importing libraries
2024-08-01 12:26:58,329:INFO:Copying training dataset
2024-08-01 12:26:58,329:INFO:Defining folds
2024-08-01 12:26:58,329:INFO:Declaring metric variables
2024-08-01 12:26:58,329:INFO:Importing untrained model
2024-08-01 12:26:58,329:INFO:Naive Bayes Imported successfully
2024-08-01 12:26:58,329:INFO:Starting cross validation
2024-08-01 12:26:58,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:26:58,535:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:58,545:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:58,546:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,696:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,696:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:26:59,696:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:00,879:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:01,458:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:01,459:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:01,460:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:02,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,179:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,196:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,196:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,772:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,772:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:03,772:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:03,772:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:04,155:INFO:Calculating mean and std
2024-08-01 12:27:04,156:INFO:Creating metrics dataframe
2024-08-01 12:27:04,529:INFO:Uploading results into container
2024-08-01 12:27:04,529:INFO:Uploading model into container now
2024-08-01 12:27:04,529:INFO:_master_model_container: 20
2024-08-01 12:27:04,529:INFO:_display_container: 3
2024-08-01 12:27:04,529:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:27:04,529:INFO:create_model() successfully completed......................................
2024-08-01 12:27:04,596:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:04,596:INFO:Creating metrics dataframe
2024-08-01 12:27:04,596:INFO:Initializing Decision Tree Classifier
2024-08-01 12:27:04,596:INFO:Total runtime is 0.5060396273930867 minutes
2024-08-01 12:27:04,596:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:04,596:INFO:Initializing create_model()
2024-08-01 12:27:04,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:04,596:INFO:Checking exceptions
2024-08-01 12:27:04,596:INFO:Importing libraries
2024-08-01 12:27:04,596:INFO:Copying training dataset
2024-08-01 12:27:04,596:INFO:Defining folds
2024-08-01 12:27:04,596:INFO:Declaring metric variables
2024-08-01 12:27:04,596:INFO:Importing untrained model
2024-08-01 12:27:04,596:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:27:04,611:INFO:Starting cross validation
2024-08-01 12:27:04,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:04,812:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:04,812:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:04,812:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,396:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,396:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,396:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:05,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:06,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:06,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:06,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,179:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,179:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,179:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:07,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,362:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,362:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,362:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,957:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,958:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:08,959:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:09,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:09,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:09,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:10,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:10,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:10,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:10,481:INFO:Calculating mean and std
2024-08-01 12:27:10,495:INFO:Creating metrics dataframe
2024-08-01 12:27:10,862:INFO:Uploading results into container
2024-08-01 12:27:10,862:INFO:Uploading model into container now
2024-08-01 12:27:10,862:INFO:_master_model_container: 21
2024-08-01 12:27:10,862:INFO:_display_container: 3
2024-08-01 12:27:10,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best')
2024-08-01 12:27:10,862:INFO:create_model() successfully completed......................................
2024-08-01 12:27:10,932:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:10,932:INFO:Creating metrics dataframe
2024-08-01 12:27:10,932:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:27:10,932:INFO:Total runtime is 0.6116435130437214 minutes
2024-08-01 12:27:10,932:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:10,932:INFO:Initializing create_model()
2024-08-01 12:27:10,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:10,932:INFO:Checking exceptions
2024-08-01 12:27:10,932:INFO:Importing libraries
2024-08-01 12:27:10,932:INFO:Copying training dataset
2024-08-01 12:27:10,945:INFO:Defining folds
2024-08-01 12:27:10,945:INFO:Declaring metric variables
2024-08-01 12:27:10,947:INFO:Importing untrained model
2024-08-01 12:27:10,947:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:27:10,947:INFO:Starting cross validation
2024-08-01 12:27:10,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:11,128:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:11,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:11,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:11,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:11,662:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:11,662:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:11,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:11,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:11,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,212:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:12,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,762:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:12,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:12,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:12,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,296:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:13,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:13,296:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,849:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:13,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:13,852:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:13,853:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,379:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:14,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:14,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,929:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:14,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:14,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:14,944:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:15,481:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:15,481:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:15,481:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:15,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:15,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:16,034:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:16,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:16,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:16,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:16,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:16,417:INFO:Calculating mean and std
2024-08-01 12:27:16,417:INFO:Creating metrics dataframe
2024-08-01 12:27:16,796:INFO:Uploading results into container
2024-08-01 12:27:16,796:INFO:Uploading model into container now
2024-08-01 12:27:16,796:INFO:_master_model_container: 22
2024-08-01 12:27:16,796:INFO:_display_container: 3
2024-08-01 12:27:16,796:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:27:16,796:INFO:create_model() successfully completed......................................
2024-08-01 12:27:16,862:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:16,862:INFO:Creating metrics dataframe
2024-08-01 12:27:16,862:INFO:Initializing Ridge Classifier
2024-08-01 12:27:16,862:INFO:Total runtime is 0.7104813575744628 minutes
2024-08-01 12:27:16,862:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:16,862:INFO:Initializing create_model()
2024-08-01 12:27:16,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:16,862:INFO:Checking exceptions
2024-08-01 12:27:16,862:INFO:Importing libraries
2024-08-01 12:27:16,862:INFO:Copying training dataset
2024-08-01 12:27:16,862:INFO:Defining folds
2024-08-01 12:27:16,862:INFO:Declaring metric variables
2024-08-01 12:27:16,879:INFO:Importing untrained model
2024-08-01 12:27:16,881:INFO:Ridge Classifier Imported successfully
2024-08-01 12:27:16,882:INFO:Starting cross validation
2024-08-01 12:27:16,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:17,029:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:17,029:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:17,029:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:17,029:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:17,573:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:17,573:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:17,573:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:17,573:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,095:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:18,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,111:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,658:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:18,659:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:18,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,195:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:19,195:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,195:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,195:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,715:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:19,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:19,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,248:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:20,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,778:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:20,779:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:20,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,312:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:21,312:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,312:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,312:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,858:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:27:21,858:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,860:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:21,861:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:22,229:INFO:Calculating mean and std
2024-08-01 12:27:22,229:INFO:Creating metrics dataframe
2024-08-01 12:27:22,612:INFO:Uploading results into container
2024-08-01 12:27:22,612:INFO:Uploading model into container now
2024-08-01 12:27:22,612:INFO:_master_model_container: 23
2024-08-01 12:27:22,612:INFO:_display_container: 3
2024-08-01 12:27:22,612:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001)
2024-08-01 12:27:22,612:INFO:create_model() successfully completed......................................
2024-08-01 12:27:22,678:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:22,678:INFO:Creating metrics dataframe
2024-08-01 12:27:22,679:INFO:Initializing Random Forest Classifier
2024-08-01 12:27:22,679:INFO:Total runtime is 0.8074235280354818 minutes
2024-08-01 12:27:22,679:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:22,679:INFO:Initializing create_model()
2024-08-01 12:27:22,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:22,679:INFO:Checking exceptions
2024-08-01 12:27:22,679:INFO:Importing libraries
2024-08-01 12:27:22,679:INFO:Copying training dataset
2024-08-01 12:27:22,679:INFO:Defining folds
2024-08-01 12:27:22,679:INFO:Declaring metric variables
2024-08-01 12:27:22,679:INFO:Importing untrained model
2024-08-01 12:27:22,679:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:27:22,694:INFO:Starting cross validation
2024-08-01 12:27:22,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:22,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:22,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:22,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:23,761:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:23,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:23,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:24,434:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:24,434:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:24,434:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,938:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,938:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:25,938:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:26,604:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:26,604:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:26,604:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,290:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,291:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,293:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:27,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:28,641:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:28,645:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:28,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:29,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:29,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:29,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:29,859:INFO:Calculating mean and std
2024-08-01 12:27:29,860:INFO:Creating metrics dataframe
2024-08-01 12:27:30,229:INFO:Uploading results into container
2024-08-01 12:27:30,229:INFO:Uploading model into container now
2024-08-01 12:27:30,229:INFO:_master_model_container: 24
2024-08-01 12:27:30,229:INFO:_display_container: 3
2024-08-01 12:27:30,229:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:27:30,229:INFO:create_model() successfully completed......................................
2024-08-01 12:27:30,298:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:30,298:INFO:Creating metrics dataframe
2024-08-01 12:27:30,313:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:27:30,313:INFO:Total runtime is 0.9346553881963094 minutes
2024-08-01 12:27:30,313:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:30,313:INFO:Initializing create_model()
2024-08-01 12:27:30,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:30,313:INFO:Checking exceptions
2024-08-01 12:27:30,313:INFO:Importing libraries
2024-08-01 12:27:30,313:INFO:Copying training dataset
2024-08-01 12:27:30,313:INFO:Defining folds
2024-08-01 12:27:30,313:INFO:Declaring metric variables
2024-08-01 12:27:30,313:INFO:Importing untrained model
2024-08-01 12:27:30,313:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:27:30,313:INFO:Starting cross validation
2024-08-01 12:27:30,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:30,425:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:30,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:30,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:30,529:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,012:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:31,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,595:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:31,712:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,712:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:31,712:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,179:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:32,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:32,881:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,881:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:32,881:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:33,361:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:33,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:33,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:33,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:33,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:33,958:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:34,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:34,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:34,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:34,549:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:34,659:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:34,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:34,662:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:35,249:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,250:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,251:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,719:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:27:35,828:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,828:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:35,828:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:27:35,828:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:36,202:INFO:Calculating mean and std
2024-08-01 12:27:36,203:INFO:Creating metrics dataframe
2024-08-01 12:27:36,562:INFO:Uploading results into container
2024-08-01 12:27:36,562:INFO:Uploading model into container now
2024-08-01 12:27:36,562:INFO:_master_model_container: 25
2024-08-01 12:27:36,562:INFO:_display_container: 3
2024-08-01 12:27:36,574:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:27:36,574:INFO:create_model() successfully completed......................................
2024-08-01 12:27:36,637:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:36,637:INFO:Creating metrics dataframe
2024-08-01 12:27:36,637:INFO:Initializing Ada Boost Classifier
2024-08-01 12:27:36,637:INFO:Total runtime is 1.040055219332377 minutes
2024-08-01 12:27:36,645:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:36,645:INFO:Initializing create_model()
2024-08-01 12:27:36,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:36,645:INFO:Checking exceptions
2024-08-01 12:27:36,645:INFO:Importing libraries
2024-08-01 12:27:36,645:INFO:Copying training dataset
2024-08-01 12:27:36,647:INFO:Defining folds
2024-08-01 12:27:36,648:INFO:Declaring metric variables
2024-08-01 12:27:36,649:INFO:Importing untrained model
2024-08-01 12:27:36,651:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:27:36,655:INFO:Starting cross validation
2024-08-01 12:27:36,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:36,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:36,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:36,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:37,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:37,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:37,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,278:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:38,929:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:39,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:39,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:39,595:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,260:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:40,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:41,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:41,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:41,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,249:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,250:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,251:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:42,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:43,262:INFO:Calculating mean and std
2024-08-01 12:27:43,277:INFO:Creating metrics dataframe
2024-08-01 12:27:43,645:INFO:Uploading results into container
2024-08-01 12:27:43,646:INFO:Uploading model into container now
2024-08-01 12:27:43,646:INFO:_master_model_container: 26
2024-08-01 12:27:43,646:INFO:_display_container: 3
2024-08-01 12:27:43,646:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226)
2024-08-01 12:27:43,646:INFO:create_model() successfully completed......................................
2024-08-01 12:27:43,712:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:43,712:INFO:Creating metrics dataframe
2024-08-01 12:27:43,712:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:27:43,712:INFO:Total runtime is 1.1579737424850465 minutes
2024-08-01 12:27:43,712:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:43,712:INFO:Initializing create_model()
2024-08-01 12:27:43,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:43,712:INFO:Checking exceptions
2024-08-01 12:27:43,712:INFO:Importing libraries
2024-08-01 12:27:43,712:INFO:Copying training dataset
2024-08-01 12:27:43,712:INFO:Defining folds
2024-08-01 12:27:43,712:INFO:Declaring metric variables
2024-08-01 12:27:43,712:INFO:Importing untrained model
2024-08-01 12:27:43,712:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:27:43,728:INFO:Starting cross validation
2024-08-01 12:27:43,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:44,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:44,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:44,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:44,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:44,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:44,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:45,397:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:45,398:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:45,398:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,765:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,766:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:46,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:47,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:47,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:47,445:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,794:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:48,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:49,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:49,478:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:49,479:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:50,148:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:50,149:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:50,150:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:50,524:INFO:Calculating mean and std
2024-08-01 12:27:50,524:INFO:Creating metrics dataframe
2024-08-01 12:27:50,962:INFO:Uploading results into container
2024-08-01 12:27:50,962:INFO:Uploading model into container now
2024-08-01 12:27:50,962:INFO:_master_model_container: 27
2024-08-01 12:27:50,962:INFO:_display_container: 3
2024-08-01 12:27:50,962:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:27:50,962:INFO:create_model() successfully completed......................................
2024-08-01 12:27:51,028:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:51,028:INFO:Creating metrics dataframe
2024-08-01 12:27:51,028:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:27:51,028:INFO:Total runtime is 1.2799161553382874 minutes
2024-08-01 12:27:51,028:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:51,028:INFO:Initializing create_model()
2024-08-01 12:27:51,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:51,028:INFO:Checking exceptions
2024-08-01 12:27:51,028:INFO:Importing libraries
2024-08-01 12:27:51,028:INFO:Copying training dataset
2024-08-01 12:27:51,028:INFO:Defining folds
2024-08-01 12:27:51,028:INFO:Declaring metric variables
2024-08-01 12:27:51,028:INFO:Importing untrained model
2024-08-01 12:27:51,028:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:27:51,046:INFO:Starting cross validation
2024-08-01 12:27:51,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:51,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:51,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:51,262:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:51,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:51,850:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:51,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:52,447:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:52,448:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:52,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:53,615:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:54,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:55,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:56,567:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:56,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:56,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:56,953:INFO:Calculating mean and std
2024-08-01 12:27:56,954:INFO:Creating metrics dataframe
2024-08-01 12:27:57,312:INFO:Uploading results into container
2024-08-01 12:27:57,312:INFO:Uploading model into container now
2024-08-01 12:27:57,312:INFO:_master_model_container: 28
2024-08-01 12:27:57,312:INFO:_display_container: 3
2024-08-01 12:27:57,312:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:27:57,312:INFO:create_model() successfully completed......................................
2024-08-01 12:27:57,378:INFO:SubProcess create_model() end ==================================
2024-08-01 12:27:57,378:INFO:Creating metrics dataframe
2024-08-01 12:27:57,378:INFO:Initializing Extra Trees Classifier
2024-08-01 12:27:57,378:INFO:Total runtime is 1.3857480049133302 minutes
2024-08-01 12:27:57,378:INFO:SubProcess create_model() called ==================================
2024-08-01 12:27:57,378:INFO:Initializing create_model()
2024-08-01 12:27:57,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:27:57,378:INFO:Checking exceptions
2024-08-01 12:27:57,378:INFO:Importing libraries
2024-08-01 12:27:57,378:INFO:Copying training dataset
2024-08-01 12:27:57,378:INFO:Defining folds
2024-08-01 12:27:57,378:INFO:Declaring metric variables
2024-08-01 12:27:57,378:INFO:Importing untrained model
2024-08-01 12:27:57,395:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:27:57,396:INFO:Starting cross validation
2024-08-01 12:27:57,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:27:57,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:57,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:57,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:58,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:58,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:58,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,229:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,229:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,229:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,961:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,961:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:27:59,961:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:00,690:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:00,695:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:00,695:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:01,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:01,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:01,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,164:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,164:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,164:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:02,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:03,677:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:03,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:03,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:04,427:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:04,429:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:04,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:04,810:INFO:Calculating mean and std
2024-08-01 12:28:04,811:INFO:Creating metrics dataframe
2024-08-01 12:28:05,248:INFO:Uploading results into container
2024-08-01 12:28:05,248:INFO:Uploading model into container now
2024-08-01 12:28:05,248:INFO:_master_model_container: 29
2024-08-01 12:28:05,249:INFO:_display_container: 3
2024-08-01 12:28:05,249:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False)
2024-08-01 12:28:05,249:INFO:create_model() successfully completed......................................
2024-08-01 12:28:05,321:INFO:SubProcess create_model() end ==================================
2024-08-01 12:28:05,321:INFO:Creating metrics dataframe
2024-08-01 12:28:05,326:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:28:05,326:INFO:Total runtime is 1.5182153900464377 minutes
2024-08-01 12:28:05,328:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:05,328:INFO:Initializing create_model()
2024-08-01 12:28:05,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:05,328:INFO:Checking exceptions
2024-08-01 12:28:05,328:INFO:Importing libraries
2024-08-01 12:28:05,328:INFO:Copying training dataset
2024-08-01 12:28:05,330:INFO:Defining folds
2024-08-01 12:28:05,330:INFO:Declaring metric variables
2024-08-01 12:28:05,330:INFO:Importing untrained model
2024-08-01 12:28:05,330:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:28:05,330:INFO:Starting cross validation
2024-08-01 12:28:05,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:28:05,478:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:05] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:05,677:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:05,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:05,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:06,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:06] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:06,407:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:06,410:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:06,411:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:06,951:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:06] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:07,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:07,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:07,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:07,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:07] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:07,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:07,908:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:07,910:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:08,461:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:08] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:08,654:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:08,655:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:08,657:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:09,195:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:09] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:09,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:09,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:09,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:09,931:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:09] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:10,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:10,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:10,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:10,711:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:10] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:10,898:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:10,898:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:10,898:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:11,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:11] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:11,637:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:11,644:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:11,645:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:12,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\xgboost\core.py:160: UserWarning: [12:28:12] WARNING: C:\buildkite-agent\builds\buildkite-windows-cpu-autoscaling-group-i-0b3782d1791676daf-1\xgboost\xgboost-ci-windows\src\common\error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)

2024-08-01 12:28:12,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:12,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:12,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:12,795:INFO:Calculating mean and std
2024-08-01 12:28:12,795:INFO:Creating metrics dataframe
2024-08-01 12:28:13,178:INFO:Uploading results into container
2024-08-01 12:28:13,194:INFO:Uploading model into container now
2024-08-01 12:28:13,194:INFO:_master_model_container: 30
2024-08-01 12:28:13,194:INFO:_display_container: 3
2024-08-01 12:28:13,195:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:28:13,195:INFO:create_model() successfully completed......................................
2024-08-01 12:28:13,257:INFO:SubProcess create_model() end ==================================
2024-08-01 12:28:13,257:INFO:Creating metrics dataframe
2024-08-01 12:28:13,263:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:28:13,263:INFO:Total runtime is 1.6504964470863344 minutes
2024-08-01 12:28:13,265:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:13,266:INFO:Initializing create_model()
2024-08-01 12:28:13,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:13,266:INFO:Checking exceptions
2024-08-01 12:28:13,266:INFO:Importing libraries
2024-08-01 12:28:13,266:INFO:Copying training dataset
2024-08-01 12:28:13,266:INFO:Defining folds
2024-08-01 12:28:13,266:INFO:Declaring metric variables
2024-08-01 12:28:13,266:INFO:Importing untrained model
2024-08-01 12:28:13,266:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:28:13,266:INFO:Starting cross validation
2024-08-01 12:28:13,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:28:13,578:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:13,579:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:13,581:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:14,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:14,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:14,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,750:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:15,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:16,461:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:16,461:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:16,461:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:17,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:18,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:18,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:18,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:19,328:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:19,328:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:19,328:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:20,057:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:20,058:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:20,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:20,481:INFO:Calculating mean and std
2024-08-01 12:28:20,481:INFO:Creating metrics dataframe
2024-08-01 12:28:20,861:INFO:Uploading results into container
2024-08-01 12:28:20,861:INFO:Uploading model into container now
2024-08-01 12:28:20,861:INFO:_master_model_container: 31
2024-08-01 12:28:20,861:INFO:_display_container: 3
2024-08-01 12:28:20,869:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:28:20,869:INFO:create_model() successfully completed......................................
2024-08-01 12:28:20,928:INFO:SubProcess create_model() end ==================================
2024-08-01 12:28:20,928:INFO:Creating metrics dataframe
2024-08-01 12:28:20,928:INFO:Initializing CatBoost Classifier
2024-08-01 12:28:20,928:INFO:Total runtime is 1.7782418648401896 minutes
2024-08-01 12:28:20,943:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:20,944:INFO:Initializing create_model()
2024-08-01 12:28:20,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D17A10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:20,944:INFO:Checking exceptions
2024-08-01 12:28:20,944:INFO:Importing libraries
2024-08-01 12:28:20,944:INFO:Copying training dataset
2024-08-01 12:28:20,946:INFO:Defining folds
2024-08-01 12:28:20,946:INFO:Declaring metric variables
2024-08-01 12:28:20,948:INFO:Importing untrained model
2024-08-01 12:28:20,949:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:28:20,953:INFO:Starting cross validation
2024-08-01 12:28:20,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-08-01 12:28:21,178:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:21,178:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:21,178:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:21,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:21,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:21,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:22,394:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:22,394:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:22,394:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,011:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,612:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,613:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:23,614:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,210:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:24,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:25,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:25,432:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:25,434:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,028:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,630:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,631:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,633:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:26,994:INFO:Calculating mean and std
2024-08-01 12:28:27,008:INFO:Creating metrics dataframe
2024-08-01 12:28:27,394:INFO:Uploading results into container
2024-08-01 12:28:27,394:INFO:Uploading model into container now
2024-08-01 12:28:27,394:INFO:_master_model_container: 32
2024-08-01 12:28:27,394:INFO:_display_container: 3
2024-08-01 12:28:27,394:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3930E690>
2024-08-01 12:28:27,394:INFO:create_model() successfully completed......................................
2024-08-01 12:28:27,460:INFO:SubProcess create_model() end ==================================
2024-08-01 12:28:27,460:INFO:Creating metrics dataframe
2024-08-01 12:28:27,461:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:28:27,461:INFO:Initializing create_model()
2024-08-01 12:28:27,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E30B52850>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:27,461:INFO:Checking exceptions
2024-08-01 12:28:27,461:INFO:Importing libraries
2024-08-01 12:28:27,461:INFO:Copying training dataset
2024-08-01 12:28:27,461:INFO:Defining folds
2024-08-01 12:28:27,461:INFO:Declaring metric variables
2024-08-01 12:28:27,461:INFO:Importing untrained model
2024-08-01 12:28:27,461:INFO:Declaring custom model
2024-08-01 12:28:27,461:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:28:27,461:INFO:Cross validation set to False
2024-08-01 12:28:27,477:INFO:Fitting Model
2024-08-01 12:28:27,994:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:28:27,994:INFO:create_model() successfully completed......................................
2024-08-01 12:28:28,061:INFO:_master_model_container: 32
2024-08-01 12:28:28,061:INFO:_display_container: 3
2024-08-01 12:28:28,061:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:28:28,061:INFO:compare_models() successfully completed......................................
2024-08-01 12:28:28,111:INFO:Initializing save_model()
2024-08-01 12:28:28,111:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/XGBClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:28,111:INFO:Adding model into prep_pipe
2024-08-01 12:28:28,128:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/XGBClassifier.pkl saved in current working directory
2024-08-01 12:28:28,178:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-08-01 12:28:28,178:INFO:save_model() successfully completed......................................
2024-08-01 12:28:28,680:INFO:Initializing save_model()
2024-08-01 12:28:28,680:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8226, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/GradientBoostingClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:28,680:INFO:Adding model into prep_pipe
2024-08-01 12:28:28,694:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/GradientBoostingClassifier.pkl saved in current working directory
2024-08-01 12:28:28,728:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=8226, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:28:28,728:INFO:save_model() successfully completed......................................
2024-08-01 12:28:29,227:INFO:Initializing save_model()
2024-08-01 12:28:29,227:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=8226, reg_alpha=0.0, reg_lambda=0.0,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/LGBMClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:29,227:INFO:Adding model into prep_pipe
2024-08-01 12:28:29,250:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/LGBMClassifier.pkl saved in current working directory
2024-08-01 12:28:29,299:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, device='gpu',
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=20,
                                min_child_weight=0.001, min_split_gain=0.0,
                                n_estimators=100, n_jobs=-1, num_leaves=31,
                                objective=None, random_state=8226,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2024-08-01 12:28:29,299:INFO:save_model() successfully completed......................................
2024-08-01 12:28:29,811:INFO:Initializing save_model()
2024-08-01 12:28:29,811:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8226, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/RandomForestClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:29,811:INFO:Adding model into prep_pipe
2024-08-01 12:28:29,849:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/RandomForestClassifier.pkl saved in current working directory
2024-08-01 12:28:29,878:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=8226,
                                        verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:28:29,878:INFO:save_model() successfully completed......................................
2024-08-01 12:28:30,380:INFO:Initializing save_model()
2024-08-01 12:28:30,380:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000028E3932B8D0>, model_name=GPU_1_XAPI_ML_VALIDATION_kfold/CatBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:30,380:INFO:Adding model into prep_pipe
2024-08-01 12:28:30,394:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/CatBoostClassifier.pkl saved in current working directory
2024-08-01 12:28:30,435:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000028E3932B8D0>)],
         verbose=False)
2024-08-01 12:28:30,435:INFO:save_model() successfully completed......................................
2024-08-01 12:28:30,930:INFO:Initializing save_model()
2024-08-01 12:28:30,930:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8226), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/AdaBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:30,930:INFO:Adding model into prep_pipe
2024-08-01 12:28:30,953:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/AdaBoostClassifier.pkl saved in current working directory
2024-08-01 12:28:30,978:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=8226))],
         verbose=False)
2024-08-01 12:28:30,978:INFO:save_model() successfully completed......................................
2024-08-01 12:28:31,478:INFO:Initializing save_model()
2024-08-01 12:28:31,478:INFO:save_model(model=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8226, solver='auto',
                tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/RidgeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:31,478:INFO:Adding model into prep_pipe
2024-08-01 12:28:31,494:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/RidgeClassifier.pkl saved in current working directory
2024-08-01 12:28:31,528:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=8226,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-08-01 12:28:31,528:INFO:save_model() successfully completed......................................
2024-08-01 12:28:32,028:INFO:Initializing save_model()
2024-08-01 12:28:32,028:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/LogisticRegression, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:32,028:INFO:Adding model into prep_pipe
2024-08-01 12:28:32,028:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/LogisticRegression.pkl saved in current working directory
2024-08-01 12:28:32,061:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=8226,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-08-01 12:28:32,061:INFO:save_model() successfully completed......................................
2024-08-01 12:28:32,577:INFO:Initializing save_model()
2024-08-01 12:28:32,577:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/LinearDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:32,577:INFO:Adding model into prep_pipe
2024-08-01 12:28:32,578:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/LinearDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:28:32,611:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-08-01 12:28:32,611:INFO:save_model() successfully completed......................................
2024-08-01 12:28:33,111:INFO:Initializing save_model()
2024-08-01 12:28:33,111:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8226, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/ExtraTreesClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:33,111:INFO:Adding model into prep_pipe
2024-08-01 12:28:33,153:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/ExtraTreesClassifier.pkl saved in current working directory
2024-08-01 12:28:33,183:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=8226,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:28:33,183:INFO:save_model() successfully completed......................................
2024-08-01 12:28:33,678:INFO:Initializing save_model()
2024-08-01 12:28:33,678:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8226, splitter='best'), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/DecisionTreeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:33,678:INFO:Adding model into prep_pipe
2024-08-01 12:28:33,694:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/DecisionTreeClassifier.pkl saved in current working directory
2024-08-01 12:28:33,728:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8226, splitter='best'))],
         verbose=False)
2024-08-01 12:28:33,728:INFO:save_model() successfully completed......................................
2024-08-01 12:28:34,230:INFO:Initializing save_model()
2024-08-01 12:28:34,230:INFO:save_model(model=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8226, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/SGDClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:34,230:INFO:Adding model into prep_pipe
2024-08-01 12:28:34,230:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/SGDClassifier.pkl saved in current working directory
2024-08-01 12:28:34,278:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=8226,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:28:34,278:INFO:save_model() successfully completed......................................
2024-08-01 12:28:34,789:INFO:Initializing save_model()
2024-08-01 12:28:34,789:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/GaussianNB, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:34,789:INFO:Adding model into prep_pipe
2024-08-01 12:28:34,797:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/GaussianNB.pkl saved in current working directory
2024-08-01 12:28:34,828:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-08-01 12:28:34,828:INFO:save_model() successfully completed......................................
2024-08-01 12:28:35,330:INFO:Initializing save_model()
2024-08-01 12:28:35,330:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=GPU_1_XAPI_ML_VALIDATION_kfold/QuadraticDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:28:35,330:INFO:Adding model into prep_pipe
2024-08-01 12:28:35,344:INFO:GPU_1_XAPI_ML_VALIDATION_kfold/QuadraticDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:28:35,378:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-08-01 12:28:35,378:INFO:save_model() successfully completed......................................
2024-08-01 12:28:35,828:WARNING:C:\Users\JAL\AppData\Local\Temp\ipykernel_24440\220787957.py:82: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  best_model[best_model.select_dtypes(include=['number']).columns] *= 100

2024-08-01 12:28:36,594:INFO:PyCaret ClassificationExperiment
2024-08-01 12:28:36,594:INFO:Logging name: clf-default-name
2024-08-01 12:28:36,594:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-01 12:28:36,594:INFO:version 3.0.0
2024-08-01 12:28:36,594:INFO:Initializing setup()
2024-08-01 12:28:36,594:INFO:self.USI: 507a
2024-08-01 12:28:36,594:INFO:self._variable_keys: {'n_jobs_param', 'USI', 'log_plots_param', 'gpu_param', 'target_param', 'html_param', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'exp_id', 'data', 'idx', 'memory', 'fix_imbalance', 'is_multiclass', 'X_test', 'seed', 'X', 'fold_groups_param', 'y_test', '_ml_usecase', 'X_train', 'fold_generator', 'y_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y'}
2024-08-01 12:28:36,594:INFO:Checking environment
2024-08-01 12:28:36,594:INFO:python_version: 3.11.4
2024-08-01 12:28:36,594:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-08-01 12:28:36,594:INFO:machine: AMD64
2024-08-01 12:28:36,594:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-01 12:28:36,594:INFO:Memory: svmem(total=68659781632, available=49115910144, percent=28.5, used=19543871488, free=49115910144)
2024-08-01 12:28:36,594:INFO:Physical Core: 16
2024-08-01 12:28:36,594:INFO:Logical Core: 32
2024-08-01 12:28:36,594:INFO:Checking libraries
2024-08-01 12:28:36,594:INFO:System:
2024-08-01 12:28:36,594:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-08-01 12:28:36,594:INFO:executable: c:\Users\JAL\AppData\Local\Programs\Python\Python311\python.exe
2024-08-01 12:28:36,594:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-01 12:28:36,594:INFO:PyCaret required dependencies:
2024-08-01 12:28:36,594:INFO:                 pip: 24.1.2
2024-08-01 12:28:36,594:INFO:          setuptools: 70.3.0
2024-08-01 12:28:36,594:INFO:             pycaret: 3.0.0
2024-08-01 12:28:36,594:INFO:             IPython: 8.15.0
2024-08-01 12:28:36,594:INFO:          ipywidgets: 8.1.3
2024-08-01 12:28:36,594:INFO:                tqdm: 4.66.4
2024-08-01 12:28:36,594:INFO:               numpy: 1.24.4
2024-08-01 12:28:36,594:INFO:              pandas: 2.2.2
2024-08-01 12:28:36,594:INFO:              jinja2: 3.1.4
2024-08-01 12:28:36,594:INFO:               scipy: 1.11.4
2024-08-01 12:28:36,594:INFO:              joblib: 1.3.2
2024-08-01 12:28:36,594:INFO:             sklearn: 1.3.0
2024-08-01 12:28:36,594:INFO:                pyod: 2.0.1
2024-08-01 12:28:36,594:INFO:            imblearn: 0.12.3
2024-08-01 12:28:36,594:INFO:   category_encoders: 2.6.3
2024-08-01 12:28:36,594:INFO:            lightgbm: 4.3.0
2024-08-01 12:28:36,594:INFO:               numba: 0.60.0
2024-08-01 12:28:36,594:INFO:            requests: 2.32.3
2024-08-01 12:28:36,594:INFO:          matplotlib: 3.7.5
2024-08-01 12:28:36,594:INFO:          scikitplot: 0.3.7
2024-08-01 12:28:36,594:INFO:         yellowbrick: 1.5
2024-08-01 12:28:36,594:INFO:              plotly: 5.22.0
2024-08-01 12:28:36,594:INFO:             kaleido: 0.2.1
2024-08-01 12:28:36,594:INFO:         statsmodels: 0.14.2
2024-08-01 12:28:36,594:INFO:              sktime: 0.26.0
2024-08-01 12:28:36,594:INFO:               tbats: 1.1.3
2024-08-01 12:28:36,594:INFO:            pmdarima: 2.0.4
2024-08-01 12:28:36,594:INFO:              psutil: 5.9.5
2024-08-01 12:28:36,594:INFO:PyCaret optional dependencies:
2024-08-01 12:28:36,594:INFO:                shap: Not installed
2024-08-01 12:28:36,594:INFO:           interpret: Not installed
2024-08-01 12:28:36,594:INFO:                umap: Not installed
2024-08-01 12:28:36,594:INFO:    pandas_profiling: Not installed
2024-08-01 12:28:36,594:INFO:  explainerdashboard: Not installed
2024-08-01 12:28:36,594:INFO:             autoviz: Not installed
2024-08-01 12:28:36,594:INFO:           fairlearn: Not installed
2024-08-01 12:28:36,594:INFO:             xgboost: 2.0.3
2024-08-01 12:28:36,594:INFO:            catboost: 1.2.5
2024-08-01 12:28:36,594:INFO:              kmodes: Not installed
2024-08-01 12:28:36,594:INFO:             mlxtend: Not installed
2024-08-01 12:28:36,594:INFO:       statsforecast: 1.4.0
2024-08-01 12:28:36,594:INFO:        tune_sklearn: Not installed
2024-08-01 12:28:36,594:INFO:                 ray: 2.10.0
2024-08-01 12:28:36,594:INFO:            hyperopt: 0.2.7
2024-08-01 12:28:36,594:INFO:              optuna: Not installed
2024-08-01 12:28:36,594:INFO:               skopt: Not installed
2024-08-01 12:28:36,594:INFO:              mlflow: Not installed
2024-08-01 12:28:36,594:INFO:              gradio: Not installed
2024-08-01 12:28:36,594:INFO:             fastapi: Not installed
2024-08-01 12:28:36,594:INFO:             uvicorn: Not installed
2024-08-01 12:28:36,594:INFO:              m2cgen: Not installed
2024-08-01 12:28:36,594:INFO:           evidently: Not installed
2024-08-01 12:28:36,594:INFO:               fugue: Not installed
2024-08-01 12:28:36,594:INFO:           streamlit: 1.31.0
2024-08-01 12:28:36,594:INFO:             prophet: Not installed
2024-08-01 12:28:36,594:INFO:None
2024-08-01 12:28:36,594:INFO:Set up data.
2024-08-01 12:28:36,594:INFO:Set up train/test split.
2024-08-01 12:28:36,610:INFO:Set up index.
2024-08-01 12:28:36,610:INFO:Set up folding strategy.
2024-08-01 12:28:36,610:INFO:Assigning column types.
2024-08-01 12:28:36,611:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-01 12:28:36,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,658:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,661:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,678:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,694:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,710:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,710:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-01 12:28:36,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,757:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,758:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,778:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:28:36,794:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,794:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,794:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-01 12:28:36,854:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,856:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,894:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:36,894:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:36,894:INFO:Preparing preprocessing pipeline...
2024-08-01 12:28:36,894:INFO:Set up label encoding.
2024-08-01 12:28:36,894:INFO:Set up simple imputation.
2024-08-01 12:28:36,894:INFO:Set up encoding of ordinal features.
2024-08-01 12:28:36,911:INFO:Set up encoding of categorical features.
2024-08-01 12:28:36,978:INFO:Finished creating preprocessing pipeline.
2024-08-01 12:28:37,029:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-08-01 12:28:37,029:INFO:Creating final display dataframe.
2024-08-01 12:28:37,247:INFO:Setup _display_container:                     Description             Value
0                    Session id              5105
1                        Target             Class
2                   Target type        Multiclass
3                Target mapping  H: 0, L: 1, M: 2
4           Original data shape         (360, 17)
5        Transformed data shape         (360, 67)
6   Transformed train set shape         (270, 67)
7    Transformed test set shape          (90, 67)
8              Ordinal features                 6
9              Numeric features                 4
10         Categorical features                12
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              507a
2024-08-01 12:28:37,298:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:37,312:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:37,359:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:28:37,361:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:28:37,361:INFO:setup() successfully completed in 1.15s...............
2024-08-01 12:28:37,361:INFO:Initializing compare_models()
2024-08-01 12:28:37,361:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:28:37,361:INFO:Checking exceptions
2024-08-01 12:28:37,361:INFO:Preparing display monitor
2024-08-01 12:28:37,361:INFO:Initializing Logistic Regression
2024-08-01 12:28:37,361:INFO:Total runtime is 0.0 minutes
2024-08-01 12:28:37,361:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:37,377:INFO:Initializing create_model()
2024-08-01 12:28:37,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:37,377:INFO:Checking exceptions
2024-08-01 12:28:37,377:INFO:Importing libraries
2024-08-01 12:28:37,377:INFO:Copying training dataset
2024-08-01 12:28:37,378:INFO:Defining folds
2024-08-01 12:28:37,378:INFO:Declaring metric variables
2024-08-01 12:28:37,382:INFO:Importing untrained model
2024-08-01 12:28:37,383:INFO:Logistic Regression Imported successfully
2024-08-01 12:28:37,387:INFO:Starting cross validation
2024-08-01 12:28:37,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:28:39,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,893:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,894:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,894:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,894:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:39,894:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:40,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:43,994:INFO:Calculating mean and std
2024-08-01 12:28:43,994:INFO:Creating metrics dataframe
2024-08-01 12:28:44,494:INFO:Uploading results into container
2024-08-01 12:28:44,494:INFO:Uploading model into container now
2024-08-01 12:28:44,494:INFO:_master_model_container: 1
2024-08-01 12:28:44,494:INFO:_display_container: 2
2024-08-01 12:28:44,494:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:28:44,494:INFO:create_model() successfully completed......................................
2024-08-01 12:28:44,561:INFO:SubProcess create_model() end ==================================
2024-08-01 12:28:44,561:INFO:Creating metrics dataframe
2024-08-01 12:28:44,573:INFO:Initializing K Neighbors Classifier
2024-08-01 12:28:44,573:INFO:Total runtime is 0.12019697427749634 minutes
2024-08-01 12:28:44,573:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:44,573:INFO:Initializing create_model()
2024-08-01 12:28:44,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:44,573:INFO:Checking exceptions
2024-08-01 12:28:44,573:INFO:Importing libraries
2024-08-01 12:28:44,577:INFO:Copying training dataset
2024-08-01 12:28:44,579:INFO:Defining folds
2024-08-01 12:28:44,579:INFO:Declaring metric variables
2024-08-01 12:28:44,580:INFO:Importing untrained model
2024-08-01 12:28:44,580:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:28:44,580:INFO:Starting cross validation
2024-08-01 12:28:44,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:28:46,535:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,535:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,535:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,535:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,535:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,543:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,549:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,550:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,555:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,831:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,841:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,844:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,845:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,847:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:46,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:50,465:INFO:Calculating mean and std
2024-08-01 12:28:50,465:INFO:Creating metrics dataframe
2024-08-01 12:28:50,927:INFO:Uploading results into container
2024-08-01 12:28:50,927:INFO:Uploading model into container now
2024-08-01 12:28:50,927:INFO:_master_model_container: 2
2024-08-01 12:28:50,927:INFO:_display_container: 2
2024-08-01 12:28:50,939:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:28:50,939:INFO:create_model() successfully completed......................................
2024-08-01 12:28:50,995:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:28:50,995:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:28:50,995:INFO:Initializing create_model()
2024-08-01 12:28:50,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:50,995:INFO:Checking exceptions
2024-08-01 12:28:50,995:INFO:Importing libraries
2024-08-01 12:28:50,995:INFO:Copying training dataset
2024-08-01 12:28:50,995:INFO:Defining folds
2024-08-01 12:28:50,995:INFO:Declaring metric variables
2024-08-01 12:28:50,995:INFO:Importing untrained model
2024-08-01 12:28:50,995:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:28:51,010:INFO:Starting cross validation
2024-08-01 12:28:51,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:28:52,899:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,899:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,903:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:52,912:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:53,214:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:28:56,802:INFO:Calculating mean and std
2024-08-01 12:28:56,802:INFO:Creating metrics dataframe
2024-08-01 12:28:57,296:INFO:Uploading results into container
2024-08-01 12:28:57,296:INFO:Uploading model into container now
2024-08-01 12:28:57,296:INFO:_master_model_container: 3
2024-08-01 12:28:57,296:INFO:_display_container: 2
2024-08-01 12:28:57,299:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:28:57,299:INFO:create_model() successfully completed......................................
2024-08-01 12:28:57,374:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:28:57,377:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:28:57,377:INFO:Initializing Naive Bayes
2024-08-01 12:28:57,377:INFO:Total runtime is 0.3336019396781922 minutes
2024-08-01 12:28:57,379:INFO:SubProcess create_model() called ==================================
2024-08-01 12:28:57,380:INFO:Initializing create_model()
2024-08-01 12:28:57,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:28:57,380:INFO:Checking exceptions
2024-08-01 12:28:57,380:INFO:Importing libraries
2024-08-01 12:28:57,380:INFO:Copying training dataset
2024-08-01 12:28:57,380:INFO:Defining folds
2024-08-01 12:28:57,380:INFO:Declaring metric variables
2024-08-01 12:28:57,380:INFO:Importing untrained model
2024-08-01 12:28:57,380:INFO:Naive Bayes Imported successfully
2024-08-01 12:28:57,380:INFO:Starting cross validation
2024-08-01 12:28:57,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:28:57,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:57,673:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,320:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,322:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,322:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:28:59,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,326:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:28:59,328:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:01,503:INFO:Calculating mean and std
2024-08-01 12:29:01,503:INFO:Creating metrics dataframe
2024-08-01 12:29:02,013:INFO:Uploading results into container
2024-08-01 12:29:02,013:INFO:Uploading model into container now
2024-08-01 12:29:02,014:INFO:_master_model_container: 4
2024-08-01 12:29:02,014:INFO:_display_container: 2
2024-08-01 12:29:02,014:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:29:02,014:INFO:create_model() successfully completed......................................
2024-08-01 12:29:02,077:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:02,077:INFO:Creating metrics dataframe
2024-08-01 12:29:02,081:INFO:Initializing Decision Tree Classifier
2024-08-01 12:29:02,081:INFO:Total runtime is 0.41200449864069627 minutes
2024-08-01 12:29:02,083:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:02,083:INFO:Initializing create_model()
2024-08-01 12:29:02,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:02,083:INFO:Checking exceptions
2024-08-01 12:29:02,083:INFO:Importing libraries
2024-08-01 12:29:02,083:INFO:Copying training dataset
2024-08-01 12:29:02,085:INFO:Defining folds
2024-08-01 12:29:02,086:INFO:Declaring metric variables
2024-08-01 12:29:02,087:INFO:Importing untrained model
2024-08-01 12:29:02,089:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:29:02,093:INFO:Starting cross validation
2024-08-01 12:29:02,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:02,337:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,338:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,338:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,339:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,340:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,341:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,345:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,346:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,346:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,346:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,347:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,348:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,348:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,349:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,351:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,351:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,353:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,353:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,354:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,356:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,356:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,357:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,358:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,359:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,363:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:02,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:05,949:INFO:Calculating mean and std
2024-08-01 12:29:05,950:INFO:Creating metrics dataframe
2024-08-01 12:29:06,431:INFO:Uploading results into container
2024-08-01 12:29:06,431:INFO:Uploading model into container now
2024-08-01 12:29:06,431:INFO:_master_model_container: 5
2024-08-01 12:29:06,432:INFO:_display_container: 2
2024-08-01 12:29:06,432:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best')
2024-08-01 12:29:06,432:INFO:create_model() successfully completed......................................
2024-08-01 12:29:06,503:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:06,503:INFO:Creating metrics dataframe
2024-08-01 12:29:06,505:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:29:06,505:INFO:Total runtime is 0.4857269207636516 minutes
2024-08-01 12:29:06,505:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:06,505:INFO:Initializing create_model()
2024-08-01 12:29:06,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:06,505:INFO:Checking exceptions
2024-08-01 12:29:06,505:INFO:Importing libraries
2024-08-01 12:29:06,505:INFO:Copying training dataset
2024-08-01 12:29:06,512:INFO:Defining folds
2024-08-01 12:29:06,512:INFO:Declaring metric variables
2024-08-01 12:29:06,514:INFO:Importing untrained model
2024-08-01 12:29:06,516:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:29:06,519:INFO:Starting cross validation
2024-08-01 12:29:06,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:06,732:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,733:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,735:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,737:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,737:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,739:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,739:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,740:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,740:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,741:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,741:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,741:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,742:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,744:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,744:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,745:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,745:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,746:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,746:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,747:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,747:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,748:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,749:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,749:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,750:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,751:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:06,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:06,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:06,755:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:10,320:INFO:Calculating mean and std
2024-08-01 12:29:10,321:INFO:Creating metrics dataframe
2024-08-01 12:29:10,825:INFO:Uploading results into container
2024-08-01 12:29:10,826:INFO:Uploading model into container now
2024-08-01 12:29:10,826:INFO:_master_model_container: 6
2024-08-01 12:29:10,826:INFO:_display_container: 2
2024-08-01 12:29:10,826:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:29:10,826:INFO:create_model() successfully completed......................................
2024-08-01 12:29:10,896:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:10,896:INFO:Creating metrics dataframe
2024-08-01 12:29:10,900:INFO:Initializing Ridge Classifier
2024-08-01 12:29:10,900:INFO:Total runtime is 0.5589894851048788 minutes
2024-08-01 12:29:10,902:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:10,902:INFO:Initializing create_model()
2024-08-01 12:29:10,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:10,903:INFO:Checking exceptions
2024-08-01 12:29:10,903:INFO:Importing libraries
2024-08-01 12:29:10,903:INFO:Copying training dataset
2024-08-01 12:29:10,905:INFO:Defining folds
2024-08-01 12:29:10,905:INFO:Declaring metric variables
2024-08-01 12:29:10,906:INFO:Importing untrained model
2024-08-01 12:29:10,908:INFO:Ridge Classifier Imported successfully
2024-08-01 12:29:10,912:INFO:Starting cross validation
2024-08-01 12:29:10,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:11,101:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,102:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,105:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,107:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,109:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,111:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,112:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,115:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,115:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,115:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,119:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,119:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,121:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,122:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,126:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:29:11,127:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:11,129:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:14,689:INFO:Calculating mean and std
2024-08-01 12:29:14,690:INFO:Creating metrics dataframe
2024-08-01 12:29:15,194:INFO:Uploading results into container
2024-08-01 12:29:15,195:INFO:Uploading model into container now
2024-08-01 12:29:15,195:INFO:_master_model_container: 7
2024-08-01 12:29:15,195:INFO:_display_container: 2
2024-08-01 12:29:15,195:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001)
2024-08-01 12:29:15,195:INFO:create_model() successfully completed......................................
2024-08-01 12:29:15,261:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:15,261:INFO:Creating metrics dataframe
2024-08-01 12:29:15,266:INFO:Initializing Random Forest Classifier
2024-08-01 12:29:15,266:INFO:Total runtime is 0.6317457834879557 minutes
2024-08-01 12:29:15,268:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:15,268:INFO:Initializing create_model()
2024-08-01 12:29:15,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:15,268:INFO:Checking exceptions
2024-08-01 12:29:15,268:INFO:Importing libraries
2024-08-01 12:29:15,268:INFO:Copying training dataset
2024-08-01 12:29:15,270:INFO:Defining folds
2024-08-01 12:29:15,270:INFO:Declaring metric variables
2024-08-01 12:29:15,271:INFO:Importing untrained model
2024-08-01 12:29:15,274:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:29:15,277:INFO:Starting cross validation
2024-08-01 12:29:15,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:15,832:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,832:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,833:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,835:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,835:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,836:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,838:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,840:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,840:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,841:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,841:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,843:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,846:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,846:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,848:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,854:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,857:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,857:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,858:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,860:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,869:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,872:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,883:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:15,885:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:19,480:INFO:Calculating mean and std
2024-08-01 12:29:19,481:INFO:Creating metrics dataframe
2024-08-01 12:29:19,985:INFO:Uploading results into container
2024-08-01 12:29:19,985:INFO:Uploading model into container now
2024-08-01 12:29:19,985:INFO:_master_model_container: 8
2024-08-01 12:29:19,985:INFO:_display_container: 2
2024-08-01 12:29:19,986:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:29:19,986:INFO:create_model() successfully completed......................................
2024-08-01 12:29:20,049:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:20,049:INFO:Creating metrics dataframe
2024-08-01 12:29:20,053:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:29:20,053:INFO:Total runtime is 0.7115417083104452 minutes
2024-08-01 12:29:20,055:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:20,055:INFO:Initializing create_model()
2024-08-01 12:29:20,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:20,055:INFO:Checking exceptions
2024-08-01 12:29:20,055:INFO:Importing libraries
2024-08-01 12:29:20,055:INFO:Copying training dataset
2024-08-01 12:29:20,057:INFO:Defining folds
2024-08-01 12:29:20,057:INFO:Declaring metric variables
2024-08-01 12:29:20,059:INFO:Importing untrained model
2024-08-01 12:29:20,062:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:29:20,065:INFO:Starting cross validation
2024-08-01 12:29:20,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:20,190:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,190:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,194:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,195:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,200:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,213:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:29:20,311:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,313:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,313:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,314:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,315:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,315:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,320:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,324:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,324:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:20,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,326:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,327:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,328:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,329:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,333:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:20,336:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:23,938:INFO:Calculating mean and std
2024-08-01 12:29:23,939:INFO:Creating metrics dataframe
2024-08-01 12:29:24,422:INFO:Uploading results into container
2024-08-01 12:29:24,422:INFO:Uploading model into container now
2024-08-01 12:29:24,422:INFO:_master_model_container: 9
2024-08-01 12:29:24,422:INFO:_display_container: 2
2024-08-01 12:29:24,424:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:29:24,424:INFO:create_model() successfully completed......................................
2024-08-01 12:29:24,492:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:24,492:INFO:Creating metrics dataframe
2024-08-01 12:29:24,496:INFO:Initializing Ada Boost Classifier
2024-08-01 12:29:24,497:INFO:Total runtime is 0.785601794719696 minutes
2024-08-01 12:29:24,498:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:24,499:INFO:Initializing create_model()
2024-08-01 12:29:24,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:24,499:INFO:Checking exceptions
2024-08-01 12:29:24,499:INFO:Importing libraries
2024-08-01 12:29:24,499:INFO:Copying training dataset
2024-08-01 12:29:24,501:INFO:Defining folds
2024-08-01 12:29:24,501:INFO:Declaring metric variables
2024-08-01 12:29:24,503:INFO:Importing untrained model
2024-08-01 12:29:24,505:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:29:24,509:INFO:Starting cross validation
2024-08-01 12:29:24,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:24,845:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,846:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,847:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,847:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,849:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,852:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,852:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,852:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,853:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,854:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,855:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,856:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,856:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,858:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,859:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,859:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,860:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,860:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,861:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,861:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,863:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,863:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:24,864:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:28,442:INFO:Calculating mean and std
2024-08-01 12:29:28,442:INFO:Creating metrics dataframe
2024-08-01 12:29:28,956:INFO:Uploading results into container
2024-08-01 12:29:28,957:INFO:Uploading model into container now
2024-08-01 12:29:28,957:INFO:_master_model_container: 10
2024-08-01 12:29:28,957:INFO:_display_container: 2
2024-08-01 12:29:28,957:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105)
2024-08-01 12:29:28,958:INFO:create_model() successfully completed......................................
2024-08-01 12:29:29,029:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:29,029:INFO:Creating metrics dataframe
2024-08-01 12:29:29,033:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:29:29,034:INFO:Total runtime is 0.8612244447072347 minutes
2024-08-01 12:29:29,036:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:29,036:INFO:Initializing create_model()
2024-08-01 12:29:29,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:29,036:INFO:Checking exceptions
2024-08-01 12:29:29,036:INFO:Importing libraries
2024-08-01 12:29:29,036:INFO:Copying training dataset
2024-08-01 12:29:29,039:INFO:Defining folds
2024-08-01 12:29:29,039:INFO:Declaring metric variables
2024-08-01 12:29:29,040:INFO:Importing untrained model
2024-08-01 12:29:29,042:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:29:29,045:INFO:Starting cross validation
2024-08-01 12:29:29,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:29,774:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,774:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,775:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,776:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,776:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,777:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,777:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,780:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,786:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,786:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,791:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,793:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,794:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,796:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,797:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:29,798:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:33,372:INFO:Calculating mean and std
2024-08-01 12:29:33,372:INFO:Creating metrics dataframe
2024-08-01 12:29:33,895:INFO:Uploading results into container
2024-08-01 12:29:33,895:INFO:Uploading model into container now
2024-08-01 12:29:33,896:INFO:_master_model_container: 11
2024-08-01 12:29:33,896:INFO:_display_container: 2
2024-08-01 12:29:33,896:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:29:33,896:INFO:create_model() successfully completed......................................
2024-08-01 12:29:33,960:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:33,960:INFO:Creating metrics dataframe
2024-08-01 12:29:33,967:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:29:33,967:INFO:Total runtime is 0.9434294899304708 minutes
2024-08-01 12:29:33,969:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:33,969:INFO:Initializing create_model()
2024-08-01 12:29:33,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:33,969:INFO:Checking exceptions
2024-08-01 12:29:33,969:INFO:Importing libraries
2024-08-01 12:29:33,969:INFO:Copying training dataset
2024-08-01 12:29:33,971:INFO:Defining folds
2024-08-01 12:29:33,971:INFO:Declaring metric variables
2024-08-01 12:29:33,972:INFO:Importing untrained model
2024-08-01 12:29:33,974:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:29:33,978:INFO:Starting cross validation
2024-08-01 12:29:33,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:34,228:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,229:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,230:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,233:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,234:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,236:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,236:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,237:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,237:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,238:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,240:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,241:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,243:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,243:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,244:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,245:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,246:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,247:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,248:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,250:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,250:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,251:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,251:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,252:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,252:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,252:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,253:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:34,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:37,871:INFO:Calculating mean and std
2024-08-01 12:29:37,872:INFO:Creating metrics dataframe
2024-08-01 12:29:38,385:INFO:Uploading results into container
2024-08-01 12:29:38,385:INFO:Uploading model into container now
2024-08-01 12:29:38,385:INFO:_master_model_container: 12
2024-08-01 12:29:38,385:INFO:_display_container: 2
2024-08-01 12:29:38,386:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:29:38,386:INFO:create_model() successfully completed......................................
2024-08-01 12:29:38,455:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:38,455:INFO:Creating metrics dataframe
2024-08-01 12:29:38,460:INFO:Initializing Extra Trees Classifier
2024-08-01 12:29:38,462:INFO:Total runtime is 1.0183486024538677 minutes
2024-08-01 12:29:38,463:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:38,464:INFO:Initializing create_model()
2024-08-01 12:29:38,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:38,464:INFO:Checking exceptions
2024-08-01 12:29:38,464:INFO:Importing libraries
2024-08-01 12:29:38,464:INFO:Copying training dataset
2024-08-01 12:29:38,466:INFO:Defining folds
2024-08-01 12:29:38,466:INFO:Declaring metric variables
2024-08-01 12:29:38,468:INFO:Importing untrained model
2024-08-01 12:29:38,470:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:29:38,473:INFO:Starting cross validation
2024-08-01 12:29:38,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:38,956:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:38,958:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:38,960:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:38,974:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:38,976:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:38,977:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,035:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,039:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,040:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,041:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,042:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,042:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,064:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,064:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,067:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,067:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,068:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,068:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:39,070:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:42,620:INFO:Calculating mean and std
2024-08-01 12:29:42,620:INFO:Creating metrics dataframe
2024-08-01 12:29:43,134:INFO:Uploading results into container
2024-08-01 12:29:43,134:INFO:Uploading model into container now
2024-08-01 12:29:43,134:INFO:_master_model_container: 13
2024-08-01 12:29:43,134:INFO:_display_container: 2
2024-08-01 12:29:43,135:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:29:43,135:INFO:create_model() successfully completed......................................
2024-08-01 12:29:43,197:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:43,197:INFO:Creating metrics dataframe
2024-08-01 12:29:43,202:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:29:43,202:INFO:Total runtime is 1.0973547617594401 minutes
2024-08-01 12:29:43,205:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:43,205:INFO:Initializing create_model()
2024-08-01 12:29:43,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:43,205:INFO:Checking exceptions
2024-08-01 12:29:43,205:INFO:Importing libraries
2024-08-01 12:29:43,205:INFO:Copying training dataset
2024-08-01 12:29:43,208:INFO:Defining folds
2024-08-01 12:29:43,208:INFO:Declaring metric variables
2024-08-01 12:29:43,210:INFO:Importing untrained model
2024-08-01 12:29:43,212:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:29:43,216:INFO:Starting cross validation
2024-08-01 12:29:43,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:43,685:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,686:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,687:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,693:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,694:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,695:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,706:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,706:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,707:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,708:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,709:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,709:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,710:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,710:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,710:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,712:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,713:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,713:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,714:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,714:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,714:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,715:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,716:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,716:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,716:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:43,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:47,399:INFO:Calculating mean and std
2024-08-01 12:29:47,400:INFO:Creating metrics dataframe
2024-08-01 12:29:47,902:INFO:Uploading results into container
2024-08-01 12:29:47,903:INFO:Uploading model into container now
2024-08-01 12:29:47,903:INFO:_master_model_container: 14
2024-08-01 12:29:47,903:INFO:_display_container: 2
2024-08-01 12:29:47,904:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:29:47,904:INFO:create_model() successfully completed......................................
2024-08-01 12:29:47,970:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:47,970:INFO:Creating metrics dataframe
2024-08-01 12:29:47,976:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:29:47,976:INFO:Total runtime is 1.176912542184194 minutes
2024-08-01 12:29:47,978:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:47,978:INFO:Initializing create_model()
2024-08-01 12:29:47,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:47,978:INFO:Checking exceptions
2024-08-01 12:29:47,978:INFO:Importing libraries
2024-08-01 12:29:47,979:INFO:Copying training dataset
2024-08-01 12:29:47,981:INFO:Defining folds
2024-08-01 12:29:47,981:INFO:Declaring metric variables
2024-08-01 12:29:47,982:INFO:Importing untrained model
2024-08-01 12:29:47,984:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:29:47,987:INFO:Starting cross validation
2024-08-01 12:29:47,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:48,973:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:48,976:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:48,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,010:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,012:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,015:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,027:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,029:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,031:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:29:49,032:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,145:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,147:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,149:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,182:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,184:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,186:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,289:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,292:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,403:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,405:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,730:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,732:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,734:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,951:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,953:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:49,955:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:50,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:50,054:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:50,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:53,106:INFO:Calculating mean and std
2024-08-01 12:29:53,106:INFO:Creating metrics dataframe
2024-08-01 12:29:53,613:INFO:Uploading results into container
2024-08-01 12:29:53,613:INFO:Uploading model into container now
2024-08-01 12:29:53,614:INFO:_master_model_container: 15
2024-08-01 12:29:53,614:INFO:_display_container: 2
2024-08-01 12:29:53,614:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:29:53,614:INFO:create_model() successfully completed......................................
2024-08-01 12:29:53,677:INFO:SubProcess create_model() end ==================================
2024-08-01 12:29:53,677:INFO:Creating metrics dataframe
2024-08-01 12:29:53,683:INFO:Initializing CatBoost Classifier
2024-08-01 12:29:53,683:INFO:Total runtime is 1.27203578154246 minutes
2024-08-01 12:29:53,685:INFO:SubProcess create_model() called ==================================
2024-08-01 12:29:53,685:INFO:Initializing create_model()
2024-08-01 12:29:53,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32D56F10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:29:53,686:INFO:Checking exceptions
2024-08-01 12:29:53,686:INFO:Importing libraries
2024-08-01 12:29:53,686:INFO:Copying training dataset
2024-08-01 12:29:53,688:INFO:Defining folds
2024-08-01 12:29:53,688:INFO:Declaring metric variables
2024-08-01 12:29:53,690:INFO:Importing untrained model
2024-08-01 12:29:53,692:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:29:53,695:INFO:Starting cross validation
2024-08-01 12:29:53,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:29:57,736:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,737:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,737:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,740:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,766:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,769:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,787:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,789:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,789:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,792:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,814:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,815:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,816:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,851:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,852:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,853:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,875:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,876:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,877:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,887:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,889:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,891:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,893:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,894:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:29:57,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:01,529:INFO:Calculating mean and std
2024-08-01 12:30:01,530:INFO:Creating metrics dataframe
2024-08-01 12:30:02,026:INFO:Uploading results into container
2024-08-01 12:30:02,026:INFO:Uploading model into container now
2024-08-01 12:30:02,026:INFO:_master_model_container: 16
2024-08-01 12:30:02,027:INFO:_display_container: 2
2024-08-01 12:30:02,027:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3B297D90>
2024-08-01 12:30:02,027:INFO:create_model() successfully completed......................................
2024-08-01 12:30:02,099:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:02,099:INFO:Creating metrics dataframe
2024-08-01 12:30:02,105:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:30:02,110:INFO:Initializing create_model()
2024-08-01 12:30:02,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:02,110:INFO:Checking exceptions
2024-08-01 12:30:02,111:INFO:Importing libraries
2024-08-01 12:30:02,111:INFO:Copying training dataset
2024-08-01 12:30:02,113:INFO:Defining folds
2024-08-01 12:30:02,113:INFO:Declaring metric variables
2024-08-01 12:30:02,114:INFO:Importing untrained model
2024-08-01 12:30:02,114:INFO:Declaring custom model
2024-08-01 12:30:02,114:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:30:02,115:INFO:Cross validation set to False
2024-08-01 12:30:02,115:INFO:Fitting Model
2024-08-01 12:30:02,688:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:30:02,688:INFO:create_model() successfully completed......................................
2024-08-01 12:30:02,757:INFO:Initializing create_model()
2024-08-01 12:30:02,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:02,757:INFO:Checking exceptions
2024-08-01 12:30:02,758:INFO:Importing libraries
2024-08-01 12:30:02,758:INFO:Copying training dataset
2024-08-01 12:30:02,760:INFO:Defining folds
2024-08-01 12:30:02,760:INFO:Declaring metric variables
2024-08-01 12:30:02,760:INFO:Importing untrained model
2024-08-01 12:30:02,761:INFO:Declaring custom model
2024-08-01 12:30:02,761:INFO:str Imported successfully
2024-08-01 12:30:02,762:INFO:Cross validation set to False
2024-08-01 12:30:02,762:INFO:Fitting Model
2024-08-01 12:30:03,299:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105)
2024-08-01 12:30:03,300:INFO:create_model() successfully completed......................................
2024-08-01 12:30:03,368:INFO:Initializing create_model()
2024-08-01 12:30:03,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:03,368:INFO:Checking exceptions
2024-08-01 12:30:03,369:INFO:Importing libraries
2024-08-01 12:30:03,369:INFO:Copying training dataset
2024-08-01 12:30:03,370:INFO:Defining folds
2024-08-01 12:30:03,370:INFO:Declaring metric variables
2024-08-01 12:30:03,371:INFO:Importing untrained model
2024-08-01 12:30:03,371:INFO:Declaring custom model
2024-08-01 12:30:03,371:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:30:03,372:INFO:Cross validation set to False
2024-08-01 12:30:03,372:INFO:Fitting Model
2024-08-01 12:30:03,967:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:30:03,967:INFO:create_model() successfully completed......................................
2024-08-01 12:30:04,032:INFO:Initializing create_model()
2024-08-01 12:30:04,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:04,032:INFO:Checking exceptions
2024-08-01 12:30:04,033:INFO:Importing libraries
2024-08-01 12:30:04,033:INFO:Copying training dataset
2024-08-01 12:30:04,035:INFO:Defining folds
2024-08-01 12:30:04,035:INFO:Declaring metric variables
2024-08-01 12:30:04,035:INFO:Importing untrained model
2024-08-01 12:30:04,035:INFO:Declaring custom model
2024-08-01 12:30:04,036:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:30:04,037:INFO:Cross validation set to False
2024-08-01 12:30:04,037:INFO:Fitting Model
2024-08-01 12:30:04,139:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:04,542:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:30:04,542:INFO:create_model() successfully completed......................................
2024-08-01 12:30:04,607:INFO:Initializing create_model()
2024-08-01 12:30:04,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:04,607:INFO:Checking exceptions
2024-08-01 12:30:04,608:INFO:Importing libraries
2024-08-01 12:30:04,608:INFO:Copying training dataset
2024-08-01 12:30:04,610:INFO:Defining folds
2024-08-01 12:30:04,610:INFO:Declaring metric variables
2024-08-01 12:30:04,611:INFO:Importing untrained model
2024-08-01 12:30:04,611:INFO:Declaring custom model
2024-08-01 12:30:04,611:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:30:04,612:INFO:Cross validation set to False
2024-08-01 12:30:04,612:INFO:Fitting Model
2024-08-01 12:30:05,439:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:30:05,439:INFO:create_model() successfully completed......................................
2024-08-01 12:30:05,511:INFO:Initializing create_model()
2024-08-01 12:30:05,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:05,511:INFO:Checking exceptions
2024-08-01 12:30:05,512:INFO:Importing libraries
2024-08-01 12:30:05,512:INFO:Copying training dataset
2024-08-01 12:30:05,514:INFO:Defining folds
2024-08-01 12:30:05,514:INFO:Declaring metric variables
2024-08-01 12:30:05,514:INFO:Importing untrained model
2024-08-01 12:30:05,514:INFO:Declaring custom model
2024-08-01 12:30:05,515:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:30:05,516:INFO:Cross validation set to False
2024-08-01 12:30:05,516:INFO:Fitting Model
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000146 seconds.
2024-08-01 12:30:05,615:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Total Bins 249
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Number of data points in the train set: 270, number of used features: 27
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Start training from score -1.155771
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Start training from score -1.349927
2024-08-01 12:30:05,615:INFO:[LightGBM] [Info] Start training from score -0.853490
2024-08-01 12:30:05,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:05,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:30:06,153:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:30:06,153:INFO:create_model() successfully completed......................................
2024-08-01 12:30:06,220:INFO:Initializing create_model()
2024-08-01 12:30:06,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:06,220:INFO:Checking exceptions
2024-08-01 12:30:06,220:INFO:Importing libraries
2024-08-01 12:30:06,220:INFO:Copying training dataset
2024-08-01 12:30:06,222:INFO:Defining folds
2024-08-01 12:30:06,223:INFO:Declaring metric variables
2024-08-01 12:30:06,223:INFO:Importing untrained model
2024-08-01 12:30:06,223:INFO:Declaring custom model
2024-08-01 12:30:06,223:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:30:06,224:INFO:Cross validation set to False
2024-08-01 12:30:06,224:INFO:Fitting Model
2024-08-01 12:30:06,732:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best')
2024-08-01 12:30:06,732:INFO:create_model() successfully completed......................................
2024-08-01 12:30:06,797:INFO:Initializing create_model()
2024-08-01 12:30:06,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=<catboost.core.CatBoostClassifier object at 0x0000028E3B297D90>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:06,797:INFO:Checking exceptions
2024-08-01 12:30:06,799:INFO:Importing libraries
2024-08-01 12:30:06,799:INFO:Copying training dataset
2024-08-01 12:30:06,801:INFO:Defining folds
2024-08-01 12:30:06,801:INFO:Declaring metric variables
2024-08-01 12:30:06,801:INFO:Importing untrained model
2024-08-01 12:30:06,801:INFO:Declaring custom model
2024-08-01 12:30:06,802:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:30:06,803:INFO:Cross validation set to False
2024-08-01 12:30:06,803:INFO:Fitting Model
2024-08-01 12:30:09,003:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3932AC90>
2024-08-01 12:30:09,003:INFO:create_model() successfully completed......................................
2024-08-01 12:30:09,067:INFO:Initializing create_model()
2024-08-01 12:30:09,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:09,067:INFO:Checking exceptions
2024-08-01 12:30:09,068:INFO:Importing libraries
2024-08-01 12:30:09,068:INFO:Copying training dataset
2024-08-01 12:30:09,070:INFO:Defining folds
2024-08-01 12:30:09,070:INFO:Declaring metric variables
2024-08-01 12:30:09,070:INFO:Importing untrained model
2024-08-01 12:30:09,070:INFO:Declaring custom model
2024-08-01 12:30:09,070:INFO:Ridge Classifier Imported successfully
2024-08-01 12:30:09,072:INFO:Cross validation set to False
2024-08-01 12:30:09,072:INFO:Fitting Model
2024-08-01 12:30:09,569:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001)
2024-08-01 12:30:09,569:INFO:create_model() successfully completed......................................
2024-08-01 12:30:09,634:INFO:Initializing create_model()
2024-08-01 12:30:09,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:09,634:INFO:Checking exceptions
2024-08-01 12:30:09,635:INFO:Importing libraries
2024-08-01 12:30:09,635:INFO:Copying training dataset
2024-08-01 12:30:09,637:INFO:Defining folds
2024-08-01 12:30:09,637:INFO:Declaring metric variables
2024-08-01 12:30:09,638:INFO:Importing untrained model
2024-08-01 12:30:09,638:INFO:Declaring custom model
2024-08-01 12:30:09,638:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:30:09,639:INFO:Cross validation set to False
2024-08-01 12:30:09,639:INFO:Fitting Model
2024-08-01 12:30:10,127:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:30:10,127:INFO:create_model() successfully completed......................................
2024-08-01 12:30:10,192:INFO:Initializing create_model()
2024-08-01 12:30:10,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:10,192:INFO:Checking exceptions
2024-08-01 12:30:10,193:INFO:Importing libraries
2024-08-01 12:30:10,193:INFO:Copying training dataset
2024-08-01 12:30:10,196:INFO:Defining folds
2024-08-01 12:30:10,196:INFO:Declaring metric variables
2024-08-01 12:30:10,196:INFO:Importing untrained model
2024-08-01 12:30:10,196:INFO:Declaring custom model
2024-08-01 12:30:10,197:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:30:10,198:INFO:Cross validation set to False
2024-08-01 12:30:10,198:INFO:Fitting Model
2024-08-01 12:30:10,931:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:30:10,931:INFO:create_model() successfully completed......................................
2024-08-01 12:30:10,999:INFO:Initializing create_model()
2024-08-01 12:30:10,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:10,999:INFO:Checking exceptions
2024-08-01 12:30:11,000:INFO:Importing libraries
2024-08-01 12:30:11,000:INFO:Copying training dataset
2024-08-01 12:30:11,003:INFO:Defining folds
2024-08-01 12:30:11,003:INFO:Declaring metric variables
2024-08-01 12:30:11,003:INFO:Importing untrained model
2024-08-01 12:30:11,003:INFO:Declaring custom model
2024-08-01 12:30:11,003:INFO:Logistic Regression Imported successfully
2024-08-01 12:30:11,003:INFO:Cross validation set to False
2024-08-01 12:30:11,003:INFO:Fitting Model
2024-08-01 12:30:11,216:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:30:11,634:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:30:11,634:INFO:create_model() successfully completed......................................
2024-08-01 12:30:11,698:INFO:Initializing create_model()
2024-08-01 12:30:11,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:11,699:INFO:Checking exceptions
2024-08-01 12:30:11,700:INFO:Importing libraries
2024-08-01 12:30:11,700:INFO:Copying training dataset
2024-08-01 12:30:11,702:INFO:Defining folds
2024-08-01 12:30:11,702:INFO:Declaring metric variables
2024-08-01 12:30:11,703:INFO:Importing untrained model
2024-08-01 12:30:11,703:INFO:Declaring custom model
2024-08-01 12:30:11,703:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:30:11,704:INFO:Cross validation set to False
2024-08-01 12:30:11,704:INFO:Fitting Model
2024-08-01 12:30:12,206:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:30:12,206:INFO:create_model() successfully completed......................................
2024-08-01 12:30:12,269:INFO:Initializing create_model()
2024-08-01 12:30:12,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:12,271:INFO:Checking exceptions
2024-08-01 12:30:12,271:INFO:Importing libraries
2024-08-01 12:30:12,271:INFO:Copying training dataset
2024-08-01 12:30:12,274:INFO:Defining folds
2024-08-01 12:30:12,274:INFO:Declaring metric variables
2024-08-01 12:30:12,274:INFO:Importing untrained model
2024-08-01 12:30:12,274:INFO:Declaring custom model
2024-08-01 12:30:12,274:INFO:Naive Bayes Imported successfully
2024-08-01 12:30:12,275:INFO:Cross validation set to False
2024-08-01 12:30:12,275:INFO:Fitting Model
2024-08-01 12:30:12,771:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:30:12,771:INFO:create_model() successfully completed......................................
2024-08-01 12:30:12,845:INFO:_master_model_container: 16
2024-08-01 12:30:12,845:INFO:_display_container: 2
2024-08-01 12:30:12,847:INFO:[ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best'), <catboost.core.CatBoostClassifier object at 0x0000028E3932AC90>, RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09)]
2024-08-01 12:30:12,847:INFO:compare_models() successfully completed......................................
2024-08-01 12:30:12,870:INFO:Initializing compare_models()
2024-08-01 12:30:12,870:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:30:12,870:INFO:Checking exceptions
2024-08-01 12:30:12,870:INFO:Preparing display monitor
2024-08-01 12:30:12,881:INFO:Initializing Logistic Regression
2024-08-01 12:30:12,881:INFO:Total runtime is 0.0 minutes
2024-08-01 12:30:12,883:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:12,883:INFO:Initializing create_model()
2024-08-01 12:30:12,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:12,883:INFO:Checking exceptions
2024-08-01 12:30:12,883:INFO:Importing libraries
2024-08-01 12:30:12,883:INFO:Copying training dataset
2024-08-01 12:30:12,886:INFO:Defining folds
2024-08-01 12:30:12,886:INFO:Declaring metric variables
2024-08-01 12:30:12,888:INFO:Importing untrained model
2024-08-01 12:30:12,890:INFO:Logistic Regression Imported successfully
2024-08-01 12:30:12,894:INFO:Starting cross validation
2024-08-01 12:30:12,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:13,159:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,159:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,162:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,164:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,164:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,165:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,169:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,169:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,169:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,170:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,171:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,173:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,174:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,175:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,175:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,176:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,176:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,177:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,177:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,186:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,188:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:13,188:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:16,924:INFO:Calculating mean and std
2024-08-01 12:30:16,925:INFO:Creating metrics dataframe
2024-08-01 12:30:17,424:INFO:Uploading results into container
2024-08-01 12:30:17,425:INFO:Uploading model into container now
2024-08-01 12:30:17,425:INFO:_master_model_container: 17
2024-08-01 12:30:17,425:INFO:_display_container: 3
2024-08-01 12:30:17,425:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:30:17,425:INFO:create_model() successfully completed......................................
2024-08-01 12:30:17,488:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:17,488:INFO:Creating metrics dataframe
2024-08-01 12:30:17,492:INFO:Initializing K Neighbors Classifier
2024-08-01 12:30:17,492:INFO:Total runtime is 0.07683992385864258 minutes
2024-08-01 12:30:17,494:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:17,494:INFO:Initializing create_model()
2024-08-01 12:30:17,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:17,495:INFO:Checking exceptions
2024-08-01 12:30:17,495:INFO:Importing libraries
2024-08-01 12:30:17,495:INFO:Copying training dataset
2024-08-01 12:30:17,497:INFO:Defining folds
2024-08-01 12:30:17,497:INFO:Declaring metric variables
2024-08-01 12:30:17,499:INFO:Importing untrained model
2024-08-01 12:30:17,500:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:30:17,504:INFO:Starting cross validation
2024-08-01 12:30:17,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:17,747:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,748:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,748:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,753:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,754:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,756:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,756:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,764:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,764:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:17,772:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,041:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,050:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,051:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,053:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,053:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,058:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,060:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:18,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:21,799:INFO:Calculating mean and std
2024-08-01 12:30:21,800:INFO:Creating metrics dataframe
2024-08-01 12:30:22,304:INFO:Uploading results into container
2024-08-01 12:30:22,304:INFO:Uploading model into container now
2024-08-01 12:30:22,304:INFO:_master_model_container: 18
2024-08-01 12:30:22,304:INFO:_display_container: 3
2024-08-01 12:30:22,304:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:30:22,306:INFO:create_model() successfully completed......................................
2024-08-01 12:30:22,380:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:30:22,380:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:30:22,380:INFO:Initializing create_model()
2024-08-01 12:30:22,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:22,380:INFO:Checking exceptions
2024-08-01 12:30:22,380:INFO:Importing libraries
2024-08-01 12:30:22,380:INFO:Copying training dataset
2024-08-01 12:30:22,383:INFO:Defining folds
2024-08-01 12:30:22,383:INFO:Declaring metric variables
2024-08-01 12:30:22,385:INFO:Importing untrained model
2024-08-01 12:30:22,387:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:30:22,390:INFO:Starting cross validation
2024-08-01 12:30:22,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:22,634:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,637:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,639:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,639:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,645:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,646:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,647:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,650:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,652:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,653:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,939:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,943:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,944:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,946:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,946:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,946:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,953:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:22,959:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:30:26,648:INFO:Calculating mean and std
2024-08-01 12:30:26,649:INFO:Creating metrics dataframe
2024-08-01 12:30:27,151:INFO:Uploading results into container
2024-08-01 12:30:27,153:INFO:Uploading model into container now
2024-08-01 12:30:27,153:INFO:_master_model_container: 19
2024-08-01 12:30:27,153:INFO:_display_container: 3
2024-08-01 12:30:27,153:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:30:27,153:INFO:create_model() successfully completed......................................
2024-08-01 12:30:27,217:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:30:27,217:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:30:27,217:INFO:Initializing Naive Bayes
2024-08-01 12:30:27,217:INFO:Total runtime is 0.23892762263615927 minutes
2024-08-01 12:30:27,219:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:27,219:INFO:Initializing create_model()
2024-08-01 12:30:27,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:27,220:INFO:Checking exceptions
2024-08-01 12:30:27,220:INFO:Importing libraries
2024-08-01 12:30:27,220:INFO:Copying training dataset
2024-08-01 12:30:27,222:INFO:Defining folds
2024-08-01 12:30:27,222:INFO:Declaring metric variables
2024-08-01 12:30:27,223:INFO:Importing untrained model
2024-08-01 12:30:27,225:INFO:Naive Bayes Imported successfully
2024-08-01 12:30:27,228:INFO:Starting cross validation
2024-08-01 12:30:27,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:27,481:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,483:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,483:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:27,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,486:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,487:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,487:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:27,488:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,488:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,489:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,490:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,490:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,490:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,491:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,491:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,491:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,492:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:27,493:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,493:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,493:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:27,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,495:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:27,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:27,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:31,225:INFO:Calculating mean and std
2024-08-01 12:30:31,226:INFO:Creating metrics dataframe
2024-08-01 12:30:31,731:INFO:Uploading results into container
2024-08-01 12:30:31,732:INFO:Uploading model into container now
2024-08-01 12:30:31,732:INFO:_master_model_container: 20
2024-08-01 12:30:31,732:INFO:_display_container: 3
2024-08-01 12:30:31,732:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:30:31,732:INFO:create_model() successfully completed......................................
2024-08-01 12:30:31,796:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:31,796:INFO:Creating metrics dataframe
2024-08-01 12:30:31,800:INFO:Initializing Decision Tree Classifier
2024-08-01 12:30:31,800:INFO:Total runtime is 0.3153060595194499 minutes
2024-08-01 12:30:31,802:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:31,802:INFO:Initializing create_model()
2024-08-01 12:30:31,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:31,802:INFO:Checking exceptions
2024-08-01 12:30:31,802:INFO:Importing libraries
2024-08-01 12:30:31,802:INFO:Copying training dataset
2024-08-01 12:30:31,804:INFO:Defining folds
2024-08-01 12:30:31,804:INFO:Declaring metric variables
2024-08-01 12:30:31,806:INFO:Importing untrained model
2024-08-01 12:30:31,808:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:30:31,811:INFO:Starting cross validation
2024-08-01 12:30:31,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:32,056:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,057:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,072:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,073:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,076:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,078:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,078:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,079:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,080:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,081:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,081:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,081:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,082:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:32,083:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:35,757:INFO:Calculating mean and std
2024-08-01 12:30:35,758:INFO:Creating metrics dataframe
2024-08-01 12:30:36,255:INFO:Uploading results into container
2024-08-01 12:30:36,255:INFO:Uploading model into container now
2024-08-01 12:30:36,255:INFO:_master_model_container: 21
2024-08-01 12:30:36,255:INFO:_display_container: 3
2024-08-01 12:30:36,256:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best')
2024-08-01 12:30:36,256:INFO:create_model() successfully completed......................................
2024-08-01 12:30:36,321:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:36,321:INFO:Creating metrics dataframe
2024-08-01 12:30:36,325:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:30:36,325:INFO:Total runtime is 0.39072351058324184 minutes
2024-08-01 12:30:36,327:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:36,327:INFO:Initializing create_model()
2024-08-01 12:30:36,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:36,327:INFO:Checking exceptions
2024-08-01 12:30:36,327:INFO:Importing libraries
2024-08-01 12:30:36,328:INFO:Copying training dataset
2024-08-01 12:30:36,330:INFO:Defining folds
2024-08-01 12:30:36,330:INFO:Declaring metric variables
2024-08-01 12:30:36,331:INFO:Importing untrained model
2024-08-01 12:30:36,333:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:30:36,336:INFO:Starting cross validation
2024-08-01 12:30:36,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:36,541:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,541:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,543:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,543:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,544:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,544:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,545:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,545:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,545:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,546:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,546:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,546:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,547:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,548:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,549:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,549:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,551:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,551:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,551:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,552:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,553:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,553:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,553:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,554:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,554:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,555:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,556:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,556:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,557:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,557:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,561:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,561:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,561:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,562:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,563:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,563:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:36,563:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,564:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,564:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,564:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,564:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,565:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,565:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:36,566:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:36,566:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:40,286:INFO:Calculating mean and std
2024-08-01 12:30:40,287:INFO:Creating metrics dataframe
2024-08-01 12:30:40,781:INFO:Uploading results into container
2024-08-01 12:30:40,781:INFO:Uploading model into container now
2024-08-01 12:30:40,781:INFO:_master_model_container: 22
2024-08-01 12:30:40,781:INFO:_display_container: 3
2024-08-01 12:30:40,782:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:30:40,782:INFO:create_model() successfully completed......................................
2024-08-01 12:30:40,845:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:40,845:INFO:Creating metrics dataframe
2024-08-01 12:30:40,849:INFO:Initializing Ridge Classifier
2024-08-01 12:30:40,849:INFO:Total runtime is 0.4661252935727438 minutes
2024-08-01 12:30:40,851:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:40,851:INFO:Initializing create_model()
2024-08-01 12:30:40,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:40,851:INFO:Checking exceptions
2024-08-01 12:30:40,851:INFO:Importing libraries
2024-08-01 12:30:40,851:INFO:Copying training dataset
2024-08-01 12:30:40,855:INFO:Defining folds
2024-08-01 12:30:40,855:INFO:Declaring metric variables
2024-08-01 12:30:40,856:INFO:Importing untrained model
2024-08-01 12:30:40,858:INFO:Ridge Classifier Imported successfully
2024-08-01 12:30:40,862:INFO:Starting cross validation
2024-08-01 12:30:40,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:41,047:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,047:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,049:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,049:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,049:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,049:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,051:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,052:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,054:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,055:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,055:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,056:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,056:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,057:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,057:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,057:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,058:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,059:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,061:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,061:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,061:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,064:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,064:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,066:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,067:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,068:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,069:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,071:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:30:41,072:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,073:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:41,075:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:44,817:INFO:Calculating mean and std
2024-08-01 12:30:44,817:INFO:Creating metrics dataframe
2024-08-01 12:30:45,343:INFO:Uploading results into container
2024-08-01 12:30:45,343:INFO:Uploading model into container now
2024-08-01 12:30:45,343:INFO:_master_model_container: 23
2024-08-01 12:30:45,343:INFO:_display_container: 3
2024-08-01 12:30:45,344:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001)
2024-08-01 12:30:45,344:INFO:create_model() successfully completed......................................
2024-08-01 12:30:45,407:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:45,408:INFO:Creating metrics dataframe
2024-08-01 12:30:45,412:INFO:Initializing Random Forest Classifier
2024-08-01 12:30:45,412:INFO:Total runtime is 0.5421850403149924 minutes
2024-08-01 12:30:45,414:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:45,414:INFO:Initializing create_model()
2024-08-01 12:30:45,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:45,414:INFO:Checking exceptions
2024-08-01 12:30:45,414:INFO:Importing libraries
2024-08-01 12:30:45,414:INFO:Copying training dataset
2024-08-01 12:30:45,416:INFO:Defining folds
2024-08-01 12:30:45,417:INFO:Declaring metric variables
2024-08-01 12:30:45,419:INFO:Importing untrained model
2024-08-01 12:30:45,421:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:30:45,424:INFO:Starting cross validation
2024-08-01 12:30:45,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:45,789:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,791:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,791:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,792:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,792:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,793:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,794:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,795:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,796:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,798:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,801:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,802:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,804:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,805:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,807:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,810:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,811:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,812:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,812:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,813:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,813:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:45,813:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:49,522:INFO:Calculating mean and std
2024-08-01 12:30:49,522:INFO:Creating metrics dataframe
2024-08-01 12:30:50,050:INFO:Uploading results into container
2024-08-01 12:30:50,051:INFO:Uploading model into container now
2024-08-01 12:30:50,051:INFO:_master_model_container: 24
2024-08-01 12:30:50,051:INFO:_display_container: 3
2024-08-01 12:30:50,051:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:30:50,051:INFO:create_model() successfully completed......................................
2024-08-01 12:30:50,115:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:50,116:INFO:Creating metrics dataframe
2024-08-01 12:30:50,120:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:30:50,120:INFO:Total runtime is 0.6206396857897442 minutes
2024-08-01 12:30:50,121:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:50,121:INFO:Initializing create_model()
2024-08-01 12:30:50,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:50,121:INFO:Checking exceptions
2024-08-01 12:30:50,121:INFO:Importing libraries
2024-08-01 12:30:50,121:INFO:Copying training dataset
2024-08-01 12:30:50,125:INFO:Defining folds
2024-08-01 12:30:50,125:INFO:Declaring metric variables
2024-08-01 12:30:50,126:INFO:Importing untrained model
2024-08-01 12:30:50,128:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:30:50,131:INFO:Starting cross validation
2024-08-01 12:30:50,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:50,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,256:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,258:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,261:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,266:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,267:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,269:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,274:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,276:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:30:50,373:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,374:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,376:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,377:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,378:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,379:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,381:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,382:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,384:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,386:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,387:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,388:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,389:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,389:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,390:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,391:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,391:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:30:50,391:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,391:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,392:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,393:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,394:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,395:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,397:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,397:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,399:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,399:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:50,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:54,084:INFO:Calculating mean and std
2024-08-01 12:30:54,084:INFO:Creating metrics dataframe
2024-08-01 12:30:54,612:INFO:Uploading results into container
2024-08-01 12:30:54,613:INFO:Uploading model into container now
2024-08-01 12:30:54,613:INFO:_master_model_container: 25
2024-08-01 12:30:54,613:INFO:_display_container: 3
2024-08-01 12:30:54,613:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:30:54,613:INFO:create_model() successfully completed......................................
2024-08-01 12:30:54,678:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:54,679:INFO:Creating metrics dataframe
2024-08-01 12:30:54,684:INFO:Initializing Ada Boost Classifier
2024-08-01 12:30:54,684:INFO:Total runtime is 0.6967055956522624 minutes
2024-08-01 12:30:54,686:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:54,686:INFO:Initializing create_model()
2024-08-01 12:30:54,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:54,686:INFO:Checking exceptions
2024-08-01 12:30:54,686:INFO:Importing libraries
2024-08-01 12:30:54,686:INFO:Copying training dataset
2024-08-01 12:30:54,688:INFO:Defining folds
2024-08-01 12:30:54,688:INFO:Declaring metric variables
2024-08-01 12:30:54,690:INFO:Importing untrained model
2024-08-01 12:30:54,691:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:30:54,696:INFO:Starting cross validation
2024-08-01 12:30:54,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:55,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,033:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,034:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,035:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,035:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,036:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,037:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,038:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,039:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,039:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,039:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,041:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,041:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,041:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,042:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,042:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,043:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,044:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,045:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,045:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,045:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,047:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,047:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,052:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,053:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:55,054:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:58,760:INFO:Calculating mean and std
2024-08-01 12:30:58,761:INFO:Creating metrics dataframe
2024-08-01 12:30:59,301:INFO:Uploading results into container
2024-08-01 12:30:59,302:INFO:Uploading model into container now
2024-08-01 12:30:59,302:INFO:_master_model_container: 26
2024-08-01 12:30:59,302:INFO:_display_container: 3
2024-08-01 12:30:59,302:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105)
2024-08-01 12:30:59,302:INFO:create_model() successfully completed......................................
2024-08-01 12:30:59,368:INFO:SubProcess create_model() end ==================================
2024-08-01 12:30:59,368:INFO:Creating metrics dataframe
2024-08-01 12:30:59,373:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:30:59,373:INFO:Total runtime is 0.7748554905255636 minutes
2024-08-01 12:30:59,375:INFO:SubProcess create_model() called ==================================
2024-08-01 12:30:59,375:INFO:Initializing create_model()
2024-08-01 12:30:59,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:30:59,376:INFO:Checking exceptions
2024-08-01 12:30:59,376:INFO:Importing libraries
2024-08-01 12:30:59,376:INFO:Copying training dataset
2024-08-01 12:30:59,378:INFO:Defining folds
2024-08-01 12:30:59,378:INFO:Declaring metric variables
2024-08-01 12:30:59,380:INFO:Importing untrained model
2024-08-01 12:30:59,381:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:30:59,384:INFO:Starting cross validation
2024-08-01 12:30:59,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:30:59,747:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,748:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,749:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,755:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,757:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,758:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,758:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,759:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,759:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,760:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,760:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,764:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,764:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,765:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,765:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,766:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,767:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,768:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:30:59,770:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:03,489:INFO:Calculating mean and std
2024-08-01 12:31:03,489:INFO:Creating metrics dataframe
2024-08-01 12:31:03,984:INFO:Uploading results into container
2024-08-01 12:31:03,985:INFO:Uploading model into container now
2024-08-01 12:31:03,985:INFO:_master_model_container: 27
2024-08-01 12:31:03,985:INFO:_display_container: 3
2024-08-01 12:31:03,985:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:31:03,985:INFO:create_model() successfully completed......................................
2024-08-01 12:31:04,050:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:04,050:INFO:Creating metrics dataframe
2024-08-01 12:31:04,055:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:31:04,055:INFO:Total runtime is 0.8529048959414165 minutes
2024-08-01 12:31:04,057:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:04,057:INFO:Initializing create_model()
2024-08-01 12:31:04,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:04,057:INFO:Checking exceptions
2024-08-01 12:31:04,057:INFO:Importing libraries
2024-08-01 12:31:04,057:INFO:Copying training dataset
2024-08-01 12:31:04,060:INFO:Defining folds
2024-08-01 12:31:04,060:INFO:Declaring metric variables
2024-08-01 12:31:04,062:INFO:Importing untrained model
2024-08-01 12:31:04,064:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:31:04,067:INFO:Starting cross validation
2024-08-01 12:31:04,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:04,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,316:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,319:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,319:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,322:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,325:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,326:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,329:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,329:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,333:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,334:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,341:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,342:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:04,343:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:08,073:INFO:Calculating mean and std
2024-08-01 12:31:08,073:INFO:Creating metrics dataframe
2024-08-01 12:31:08,590:INFO:Uploading results into container
2024-08-01 12:31:08,590:INFO:Uploading model into container now
2024-08-01 12:31:08,590:INFO:_master_model_container: 28
2024-08-01 12:31:08,590:INFO:_display_container: 3
2024-08-01 12:31:08,590:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:31:08,592:INFO:create_model() successfully completed......................................
2024-08-01 12:31:08,656:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:08,656:INFO:Creating metrics dataframe
2024-08-01 12:31:08,662:INFO:Initializing Extra Trees Classifier
2024-08-01 12:31:08,662:INFO:Total runtime is 0.9296753525733948 minutes
2024-08-01 12:31:08,664:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:08,664:INFO:Initializing create_model()
2024-08-01 12:31:08,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:08,664:INFO:Checking exceptions
2024-08-01 12:31:08,665:INFO:Importing libraries
2024-08-01 12:31:08,665:INFO:Copying training dataset
2024-08-01 12:31:08,667:INFO:Defining folds
2024-08-01 12:31:08,667:INFO:Declaring metric variables
2024-08-01 12:31:08,669:INFO:Importing untrained model
2024-08-01 12:31:08,671:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:31:08,675:INFO:Starting cross validation
2024-08-01 12:31:08,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:09,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,067:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,067:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,069:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,071:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,073:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,074:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,075:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,075:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,075:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,076:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,076:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,077:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,078:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,078:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,078:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,079:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,131:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,132:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,143:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,145:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:09,146:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:12,796:INFO:Calculating mean and std
2024-08-01 12:31:12,796:INFO:Creating metrics dataframe
2024-08-01 12:31:13,315:INFO:Uploading results into container
2024-08-01 12:31:13,315:INFO:Uploading model into container now
2024-08-01 12:31:13,316:INFO:_master_model_container: 29
2024-08-01 12:31:13,316:INFO:_display_container: 3
2024-08-01 12:31:13,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:31:13,316:INFO:create_model() successfully completed......................................
2024-08-01 12:31:13,380:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:13,380:INFO:Creating metrics dataframe
2024-08-01 12:31:13,385:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:31:13,385:INFO:Total runtime is 1.0084002892176311 minutes
2024-08-01 12:31:13,387:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:13,387:INFO:Initializing create_model()
2024-08-01 12:31:13,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:13,387:INFO:Checking exceptions
2024-08-01 12:31:13,387:INFO:Importing libraries
2024-08-01 12:31:13,387:INFO:Copying training dataset
2024-08-01 12:31:13,389:INFO:Defining folds
2024-08-01 12:31:13,389:INFO:Declaring metric variables
2024-08-01 12:31:13,391:INFO:Importing untrained model
2024-08-01 12:31:13,394:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:31:13,397:INFO:Starting cross validation
2024-08-01 12:31:13,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:13,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,683:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,683:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,685:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,690:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,692:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,693:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,698:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,699:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,700:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,738:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,739:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,741:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,751:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,752:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,753:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:13,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:17,407:INFO:Calculating mean and std
2024-08-01 12:31:17,407:INFO:Creating metrics dataframe
2024-08-01 12:31:17,944:INFO:Uploading results into container
2024-08-01 12:31:17,945:INFO:Uploading model into container now
2024-08-01 12:31:17,945:INFO:_master_model_container: 30
2024-08-01 12:31:17,945:INFO:_display_container: 3
2024-08-01 12:31:17,946:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:31:17,946:INFO:create_model() successfully completed......................................
2024-08-01 12:31:18,009:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:18,009:INFO:Creating metrics dataframe
2024-08-01 12:31:18,014:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:31:18,014:INFO:Total runtime is 1.0855487585067751 minutes
2024-08-01 12:31:18,016:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:18,017:INFO:Initializing create_model()
2024-08-01 12:31:18,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:18,017:INFO:Checking exceptions
2024-08-01 12:31:18,017:INFO:Importing libraries
2024-08-01 12:31:18,017:INFO:Copying training dataset
2024-08-01 12:31:18,019:INFO:Defining folds
2024-08-01 12:31:18,019:INFO:Declaring metric variables
2024-08-01 12:31:18,021:INFO:Importing untrained model
2024-08-01 12:31:18,023:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:31:18,027:INFO:Starting cross validation
2024-08-01 12:31:18,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:18,265:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,267:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,269:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,284:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,286:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,289:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,310:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,312:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,314:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,350:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,352:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,354:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,357:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,360:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,361:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:31:18,362:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,383:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,386:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,391:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,493:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,495:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,495:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,496:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,497:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,497:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,672:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:18,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:22,167:INFO:Calculating mean and std
2024-08-01 12:31:22,168:INFO:Creating metrics dataframe
2024-08-01 12:31:22,703:INFO:Uploading results into container
2024-08-01 12:31:22,703:INFO:Uploading model into container now
2024-08-01 12:31:22,703:INFO:_master_model_container: 31
2024-08-01 12:31:22,703:INFO:_display_container: 3
2024-08-01 12:31:22,705:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:31:22,705:INFO:create_model() successfully completed......................................
2024-08-01 12:31:22,768:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:22,768:INFO:Creating metrics dataframe
2024-08-01 12:31:22,775:INFO:Initializing CatBoost Classifier
2024-08-01 12:31:22,775:INFO:Total runtime is 1.1648937145868938 minutes
2024-08-01 12:31:22,777:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:22,777:INFO:Initializing create_model()
2024-08-01 12:31:22,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E32ADF910>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:22,778:INFO:Checking exceptions
2024-08-01 12:31:22,778:INFO:Importing libraries
2024-08-01 12:31:22,778:INFO:Copying training dataset
2024-08-01 12:31:22,780:INFO:Defining folds
2024-08-01 12:31:22,780:INFO:Declaring metric variables
2024-08-01 12:31:22,781:INFO:Importing untrained model
2024-08-01 12:31:22,783:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:31:22,787:INFO:Starting cross validation
2024-08-01 12:31:22,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:23,083:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,085:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,088:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,090:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,091:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,092:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,092:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,093:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,093:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,096:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,101:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,483:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,486:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,487:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,489:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,491:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,492:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,492:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,494:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:23,495:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:26,884:INFO:Calculating mean and std
2024-08-01 12:31:26,887:INFO:Creating metrics dataframe
2024-08-01 12:31:27,421:INFO:Uploading results into container
2024-08-01 12:31:27,421:INFO:Uploading model into container now
2024-08-01 12:31:27,421:INFO:_master_model_container: 32
2024-08-01 12:31:27,421:INFO:_display_container: 3
2024-08-01 12:31:27,421:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E3941A2D0>
2024-08-01 12:31:27,421:INFO:create_model() successfully completed......................................
2024-08-01 12:31:27,486:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:27,486:INFO:Creating metrics dataframe
2024-08-01 12:31:27,492:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:31:27,496:INFO:Initializing create_model()
2024-08-01 12:31:27,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E3271B050>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:27,496:INFO:Checking exceptions
2024-08-01 12:31:27,497:INFO:Importing libraries
2024-08-01 12:31:27,497:INFO:Copying training dataset
2024-08-01 12:31:27,500:INFO:Defining folds
2024-08-01 12:31:27,500:INFO:Declaring metric variables
2024-08-01 12:31:27,500:INFO:Importing untrained model
2024-08-01 12:31:27,500:INFO:Declaring custom model
2024-08-01 12:31:27,500:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:31:27,502:INFO:Cross validation set to False
2024-08-01 12:31:27,502:INFO:Fitting Model
2024-08-01 12:31:28,067:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:31:28,067:INFO:create_model() successfully completed......................................
2024-08-01 12:31:28,142:INFO:_master_model_container: 32
2024-08-01 12:31:28,142:INFO:_display_container: 3
2024-08-01 12:31:28,142:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False)
2024-08-01 12:31:28,142:INFO:compare_models() successfully completed......................................
2024-08-01 12:31:28,177:INFO:Initializing save_model()
2024-08-01 12:31:28,177:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5105, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_7525/ExtraTreesClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:28,177:INFO:Adding model into prep_pipe
2024-08-01 12:31:28,206:INFO:GPU_0_XAPI_ML_VALIDATION_7525/ExtraTreesClassifier.pkl saved in current working directory
2024-08-01 12:31:28,241:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=5105,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:31:28,241:INFO:save_model() successfully completed......................................
2024-08-01 12:31:28,766:INFO:Initializing save_model()
2024-08-01 12:31:28,766:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5105), model_name=GPU_0_XAPI_ML_VALIDATION_7525/AdaBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:28,766:INFO:Adding model into prep_pipe
2024-08-01 12:31:28,780:INFO:GPU_0_XAPI_ML_VALIDATION_7525/AdaBoostClassifier.pkl saved in current working directory
2024-08-01 12:31:28,817:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=5105))],
         verbose=False)
2024-08-01 12:31:28,817:INFO:save_model() successfully completed......................................
2024-08-01 12:31:29,326:INFO:Initializing save_model()
2024-08-01 12:31:29,326:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5105, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_7525/RandomForestClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:29,326:INFO:Adding model into prep_pipe
2024-08-01 12:31:29,352:INFO:GPU_0_XAPI_ML_VALIDATION_7525/RandomForestClassifier.pkl saved in current working directory
2024-08-01 12:31:29,387:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=5105,
                                        verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:31:29,387:INFO:save_model() successfully completed......................................
2024-08-01 12:31:29,910:INFO:Initializing save_model()
2024-08-01 12:31:29,910:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_7525/QuadraticDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:29,910:INFO:Adding model into prep_pipe
2024-08-01 12:31:29,920:INFO:GPU_0_XAPI_ML_VALIDATION_7525/QuadraticDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:31:29,956:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-08-01 12:31:29,956:INFO:save_model() successfully completed......................................
2024-08-01 12:31:30,472:INFO:Initializing save_model()
2024-08-01 12:31:30,472:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5105, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_7525/GradientBoostingClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:30,472:INFO:Adding model into prep_pipe
2024-08-01 12:31:30,485:INFO:GPU_0_XAPI_ML_VALIDATION_7525/GradientBoostingClassifier.pkl saved in current working directory
2024-08-01 12:31:30,521:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5105, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:31:30,521:INFO:save_model() successfully completed......................................
2024-08-01 12:31:31,043:INFO:Initializing save_model()
2024-08-01 12:31:31,043:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5105, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=GPU_0_XAPI_ML_VALIDATION_7525/LGBMClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:31,043:INFO:Adding model into prep_pipe
2024-08-01 12:31:31,058:INFO:GPU_0_XAPI_ML_VALIDATION_7525/LGBMClassifier.pkl saved in current working directory
2024-08-01 12:31:31,119:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=5105, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2024-08-01 12:31:31,119:INFO:save_model() successfully completed......................................
2024-08-01 12:31:31,643:INFO:Initializing save_model()
2024-08-01 12:31:31,643:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5105, splitter='best'), model_name=GPU_0_XAPI_ML_VALIDATION_7525/DecisionTreeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:31,643:INFO:Adding model into prep_pipe
2024-08-01 12:31:31,651:INFO:GPU_0_XAPI_ML_VALIDATION_7525/DecisionTreeClassifier.pkl saved in current working directory
2024-08-01 12:31:31,687:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5105, splitter='best'))],
         verbose=False)
2024-08-01 12:31:31,687:INFO:save_model() successfully completed......................................
2024-08-01 12:31:32,218:INFO:Initializing save_model()
2024-08-01 12:31:32,218:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000028E3932AC90>, model_name=GPU_0_XAPI_ML_VALIDATION_7525/CatBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:32,218:INFO:Adding model into prep_pipe
2024-08-01 12:31:32,229:INFO:GPU_0_XAPI_ML_VALIDATION_7525/CatBoostClassifier.pkl saved in current working directory
2024-08-01 12:31:32,264:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000028E3932AC90>)],
         verbose=False)
2024-08-01 12:31:32,264:INFO:save_model() successfully completed......................................
2024-08-01 12:31:32,783:INFO:Initializing save_model()
2024-08-01 12:31:32,783:INFO:save_model(model=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5105, solver='auto',
                tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_7525/RidgeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:32,783:INFO:Adding model into prep_pipe
2024-08-01 12:31:32,791:INFO:GPU_0_XAPI_ML_VALIDATION_7525/RidgeClassifier.pkl saved in current working directory
2024-08-01 12:31:32,828:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=5105,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-08-01 12:31:32,828:INFO:save_model() successfully completed......................................
2024-08-01 12:31:33,364:INFO:Initializing save_model()
2024-08-01 12:31:33,364:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_7525/LinearDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:33,364:INFO:Adding model into prep_pipe
2024-08-01 12:31:33,372:INFO:GPU_0_XAPI_ML_VALIDATION_7525/LinearDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:31:33,408:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-08-01 12:31:33,409:INFO:save_model() successfully completed......................................
2024-08-01 12:31:33,928:INFO:Initializing save_model()
2024-08-01 12:31:33,928:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=GPU_0_XAPI_ML_VALIDATION_7525/XGBClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:33,928:INFO:Adding model into prep_pipe
2024-08-01 12:31:33,944:INFO:GPU_0_XAPI_ML_VALIDATION_7525/XGBClassifier.pkl saved in current working directory
2024-08-01 12:31:33,994:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-08-01 12:31:33,994:INFO:save_model() successfully completed......................................
2024-08-01 12:31:34,526:INFO:Initializing save_model()
2024-08-01 12:31:34,526:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5105, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_7525/LogisticRegression, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:34,526:INFO:Adding model into prep_pipe
2024-08-01 12:31:34,533:INFO:GPU_0_XAPI_ML_VALIDATION_7525/LogisticRegression.pkl saved in current working directory
2024-08-01 12:31:34,568:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5105,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-08-01 12:31:34,568:INFO:save_model() successfully completed......................................
2024-08-01 12:31:35,086:INFO:Initializing save_model()
2024-08-01 12:31:35,086:INFO:save_model(model=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5105, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_7525/SGDClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:35,086:INFO:Adding model into prep_pipe
2024-08-01 12:31:35,094:INFO:GPU_0_XAPI_ML_VALIDATION_7525/SGDClassifier.pkl saved in current working directory
2024-08-01 12:31:35,130:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=5105,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:31:35,130:INFO:save_model() successfully completed......................................
2024-08-01 12:31:35,653:INFO:Initializing save_model()
2024-08-01 12:31:35,653:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=GPU_0_XAPI_ML_VALIDATION_7525/GaussianNB, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:31:35,653:INFO:Adding model into prep_pipe
2024-08-01 12:31:35,661:INFO:GPU_0_XAPI_ML_VALIDATION_7525/GaussianNB.pkl saved in current working directory
2024-08-01 12:31:35,697:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-08-01 12:31:35,697:INFO:save_model() successfully completed......................................
2024-08-01 12:31:36,180:WARNING:C:\Users\JAL\AppData\Local\Temp\ipykernel_24440\220787957.py:82: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  best_model[best_model.select_dtypes(include=['number']).columns] *= 100

2024-08-01 12:31:36,982:INFO:PyCaret ClassificationExperiment
2024-08-01 12:31:36,982:INFO:Logging name: clf-default-name
2024-08-01 12:31:36,982:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-01 12:31:36,982:INFO:version 3.0.0
2024-08-01 12:31:36,982:INFO:Initializing setup()
2024-08-01 12:31:36,983:INFO:self.USI: 86d8
2024-08-01 12:31:36,983:INFO:self._variable_keys: {'n_jobs_param', 'USI', 'log_plots_param', 'gpu_param', 'target_param', 'html_param', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'exp_id', 'data', 'idx', 'memory', 'fix_imbalance', 'is_multiclass', 'X_test', 'seed', 'X', 'fold_groups_param', 'y_test', '_ml_usecase', 'X_train', 'fold_generator', 'y_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y'}
2024-08-01 12:31:36,983:INFO:Checking environment
2024-08-01 12:31:36,983:INFO:python_version: 3.11.4
2024-08-01 12:31:36,983:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-08-01 12:31:36,983:INFO:machine: AMD64
2024-08-01 12:31:36,983:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-01 12:31:36,988:INFO:Memory: svmem(total=68659781632, available=43519774720, percent=36.6, used=25140006912, free=43519774720)
2024-08-01 12:31:36,988:INFO:Physical Core: 16
2024-08-01 12:31:36,988:INFO:Logical Core: 32
2024-08-01 12:31:36,988:INFO:Checking libraries
2024-08-01 12:31:36,988:INFO:System:
2024-08-01 12:31:36,988:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-08-01 12:31:36,988:INFO:executable: c:\Users\JAL\AppData\Local\Programs\Python\Python311\python.exe
2024-08-01 12:31:36,988:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-01 12:31:36,988:INFO:PyCaret required dependencies:
2024-08-01 12:31:36,988:INFO:                 pip: 24.1.2
2024-08-01 12:31:36,988:INFO:          setuptools: 70.3.0
2024-08-01 12:31:36,988:INFO:             pycaret: 3.0.0
2024-08-01 12:31:36,988:INFO:             IPython: 8.15.0
2024-08-01 12:31:36,988:INFO:          ipywidgets: 8.1.3
2024-08-01 12:31:36,988:INFO:                tqdm: 4.66.4
2024-08-01 12:31:36,988:INFO:               numpy: 1.24.4
2024-08-01 12:31:36,988:INFO:              pandas: 2.2.2
2024-08-01 12:31:36,988:INFO:              jinja2: 3.1.4
2024-08-01 12:31:36,988:INFO:               scipy: 1.11.4
2024-08-01 12:31:36,988:INFO:              joblib: 1.3.2
2024-08-01 12:31:36,988:INFO:             sklearn: 1.3.0
2024-08-01 12:31:36,988:INFO:                pyod: 2.0.1
2024-08-01 12:31:36,988:INFO:            imblearn: 0.12.3
2024-08-01 12:31:36,988:INFO:   category_encoders: 2.6.3
2024-08-01 12:31:36,988:INFO:            lightgbm: 4.3.0
2024-08-01 12:31:36,988:INFO:               numba: 0.60.0
2024-08-01 12:31:36,988:INFO:            requests: 2.32.3
2024-08-01 12:31:36,988:INFO:          matplotlib: 3.7.5
2024-08-01 12:31:36,988:INFO:          scikitplot: 0.3.7
2024-08-01 12:31:36,988:INFO:         yellowbrick: 1.5
2024-08-01 12:31:36,988:INFO:              plotly: 5.22.0
2024-08-01 12:31:36,988:INFO:             kaleido: 0.2.1
2024-08-01 12:31:36,988:INFO:         statsmodels: 0.14.2
2024-08-01 12:31:36,988:INFO:              sktime: 0.26.0
2024-08-01 12:31:36,988:INFO:               tbats: 1.1.3
2024-08-01 12:31:36,988:INFO:            pmdarima: 2.0.4
2024-08-01 12:31:36,988:INFO:              psutil: 5.9.5
2024-08-01 12:31:36,988:INFO:PyCaret optional dependencies:
2024-08-01 12:31:36,988:INFO:                shap: Not installed
2024-08-01 12:31:36,988:INFO:           interpret: Not installed
2024-08-01 12:31:36,988:INFO:                umap: Not installed
2024-08-01 12:31:36,988:INFO:    pandas_profiling: Not installed
2024-08-01 12:31:36,988:INFO:  explainerdashboard: Not installed
2024-08-01 12:31:36,988:INFO:             autoviz: Not installed
2024-08-01 12:31:36,988:INFO:           fairlearn: Not installed
2024-08-01 12:31:36,988:INFO:             xgboost: 2.0.3
2024-08-01 12:31:36,988:INFO:            catboost: 1.2.5
2024-08-01 12:31:36,988:INFO:              kmodes: Not installed
2024-08-01 12:31:36,988:INFO:             mlxtend: Not installed
2024-08-01 12:31:36,988:INFO:       statsforecast: 1.4.0
2024-08-01 12:31:36,988:INFO:        tune_sklearn: Not installed
2024-08-01 12:31:36,988:INFO:                 ray: 2.10.0
2024-08-01 12:31:36,988:INFO:            hyperopt: 0.2.7
2024-08-01 12:31:36,990:INFO:              optuna: Not installed
2024-08-01 12:31:36,990:INFO:               skopt: Not installed
2024-08-01 12:31:36,990:INFO:              mlflow: Not installed
2024-08-01 12:31:36,990:INFO:              gradio: Not installed
2024-08-01 12:31:36,990:INFO:             fastapi: Not installed
2024-08-01 12:31:36,990:INFO:             uvicorn: Not installed
2024-08-01 12:31:36,990:INFO:              m2cgen: Not installed
2024-08-01 12:31:36,990:INFO:           evidently: Not installed
2024-08-01 12:31:36,990:INFO:               fugue: Not installed
2024-08-01 12:31:36,990:INFO:           streamlit: 1.31.0
2024-08-01 12:31:36,990:INFO:             prophet: Not installed
2024-08-01 12:31:36,990:INFO:None
2024-08-01 12:31:36,990:INFO:Set up data.
2024-08-01 12:31:36,994:INFO:Set up train/test split.
2024-08-01 12:31:36,998:INFO:Set up index.
2024-08-01 12:31:36,998:INFO:Set up folding strategy.
2024-08-01 12:31:36,998:INFO:Assigning column types.
2024-08-01 12:31:37,000:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-01 12:31:37,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,048:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,075:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,094:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,096:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,096:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-01 12:31:37,125:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,143:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,145:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-01 12:31:37,191:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,193:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,193:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-01 12:31:37,241:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,243:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,289:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,290:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,291:INFO:Preparing preprocessing pipeline...
2024-08-01 12:31:37,291:INFO:Set up label encoding.
2024-08-01 12:31:37,291:INFO:Set up simple imputation.
2024-08-01 12:31:37,294:INFO:Set up encoding of ordinal features.
2024-08-01 12:31:37,297:INFO:Set up encoding of categorical features.
2024-08-01 12:31:37,379:INFO:Finished creating preprocessing pipeline.
2024-08-01 12:31:37,415:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-08-01 12:31:37,415:INFO:Creating final display dataframe.
2024-08-01 12:31:37,648:INFO:Setup _display_container:                     Description             Value
0                    Session id              6822
1                        Target             Class
2                   Target type        Multiclass
3                Target mapping  H: 0, L: 1, M: 2
4           Original data shape         (480, 17)
5        Transformed data shape         (480, 67)
6   Transformed train set shape         (336, 67)
7    Transformed test set shape         (144, 67)
8              Ordinal features                 6
9              Numeric features                 4
10         Categorical features                12
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              86d8
2024-08-01 12:31:37,698:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,700:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-08-01 12:31:37,748:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-01 12:31:37,749:INFO:setup() successfully completed in 1.17s...............
2024-08-01 12:31:37,749:INFO:Initializing compare_models()
2024-08-01 12:31:37,749:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:31:37,749:INFO:Checking exceptions
2024-08-01 12:31:37,750:INFO:Preparing display monitor
2024-08-01 12:31:37,762:INFO:Initializing Logistic Regression
2024-08-01 12:31:37,762:INFO:Total runtime is 0.0 minutes
2024-08-01 12:31:37,763:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:37,763:INFO:Initializing create_model()
2024-08-01 12:31:37,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:37,764:INFO:Checking exceptions
2024-08-01 12:31:37,764:INFO:Importing libraries
2024-08-01 12:31:37,764:INFO:Copying training dataset
2024-08-01 12:31:37,766:INFO:Defining folds
2024-08-01 12:31:37,766:INFO:Declaring metric variables
2024-08-01 12:31:37,768:INFO:Importing untrained model
2024-08-01 12:31:37,770:INFO:Logistic Regression Imported successfully
2024-08-01 12:31:37,773:INFO:Starting cross validation
2024-08-01 12:31:37,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:38,036:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,044:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,047:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,056:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,056:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,062:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,063:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:31:38,191:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,192:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,193:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,196:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,197:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,200:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,201:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,201:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,203:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,208:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,210:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,212:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,214:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,215:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,223:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,224:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,224:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,225:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,225:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,226:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,227:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,227:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,228:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,228:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,230:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:38,231:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:42,023:INFO:Calculating mean and std
2024-08-01 12:31:42,024:INFO:Creating metrics dataframe
2024-08-01 12:31:42,534:INFO:Uploading results into container
2024-08-01 12:31:42,534:INFO:Uploading model into container now
2024-08-01 12:31:42,535:INFO:_master_model_container: 1
2024-08-01 12:31:42,535:INFO:_display_container: 2
2024-08-01 12:31:42,535:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:31:42,535:INFO:create_model() successfully completed......................................
2024-08-01 12:31:42,599:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:42,599:INFO:Creating metrics dataframe
2024-08-01 12:31:42,602:INFO:Initializing K Neighbors Classifier
2024-08-01 12:31:42,602:INFO:Total runtime is 0.08067880074183147 minutes
2024-08-01 12:31:42,603:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:42,603:INFO:Initializing create_model()
2024-08-01 12:31:42,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:42,603:INFO:Checking exceptions
2024-08-01 12:31:42,603:INFO:Importing libraries
2024-08-01 12:31:42,603:INFO:Copying training dataset
2024-08-01 12:31:42,608:INFO:Defining folds
2024-08-01 12:31:42,608:INFO:Declaring metric variables
2024-08-01 12:31:42,609:INFO:Importing untrained model
2024-08-01 12:31:42,611:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:31:42,614:INFO:Starting cross validation
2024-08-01 12:31:42,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:42,856:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,860:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,861:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,862:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,865:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,866:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,868:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,872:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,874:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:42,884:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,155:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,156:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,158:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,160:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,160:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,163:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,167:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,172:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:43,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:46,940:INFO:Calculating mean and std
2024-08-01 12:31:46,941:INFO:Creating metrics dataframe
2024-08-01 12:31:47,437:INFO:Uploading results into container
2024-08-01 12:31:47,438:INFO:Uploading model into container now
2024-08-01 12:31:47,438:INFO:_master_model_container: 2
2024-08-01 12:31:47,438:INFO:_display_container: 2
2024-08-01 12:31:47,438:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:31:47,438:INFO:create_model() successfully completed......................................
2024-08-01 12:31:47,503:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:31:47,503:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:31:47,503:INFO:Initializing create_model()
2024-08-01 12:31:47,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:47,504:INFO:Checking exceptions
2024-08-01 12:31:47,504:INFO:Importing libraries
2024-08-01 12:31:47,504:INFO:Copying training dataset
2024-08-01 12:31:47,506:INFO:Defining folds
2024-08-01 12:31:47,506:INFO:Declaring metric variables
2024-08-01 12:31:47,508:INFO:Importing untrained model
2024-08-01 12:31:47,510:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:31:47,513:INFO:Starting cross validation
2024-08-01 12:31:47,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:47,759:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,760:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,764:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,765:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,768:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,772:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,773:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,774:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,776:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:47,776:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,055:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,057:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,060:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,065:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,066:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,068:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,069:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,070:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,071:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:48,074:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:31:51,828:INFO:Calculating mean and std
2024-08-01 12:31:51,829:INFO:Creating metrics dataframe
2024-08-01 12:31:52,332:INFO:Uploading results into container
2024-08-01 12:31:52,332:INFO:Uploading model into container now
2024-08-01 12:31:52,332:INFO:_master_model_container: 3
2024-08-01 12:31:52,332:INFO:_display_container: 2
2024-08-01 12:31:52,333:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:31:52,333:INFO:create_model() successfully completed......................................
2024-08-01 12:31:52,397:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:31:52,397:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:31:52,397:INFO:Initializing Naive Bayes
2024-08-01 12:31:52,397:INFO:Total runtime is 0.24392632246017454 minutes
2024-08-01 12:31:52,400:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:52,400:INFO:Initializing create_model()
2024-08-01 12:31:52,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:52,400:INFO:Checking exceptions
2024-08-01 12:31:52,400:INFO:Importing libraries
2024-08-01 12:31:52,400:INFO:Copying training dataset
2024-08-01 12:31:52,403:INFO:Defining folds
2024-08-01 12:31:52,403:INFO:Declaring metric variables
2024-08-01 12:31:52,404:INFO:Importing untrained model
2024-08-01 12:31:52,405:INFO:Naive Bayes Imported successfully
2024-08-01 12:31:52,409:INFO:Starting cross validation
2024-08-01 12:31:52,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:52,656:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:31:52,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,659:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,662:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,662:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:31:52,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,671:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,672:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,673:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,673:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,674:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,674:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,675:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,675:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,684:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:52,685:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:56,445:INFO:Calculating mean and std
2024-08-01 12:31:56,445:INFO:Creating metrics dataframe
2024-08-01 12:31:56,953:INFO:Uploading results into container
2024-08-01 12:31:56,953:INFO:Uploading model into container now
2024-08-01 12:31:56,954:INFO:_master_model_container: 4
2024-08-01 12:31:56,954:INFO:_display_container: 2
2024-08-01 12:31:56,954:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:31:56,954:INFO:create_model() successfully completed......................................
2024-08-01 12:31:57,017:INFO:SubProcess create_model() end ==================================
2024-08-01 12:31:57,017:INFO:Creating metrics dataframe
2024-08-01 12:31:57,022:INFO:Initializing Decision Tree Classifier
2024-08-01 12:31:57,023:INFO:Total runtime is 0.32101725339889525 minutes
2024-08-01 12:31:57,025:INFO:SubProcess create_model() called ==================================
2024-08-01 12:31:57,025:INFO:Initializing create_model()
2024-08-01 12:31:57,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:31:57,025:INFO:Checking exceptions
2024-08-01 12:31:57,025:INFO:Importing libraries
2024-08-01 12:31:57,025:INFO:Copying training dataset
2024-08-01 12:31:57,027:INFO:Defining folds
2024-08-01 12:31:57,027:INFO:Declaring metric variables
2024-08-01 12:31:57,029:INFO:Importing untrained model
2024-08-01 12:31:57,030:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:31:57,035:INFO:Starting cross validation
2024-08-01 12:31:57,036:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:31:57,285:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,286:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,287:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,288:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,288:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,288:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,288:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,290:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,291:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,292:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,293:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,294:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,294:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,295:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,297:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,297:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,297:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,299:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,300:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,300:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,301:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,312:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,314:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,315:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,330:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,331:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:31:57,332:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,110:INFO:Calculating mean and std
2024-08-01 12:32:01,110:INFO:Creating metrics dataframe
2024-08-01 12:32:01,614:INFO:Uploading results into container
2024-08-01 12:32:01,614:INFO:Uploading model into container now
2024-08-01 12:32:01,615:INFO:_master_model_container: 5
2024-08-01 12:32:01,615:INFO:_display_container: 2
2024-08-01 12:32:01,615:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best')
2024-08-01 12:32:01,615:INFO:create_model() successfully completed......................................
2024-08-01 12:32:01,677:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:01,677:INFO:Creating metrics dataframe
2024-08-01 12:32:01,682:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:32:01,682:INFO:Total runtime is 0.39866475661595663 minutes
2024-08-01 12:32:01,684:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:01,684:INFO:Initializing create_model()
2024-08-01 12:32:01,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:01,684:INFO:Checking exceptions
2024-08-01 12:32:01,685:INFO:Importing libraries
2024-08-01 12:32:01,685:INFO:Copying training dataset
2024-08-01 12:32:01,687:INFO:Defining folds
2024-08-01 12:32:01,687:INFO:Declaring metric variables
2024-08-01 12:32:01,689:INFO:Importing untrained model
2024-08-01 12:32:01,690:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:32:01,693:INFO:Starting cross validation
2024-08-01 12:32:01,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:01,901:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,903:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,903:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,904:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,904:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,905:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,905:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,906:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,907:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,908:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,909:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,910:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,910:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,910:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,910:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,911:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,911:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,911:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,912:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,913:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,913:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,913:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,913:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,913:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,914:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,914:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,915:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,915:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,915:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,916:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,916:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,918:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,919:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:01,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,921:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:01,922:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:32:01,922:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:05,722:INFO:Calculating mean and std
2024-08-01 12:32:05,723:INFO:Creating metrics dataframe
2024-08-01 12:32:06,225:INFO:Uploading results into container
2024-08-01 12:32:06,226:INFO:Uploading model into container now
2024-08-01 12:32:06,226:INFO:_master_model_container: 6
2024-08-01 12:32:06,226:INFO:_display_container: 2
2024-08-01 12:32:06,226:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:32:06,226:INFO:create_model() successfully completed......................................
2024-08-01 12:32:06,294:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:06,294:INFO:Creating metrics dataframe
2024-08-01 12:32:06,299:INFO:Initializing Ridge Classifier
2024-08-01 12:32:06,299:INFO:Total runtime is 0.4756234089533488 minutes
2024-08-01 12:32:06,300:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:06,300:INFO:Initializing create_model()
2024-08-01 12:32:06,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:06,301:INFO:Checking exceptions
2024-08-01 12:32:06,301:INFO:Importing libraries
2024-08-01 12:32:06,301:INFO:Copying training dataset
2024-08-01 12:32:06,303:INFO:Defining folds
2024-08-01 12:32:06,303:INFO:Declaring metric variables
2024-08-01 12:32:06,305:INFO:Importing untrained model
2024-08-01 12:32:06,307:INFO:Ridge Classifier Imported successfully
2024-08-01 12:32:06,311:INFO:Starting cross validation
2024-08-01 12:32:06,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:06,498:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,498:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,500:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,502:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,502:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,503:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,504:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,504:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,505:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,505:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,507:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,509:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,509:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,510:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,511:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,511:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,512:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,512:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,513:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,516:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,516:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,517:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,519:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,519:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,520:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:32:06,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,521:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,522:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:06,523:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:10,300:INFO:Calculating mean and std
2024-08-01 12:32:10,300:INFO:Creating metrics dataframe
2024-08-01 12:32:10,808:INFO:Uploading results into container
2024-08-01 12:32:10,809:INFO:Uploading model into container now
2024-08-01 12:32:10,809:INFO:_master_model_container: 7
2024-08-01 12:32:10,809:INFO:_display_container: 2
2024-08-01 12:32:10,809:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001)
2024-08-01 12:32:10,809:INFO:create_model() successfully completed......................................
2024-08-01 12:32:10,871:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:10,871:INFO:Creating metrics dataframe
2024-08-01 12:32:10,876:INFO:Initializing Random Forest Classifier
2024-08-01 12:32:10,876:INFO:Total runtime is 0.5519134243329367 minutes
2024-08-01 12:32:10,879:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:10,879:INFO:Initializing create_model()
2024-08-01 12:32:10,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:10,879:INFO:Checking exceptions
2024-08-01 12:32:10,879:INFO:Importing libraries
2024-08-01 12:32:10,879:INFO:Copying training dataset
2024-08-01 12:32:10,881:INFO:Defining folds
2024-08-01 12:32:10,881:INFO:Declaring metric variables
2024-08-01 12:32:10,882:INFO:Importing untrained model
2024-08-01 12:32:10,885:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:32:10,888:INFO:Starting cross validation
2024-08-01 12:32:10,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:11,459:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,460:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,462:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,469:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,471:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,472:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,472:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,473:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,473:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,473:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,475:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,475:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,477:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,480:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,481:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,482:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,483:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,484:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,485:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,486:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,486:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,512:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,514:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,514:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:11,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:15,262:INFO:Calculating mean and std
2024-08-01 12:32:15,263:INFO:Creating metrics dataframe
2024-08-01 12:32:15,767:INFO:Uploading results into container
2024-08-01 12:32:15,767:INFO:Uploading model into container now
2024-08-01 12:32:15,768:INFO:_master_model_container: 8
2024-08-01 12:32:15,768:INFO:_display_container: 2
2024-08-01 12:32:15,768:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:32:15,768:INFO:create_model() successfully completed......................................
2024-08-01 12:32:15,831:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:15,831:INFO:Creating metrics dataframe
2024-08-01 12:32:15,836:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:32:15,836:INFO:Total runtime is 0.6345782399177552 minutes
2024-08-01 12:32:15,838:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:15,838:INFO:Initializing create_model()
2024-08-01 12:32:15,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:15,838:INFO:Checking exceptions
2024-08-01 12:32:15,838:INFO:Importing libraries
2024-08-01 12:32:15,838:INFO:Copying training dataset
2024-08-01 12:32:15,841:INFO:Defining folds
2024-08-01 12:32:15,841:INFO:Declaring metric variables
2024-08-01 12:32:15,842:INFO:Importing untrained model
2024-08-01 12:32:15,843:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:32:15,847:INFO:Starting cross validation
2024-08-01 12:32:15,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:15,972:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,985:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,988:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,989:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,990:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,994:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:15,997:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:32:16,094:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,096:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,098:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,107:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,109:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,111:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,114:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,121:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,121:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:16,122:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:19,966:INFO:Calculating mean and std
2024-08-01 12:32:19,967:INFO:Creating metrics dataframe
2024-08-01 12:32:20,514:INFO:Uploading results into container
2024-08-01 12:32:20,515:INFO:Uploading model into container now
2024-08-01 12:32:20,515:INFO:_master_model_container: 9
2024-08-01 12:32:20,515:INFO:_display_container: 2
2024-08-01 12:32:20,515:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:32:20,515:INFO:create_model() successfully completed......................................
2024-08-01 12:32:20,580:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:20,580:INFO:Creating metrics dataframe
2024-08-01 12:32:20,587:INFO:Initializing Ada Boost Classifier
2024-08-01 12:32:20,587:INFO:Total runtime is 0.7137484629948935 minutes
2024-08-01 12:32:20,590:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:20,590:INFO:Initializing create_model()
2024-08-01 12:32:20,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:20,590:INFO:Checking exceptions
2024-08-01 12:32:20,591:INFO:Importing libraries
2024-08-01 12:32:20,591:INFO:Copying training dataset
2024-08-01 12:32:20,593:INFO:Defining folds
2024-08-01 12:32:20,593:INFO:Declaring metric variables
2024-08-01 12:32:20,595:INFO:Importing untrained model
2024-08-01 12:32:20,597:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:32:20,601:INFO:Starting cross validation
2024-08-01 12:32:20,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:20,943:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,945:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,946:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,947:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,947:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,949:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,950:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,954:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,956:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,957:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,959:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,959:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,960:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,960:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,961:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,962:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,968:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,974:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,975:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,976:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,997:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,998:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,999:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:20,999:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:21,000:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:21,002:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:24,741:INFO:Calculating mean and std
2024-08-01 12:32:24,741:INFO:Creating metrics dataframe
2024-08-01 12:32:25,274:INFO:Uploading results into container
2024-08-01 12:32:25,275:INFO:Uploading model into container now
2024-08-01 12:32:25,275:INFO:_master_model_container: 10
2024-08-01 12:32:25,275:INFO:_display_container: 2
2024-08-01 12:32:25,275:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822)
2024-08-01 12:32:25,276:INFO:create_model() successfully completed......................................
2024-08-01 12:32:25,338:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:25,338:INFO:Creating metrics dataframe
2024-08-01 12:32:25,343:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:32:25,343:INFO:Total runtime is 0.7930230855941773 minutes
2024-08-01 12:32:25,345:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:25,345:INFO:Initializing create_model()
2024-08-01 12:32:25,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:25,345:INFO:Checking exceptions
2024-08-01 12:32:25,345:INFO:Importing libraries
2024-08-01 12:32:25,345:INFO:Copying training dataset
2024-08-01 12:32:25,348:INFO:Defining folds
2024-08-01 12:32:25,348:INFO:Declaring metric variables
2024-08-01 12:32:25,350:INFO:Importing untrained model
2024-08-01 12:32:25,352:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:32:25,355:INFO:Starting cross validation
2024-08-01 12:32:25,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:26,111:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,112:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,116:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,117:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,121:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,122:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,123:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,124:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,125:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,126:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,128:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,133:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,134:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,136:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,167:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,168:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,169:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,174:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,175:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:26,177:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:29,960:INFO:Calculating mean and std
2024-08-01 12:32:29,961:INFO:Creating metrics dataframe
2024-08-01 12:32:30,465:INFO:Uploading results into container
2024-08-01 12:32:30,466:INFO:Uploading model into container now
2024-08-01 12:32:30,466:INFO:_master_model_container: 11
2024-08-01 12:32:30,466:INFO:_display_container: 2
2024-08-01 12:32:30,466:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:32:30,466:INFO:create_model() successfully completed......................................
2024-08-01 12:32:30,531:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:30,531:INFO:Creating metrics dataframe
2024-08-01 12:32:30,536:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:32:30,536:INFO:Total runtime is 0.87957501411438 minutes
2024-08-01 12:32:30,538:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:30,538:INFO:Initializing create_model()
2024-08-01 12:32:30,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:30,539:INFO:Checking exceptions
2024-08-01 12:32:30,539:INFO:Importing libraries
2024-08-01 12:32:30,539:INFO:Copying training dataset
2024-08-01 12:32:30,541:INFO:Defining folds
2024-08-01 12:32:30,541:INFO:Declaring metric variables
2024-08-01 12:32:30,543:INFO:Importing untrained model
2024-08-01 12:32:30,544:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:32:30,548:INFO:Starting cross validation
2024-08-01 12:32:30,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:30,799:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,800:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,802:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,802:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,803:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,807:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,807:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,807:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,808:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,809:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,809:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,810:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,810:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,810:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,816:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,817:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,817:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,818:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,818:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,818:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,819:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,819:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,819:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,820:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,821:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:30,822:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:34,699:INFO:Calculating mean and std
2024-08-01 12:32:34,700:INFO:Creating metrics dataframe
2024-08-01 12:32:35,233:INFO:Uploading results into container
2024-08-01 12:32:35,234:INFO:Uploading model into container now
2024-08-01 12:32:35,234:INFO:_master_model_container: 12
2024-08-01 12:32:35,234:INFO:_display_container: 2
2024-08-01 12:32:35,234:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:32:35,234:INFO:create_model() successfully completed......................................
2024-08-01 12:32:35,296:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:35,296:INFO:Creating metrics dataframe
2024-08-01 12:32:35,301:INFO:Initializing Extra Trees Classifier
2024-08-01 12:32:35,301:INFO:Total runtime is 0.9589906215667726 minutes
2024-08-01 12:32:35,303:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:35,303:INFO:Initializing create_model()
2024-08-01 12:32:35,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:35,303:INFO:Checking exceptions
2024-08-01 12:32:35,303:INFO:Importing libraries
2024-08-01 12:32:35,303:INFO:Copying training dataset
2024-08-01 12:32:35,304:INFO:Defining folds
2024-08-01 12:32:35,304:INFO:Declaring metric variables
2024-08-01 12:32:35,308:INFO:Importing untrained model
2024-08-01 12:32:35,310:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:32:35,313:INFO:Starting cross validation
2024-08-01 12:32:35,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:35,882:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,884:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,884:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,886:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,886:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,888:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,891:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,893:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,901:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,902:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,903:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,904:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,907:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,908:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,909:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,911:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,911:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,913:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,914:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,914:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,916:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,945:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,947:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:35,948:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:39,723:INFO:Calculating mean and std
2024-08-01 12:32:39,724:INFO:Creating metrics dataframe
2024-08-01 12:32:40,233:INFO:Uploading results into container
2024-08-01 12:32:40,233:INFO:Uploading model into container now
2024-08-01 12:32:40,234:INFO:_master_model_container: 13
2024-08-01 12:32:40,234:INFO:_display_container: 2
2024-08-01 12:32:40,234:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:32:40,234:INFO:create_model() successfully completed......................................
2024-08-01 12:32:40,299:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:40,299:INFO:Creating metrics dataframe
2024-08-01 12:32:40,304:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:32:40,304:INFO:Total runtime is 1.0423761169115704 minutes
2024-08-01 12:32:40,307:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:40,307:INFO:Initializing create_model()
2024-08-01 12:32:40,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:40,307:INFO:Checking exceptions
2024-08-01 12:32:40,307:INFO:Importing libraries
2024-08-01 12:32:40,307:INFO:Copying training dataset
2024-08-01 12:32:40,309:INFO:Defining folds
2024-08-01 12:32:40,309:INFO:Declaring metric variables
2024-08-01 12:32:40,311:INFO:Importing untrained model
2024-08-01 12:32:40,313:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:32:40,317:INFO:Starting cross validation
2024-08-01 12:32:40,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:40,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,671:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,673:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,683:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,685:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,784:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,786:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,786:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,786:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,787:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,789:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:40,790:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:44,540:INFO:Calculating mean and std
2024-08-01 12:32:44,540:INFO:Creating metrics dataframe
2024-08-01 12:32:45,051:INFO:Uploading results into container
2024-08-01 12:32:45,052:INFO:Uploading model into container now
2024-08-01 12:32:45,052:INFO:_master_model_container: 14
2024-08-01 12:32:45,052:INFO:_display_container: 2
2024-08-01 12:32:45,053:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:32:45,053:INFO:create_model() successfully completed......................................
2024-08-01 12:32:45,125:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:45,125:INFO:Creating metrics dataframe
2024-08-01 12:32:45,130:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:32:45,130:INFO:Total runtime is 1.12280490398407 minutes
2024-08-01 12:32:45,132:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:45,132:INFO:Initializing create_model()
2024-08-01 12:32:45,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:45,132:INFO:Checking exceptions
2024-08-01 12:32:45,133:INFO:Importing libraries
2024-08-01 12:32:45,133:INFO:Copying training dataset
2024-08-01 12:32:45,135:INFO:Defining folds
2024-08-01 12:32:45,135:INFO:Declaring metric variables
2024-08-01 12:32:45,137:INFO:Importing untrained model
2024-08-01 12:32:45,139:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:32:45,142:INFO:Starting cross validation
2024-08-01 12:32:45,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:46,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,118:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,120:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,205:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,252:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,254:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,256:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,263:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,266:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,268:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,432:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,435:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:46,437:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,607:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,609:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,618:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,620:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,622:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,654:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,657:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,706:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,708:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,783:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,785:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:47,788:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:50,775:INFO:Calculating mean and std
2024-08-01 12:32:50,775:INFO:Creating metrics dataframe
2024-08-01 12:32:51,326:INFO:Uploading results into container
2024-08-01 12:32:51,327:INFO:Uploading model into container now
2024-08-01 12:32:51,327:INFO:_master_model_container: 15
2024-08-01 12:32:51,327:INFO:_display_container: 2
2024-08-01 12:32:51,327:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:32:51,327:INFO:create_model() successfully completed......................................
2024-08-01 12:32:51,392:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:51,392:INFO:Creating metrics dataframe
2024-08-01 12:32:51,392:INFO:Initializing CatBoost Classifier
2024-08-01 12:32:51,392:INFO:Total runtime is 1.227171556154887 minutes
2024-08-01 12:32:51,392:INFO:SubProcess create_model() called ==================================
2024-08-01 12:32:51,392:INFO:Initializing create_model()
2024-08-01 12:32:51,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E395EEF10>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:51,392:INFO:Checking exceptions
2024-08-01 12:32:51,392:INFO:Importing libraries
2024-08-01 12:32:51,392:INFO:Copying training dataset
2024-08-01 12:32:51,392:INFO:Defining folds
2024-08-01 12:32:51,392:INFO:Declaring metric variables
2024-08-01 12:32:51,392:INFO:Importing untrained model
2024-08-01 12:32:51,408:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:32:51,408:INFO:Starting cross validation
2024-08-01 12:32:51,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:32:54,754:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,762:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,885:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,888:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,890:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,924:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,934:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,934:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,974:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,974:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:54,974:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,085:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,090:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,093:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,206:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,206:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,206:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,308:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,308:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,308:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,318:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,321:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,323:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,456:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,456:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,459:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,763:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:55,765:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:32:59,133:INFO:Calculating mean and std
2024-08-01 12:32:59,133:INFO:Creating metrics dataframe
2024-08-01 12:32:59,673:INFO:Uploading results into container
2024-08-01 12:32:59,673:INFO:Uploading model into container now
2024-08-01 12:32:59,673:INFO:_master_model_container: 16
2024-08-01 12:32:59,673:INFO:_display_container: 2
2024-08-01 12:32:59,673:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E32AD7150>
2024-08-01 12:32:59,673:INFO:create_model() successfully completed......................................
2024-08-01 12:32:59,736:INFO:SubProcess create_model() end ==================================
2024-08-01 12:32:59,736:INFO:Creating metrics dataframe
2024-08-01 12:32:59,753:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:32:59,755:INFO:Initializing create_model()
2024-08-01 12:32:59,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:32:59,755:INFO:Checking exceptions
2024-08-01 12:32:59,755:INFO:Importing libraries
2024-08-01 12:32:59,755:INFO:Copying training dataset
2024-08-01 12:32:59,755:INFO:Defining folds
2024-08-01 12:32:59,755:INFO:Declaring metric variables
2024-08-01 12:32:59,755:INFO:Importing untrained model
2024-08-01 12:32:59,755:INFO:Declaring custom model
2024-08-01 12:32:59,755:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:32:59,755:INFO:Cross validation set to False
2024-08-01 12:32:59,755:INFO:Fitting Model
2024-08-01 12:33:00,332:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:33:00,332:INFO:create_model() successfully completed......................................
2024-08-01 12:33:00,392:INFO:Initializing create_model()
2024-08-01 12:33:00,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:00,392:INFO:Checking exceptions
2024-08-01 12:33:00,398:INFO:Importing libraries
2024-08-01 12:33:00,398:INFO:Copying training dataset
2024-08-01 12:33:00,398:INFO:Defining folds
2024-08-01 12:33:00,398:INFO:Declaring metric variables
2024-08-01 12:33:00,398:INFO:Importing untrained model
2024-08-01 12:33:00,398:INFO:Declaring custom model
2024-08-01 12:33:00,398:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:33:00,398:INFO:Cross validation set to False
2024-08-01 12:33:00,398:INFO:Fitting Model
2024-08-01 12:33:01,273:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:33:01,273:INFO:create_model() successfully completed......................................
2024-08-01 12:33:01,357:INFO:Initializing create_model()
2024-08-01 12:33:01,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:01,357:INFO:Checking exceptions
2024-08-01 12:33:01,357:INFO:Importing libraries
2024-08-01 12:33:01,357:INFO:Copying training dataset
2024-08-01 12:33:01,360:INFO:Defining folds
2024-08-01 12:33:01,360:INFO:Declaring metric variables
2024-08-01 12:33:01,360:INFO:Importing untrained model
2024-08-01 12:33:01,360:INFO:Declaring custom model
2024-08-01 12:33:01,360:INFO:Ridge Classifier Imported successfully
2024-08-01 12:33:01,360:INFO:Cross validation set to False
2024-08-01 12:33:01,360:INFO:Fitting Model
2024-08-01 12:33:01,873:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001)
2024-08-01 12:33:01,873:INFO:create_model() successfully completed......................................
2024-08-01 12:33:01,941:INFO:Initializing create_model()
2024-08-01 12:33:01,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:01,941:INFO:Checking exceptions
2024-08-01 12:33:01,941:INFO:Importing libraries
2024-08-01 12:33:01,941:INFO:Copying training dataset
2024-08-01 12:33:01,941:INFO:Defining folds
2024-08-01 12:33:01,941:INFO:Declaring metric variables
2024-08-01 12:33:01,941:INFO:Importing untrained model
2024-08-01 12:33:01,941:INFO:Declaring custom model
2024-08-01 12:33:01,941:INFO:Logistic Regression Imported successfully
2024-08-01 12:33:01,941:INFO:Cross validation set to False
2024-08-01 12:33:01,941:INFO:Fitting Model
2024-08-01 12:33:02,173:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-01 12:33:02,623:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:33:02,623:INFO:create_model() successfully completed......................................
2024-08-01 12:33:02,691:INFO:Initializing create_model()
2024-08-01 12:33:02,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=<catboost.core.CatBoostClassifier object at 0x0000028E32AD7150>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:02,692:INFO:Checking exceptions
2024-08-01 12:33:02,693:INFO:Importing libraries
2024-08-01 12:33:02,693:INFO:Copying training dataset
2024-08-01 12:33:02,694:INFO:Defining folds
2024-08-01 12:33:02,694:INFO:Declaring metric variables
2024-08-01 12:33:02,694:INFO:Importing untrained model
2024-08-01 12:33:02,694:INFO:Declaring custom model
2024-08-01 12:33:02,694:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:33:02,694:INFO:Cross validation set to False
2024-08-01 12:33:02,694:INFO:Fitting Model
2024-08-01 12:33:04,906:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E392D7410>
2024-08-01 12:33:04,906:INFO:create_model() successfully completed......................................
2024-08-01 12:33:04,973:INFO:Initializing create_model()
2024-08-01 12:33:04,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:04,973:INFO:Checking exceptions
2024-08-01 12:33:04,977:INFO:Importing libraries
2024-08-01 12:33:04,977:INFO:Copying training dataset
2024-08-01 12:33:04,978:INFO:Defining folds
2024-08-01 12:33:04,978:INFO:Declaring metric variables
2024-08-01 12:33:04,978:INFO:Importing untrained model
2024-08-01 12:33:04,978:INFO:Declaring custom model
2024-08-01 12:33:04,978:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:33:04,982:INFO:Cross validation set to False
2024-08-01 12:33:04,982:INFO:Fitting Model
2024-08-01 12:33:05,666:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:33:05,666:INFO:create_model() successfully completed......................................
2024-08-01 12:33:05,742:INFO:Initializing create_model()
2024-08-01 12:33:05,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:05,742:INFO:Checking exceptions
2024-08-01 12:33:05,742:INFO:Importing libraries
2024-08-01 12:33:05,742:INFO:Copying training dataset
2024-08-01 12:33:05,742:INFO:Defining folds
2024-08-01 12:33:05,742:INFO:Declaring metric variables
2024-08-01 12:33:05,742:INFO:Importing untrained model
2024-08-01 12:33:05,742:INFO:Declaring custom model
2024-08-01 12:33:05,742:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:33:05,742:INFO:Cross validation set to False
2024-08-01 12:33:05,742:INFO:Fitting Model
2024-08-01 12:33:06,310:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:33:06,310:INFO:create_model() successfully completed......................................
2024-08-01 12:33:06,389:INFO:Initializing create_model()
2024-08-01 12:33:06,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:06,389:INFO:Checking exceptions
2024-08-01 12:33:06,389:INFO:Importing libraries
2024-08-01 12:33:06,390:INFO:Copying training dataset
2024-08-01 12:33:06,391:INFO:Defining folds
2024-08-01 12:33:06,391:INFO:Declaring metric variables
2024-08-01 12:33:06,393:INFO:Importing untrained model
2024-08-01 12:33:06,393:INFO:Declaring custom model
2024-08-01 12:33:06,393:INFO:str Imported successfully
2024-08-01 12:33:06,395:INFO:Cross validation set to False
2024-08-01 12:33:06,395:INFO:Fitting Model
2024-08-01 12:33:07,023:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822)
2024-08-01 12:33:07,023:INFO:create_model() successfully completed......................................
2024-08-01 12:33:07,090:INFO:Initializing create_model()
2024-08-01 12:33:07,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:07,097:INFO:Checking exceptions
2024-08-01 12:33:07,098:INFO:Importing libraries
2024-08-01 12:33:07,098:INFO:Copying training dataset
2024-08-01 12:33:07,098:INFO:Defining folds
2024-08-01 12:33:07,098:INFO:Declaring metric variables
2024-08-01 12:33:07,098:INFO:Importing untrained model
2024-08-01 12:33:07,098:INFO:Declaring custom model
2024-08-01 12:33:07,098:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:33:07,098:INFO:Cross validation set to False
2024-08-01 12:33:07,098:INFO:Fitting Model
2024-08-01 12:33:07,840:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-08-01 12:33:07,840:INFO:create_model() successfully completed......................................
2024-08-01 12:33:07,907:INFO:Initializing create_model()
2024-08-01 12:33:07,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:07,907:INFO:Checking exceptions
2024-08-01 12:33:07,907:INFO:Importing libraries
2024-08-01 12:33:07,907:INFO:Copying training dataset
2024-08-01 12:33:07,907:INFO:Defining folds
2024-08-01 12:33:07,907:INFO:Declaring metric variables
2024-08-01 12:33:07,907:INFO:Importing untrained model
2024-08-01 12:33:07,907:INFO:Declaring custom model
2024-08-01 12:33:07,907:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:33:07,907:INFO:Cross validation set to False
2024-08-01 12:33:07,907:INFO:Fitting Model
2024-08-01 12:33:08,522:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:33:08,522:INFO:create_model() successfully completed......................................
2024-08-01 12:33:08,589:INFO:Initializing create_model()
2024-08-01 12:33:08,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:08,589:INFO:Checking exceptions
2024-08-01 12:33:08,589:INFO:Importing libraries
2024-08-01 12:33:08,590:INFO:Copying training dataset
2024-08-01 12:33:08,590:INFO:Defining folds
2024-08-01 12:33:08,590:INFO:Declaring metric variables
2024-08-01 12:33:08,590:INFO:Importing untrained model
2024-08-01 12:33:08,590:INFO:Declaring custom model
2024-08-01 12:33:08,590:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:33:08,590:INFO:Cross validation set to False
2024-08-01 12:33:08,590:INFO:Fitting Model
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000134 seconds.
2024-08-01 12:33:08,690:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Total Bins 282
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Number of data points in the train set: 336, number of used features: 31
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Start training from score -1.221991
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Start training from score -1.328475
2024-08-01 12:33:08,690:INFO:[LightGBM] [Info] Start training from score -0.819899
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:08,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-01 12:33:09,223:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:33:09,223:INFO:create_model() successfully completed......................................
2024-08-01 12:33:09,306:INFO:Initializing create_model()
2024-08-01 12:33:09,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:09,306:INFO:Checking exceptions
2024-08-01 12:33:09,306:INFO:Importing libraries
2024-08-01 12:33:09,306:INFO:Copying training dataset
2024-08-01 12:33:09,306:INFO:Defining folds
2024-08-01 12:33:09,306:INFO:Declaring metric variables
2024-08-01 12:33:09,306:INFO:Importing untrained model
2024-08-01 12:33:09,306:INFO:Declaring custom model
2024-08-01 12:33:09,306:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:33:09,306:INFO:Cross validation set to False
2024-08-01 12:33:09,306:INFO:Fitting Model
2024-08-01 12:33:09,822:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best')
2024-08-01 12:33:09,822:INFO:create_model() successfully completed......................................
2024-08-01 12:33:09,891:INFO:Initializing create_model()
2024-08-01 12:33:09,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:09,892:INFO:Checking exceptions
2024-08-01 12:33:09,893:INFO:Importing libraries
2024-08-01 12:33:09,893:INFO:Copying training dataset
2024-08-01 12:33:09,893:INFO:Defining folds
2024-08-01 12:33:09,893:INFO:Declaring metric variables
2024-08-01 12:33:09,893:INFO:Importing untrained model
2024-08-01 12:33:09,893:INFO:Declaring custom model
2024-08-01 12:33:09,893:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:33:09,893:INFO:Cross validation set to False
2024-08-01 12:33:09,893:INFO:Fitting Model
2024-08-01 12:33:09,992:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:10,424:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:33:10,424:INFO:create_model() successfully completed......................................
2024-08-01 12:33:10,496:INFO:Initializing create_model()
2024-08-01 12:33:10,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:10,496:INFO:Checking exceptions
2024-08-01 12:33:10,496:INFO:Importing libraries
2024-08-01 12:33:10,496:INFO:Copying training dataset
2024-08-01 12:33:10,506:INFO:Defining folds
2024-08-01 12:33:10,506:INFO:Declaring metric variables
2024-08-01 12:33:10,506:INFO:Importing untrained model
2024-08-01 12:33:10,506:INFO:Declaring custom model
2024-08-01 12:33:10,507:INFO:Naive Bayes Imported successfully
2024-08-01 12:33:10,508:INFO:Cross validation set to False
2024-08-01 12:33:10,508:INFO:Fitting Model
2024-08-01 12:33:11,026:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:33:11,026:INFO:create_model() successfully completed......................................
2024-08-01 12:33:11,088:INFO:_master_model_container: 16
2024-08-01 12:33:11,088:INFO:_display_container: 2
2024-08-01 12:33:11,088:INFO:[LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), <catboost.core.CatBoostClassifier object at 0x0000028E392D7410>, RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822), XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best'), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), GaussianNB(priors=None, var_smoothing=1e-09)]
2024-08-01 12:33:11,088:INFO:compare_models() successfully completed......................................
2024-08-01 12:33:11,124:INFO:Initializing compare_models()
2024-08-01 12:33:11,124:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, include=None, exclude=['dummy'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, 'include': None, 'exclude': ['dummy'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-01 12:33:11,124:INFO:Checking exceptions
2024-08-01 12:33:11,125:INFO:Preparing display monitor
2024-08-01 12:33:11,127:INFO:Initializing Logistic Regression
2024-08-01 12:33:11,127:INFO:Total runtime is 0.0 minutes
2024-08-01 12:33:11,127:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:11,127:INFO:Initializing create_model()
2024-08-01 12:33:11,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:11,127:INFO:Checking exceptions
2024-08-01 12:33:11,127:INFO:Importing libraries
2024-08-01 12:33:11,127:INFO:Copying training dataset
2024-08-01 12:33:11,140:INFO:Defining folds
2024-08-01 12:33:11,140:INFO:Declaring metric variables
2024-08-01 12:33:11,142:INFO:Importing untrained model
2024-08-01 12:33:11,144:INFO:Logistic Regression Imported successfully
2024-08-01 12:33:11,147:INFO:Starting cross validation
2024-08-01 12:33:11,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:11,398:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,399:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,400:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,404:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,405:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,405:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,406:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,406:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,418:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,424:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,424:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,425:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,426:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,427:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:11,427:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:15,338:INFO:Calculating mean and std
2024-08-01 12:33:15,338:INFO:Creating metrics dataframe
2024-08-01 12:33:15,873:INFO:Uploading results into container
2024-08-01 12:33:15,874:INFO:Uploading model into container now
2024-08-01 12:33:15,874:INFO:_master_model_container: 17
2024-08-01 12:33:15,874:INFO:_display_container: 3
2024-08-01 12:33:15,874:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-01 12:33:15,875:INFO:create_model() successfully completed......................................
2024-08-01 12:33:15,941:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:15,941:INFO:Creating metrics dataframe
2024-08-01 12:33:15,944:INFO:Initializing K Neighbors Classifier
2024-08-01 12:33:15,944:INFO:Total runtime is 0.08029273748397828 minutes
2024-08-01 12:33:15,946:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:15,946:INFO:Initializing create_model()
2024-08-01 12:33:15,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:15,946:INFO:Checking exceptions
2024-08-01 12:33:15,946:INFO:Importing libraries
2024-08-01 12:33:15,946:INFO:Copying training dataset
2024-08-01 12:33:15,948:INFO:Defining folds
2024-08-01 12:33:15,948:INFO:Declaring metric variables
2024-08-01 12:33:15,949:INFO:Importing untrained model
2024-08-01 12:33:15,952:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:33:15,956:INFO:Starting cross validation
2024-08-01 12:33:15,957:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:16,204:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,206:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,207:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,211:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,213:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,216:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,217:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,218:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,220:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,244:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,497:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,505:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,511:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,512:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,512:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,520:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:16,542:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:20,433:INFO:Calculating mean and std
2024-08-01 12:33:20,433:INFO:Creating metrics dataframe
2024-08-01 12:33:21,003:INFO:Uploading results into container
2024-08-01 12:33:21,003:INFO:Uploading model into container now
2024-08-01 12:33:21,003:INFO:_master_model_container: 18
2024-08-01 12:33:21,003:INFO:_display_container: 3
2024-08-01 12:33:21,004:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:33:21,004:INFO:create_model() successfully completed......................................
2024-08-01 12:33:21,073:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-01 12:33:21,073:WARNING:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-08-01 12:33:21,073:INFO:Initializing create_model()
2024-08-01 12:33:21,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:21,074:INFO:Checking exceptions
2024-08-01 12:33:21,074:INFO:Importing libraries
2024-08-01 12:33:21,074:INFO:Copying training dataset
2024-08-01 12:33:21,076:INFO:Defining folds
2024-08-01 12:33:21,077:INFO:Declaring metric variables
2024-08-01 12:33:21,079:INFO:Importing untrained model
2024-08-01 12:33:21,081:INFO:K Neighbors Classifier Imported successfully
2024-08-01 12:33:21,085:INFO:Starting cross validation
2024-08-01 12:33:21,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:21,336:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,336:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,336:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,339:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,344:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,344:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,345:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,349:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,353:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,359:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 316, in predict_proba
    and ArgKminClassMode.is_usable_for(X, self._fit_X, metric)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,648:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,649:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,652:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,655:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,672:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,674:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:21,675:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:842: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0. Details: 
Traceback (most recent call last):
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 136, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 353, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 85, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 312, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 246, in predict
    if self._fit_method == "brute" and ArgKminClassMode.is_usable_for(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 471, in is_usable_for
    ArgKmin.is_usable_for(X, Y, metric)
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 115, in is_usable_for
    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))
         ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 99, in is_numpy_c_ordered
    return hasattr(X, "flags") and X.flags.c_contiguous
                                   ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Flags' object has no attribute 'c_contiguous'

  warnings.warn(

2024-08-01 12:33:25,772:INFO:Calculating mean and std
2024-08-01 12:33:25,773:INFO:Creating metrics dataframe
2024-08-01 12:33:26,308:INFO:Uploading results into container
2024-08-01 12:33:26,309:INFO:Uploading model into container now
2024-08-01 12:33:26,309:INFO:_master_model_container: 19
2024-08-01 12:33:26,309:INFO:_display_container: 3
2024-08-01 12:33:26,309:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-01 12:33:26,309:INFO:create_model() successfully completed......................................
2024-08-01 12:33:26,374:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-08-01 12:33:26,375:ERROR:Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 813, in compare_models
    np.sum(
AssertionError

2024-08-01 12:33:26,375:INFO:Initializing Naive Bayes
2024-08-01 12:33:26,375:INFO:Total runtime is 0.25413752396901446 minutes
2024-08-01 12:33:26,377:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:26,377:INFO:Initializing create_model()
2024-08-01 12:33:26,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:26,377:INFO:Checking exceptions
2024-08-01 12:33:26,377:INFO:Importing libraries
2024-08-01 12:33:26,377:INFO:Copying training dataset
2024-08-01 12:33:26,379:INFO:Defining folds
2024-08-01 12:33:26,379:INFO:Declaring metric variables
2024-08-01 12:33:26,382:INFO:Importing untrained model
2024-08-01 12:33:26,384:INFO:Naive Bayes Imported successfully
2024-08-01 12:33:26,388:INFO:Starting cross validation
2024-08-01 12:33:26,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:26,631:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,636:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,636:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,636:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:26,638:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,638:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,639:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:26,639:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,641:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,642:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,643:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,644:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,645:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,646:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,647:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,647:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,656:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,656:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,657:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,657:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,658:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,659:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,669:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:26,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:30,572:INFO:Calculating mean and std
2024-08-01 12:33:30,572:INFO:Creating metrics dataframe
2024-08-01 12:33:31,093:INFO:Uploading results into container
2024-08-01 12:33:31,094:INFO:Uploading model into container now
2024-08-01 12:33:31,094:INFO:_master_model_container: 20
2024-08-01 12:33:31,094:INFO:_display_container: 3
2024-08-01 12:33:31,094:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-01 12:33:31,094:INFO:create_model() successfully completed......................................
2024-08-01 12:33:31,162:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:31,162:INFO:Creating metrics dataframe
2024-08-01 12:33:31,166:INFO:Initializing Decision Tree Classifier
2024-08-01 12:33:31,166:INFO:Total runtime is 0.33399130900700885 minutes
2024-08-01 12:33:31,168:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:31,168:INFO:Initializing create_model()
2024-08-01 12:33:31,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:31,168:INFO:Checking exceptions
2024-08-01 12:33:31,168:INFO:Importing libraries
2024-08-01 12:33:31,168:INFO:Copying training dataset
2024-08-01 12:33:31,171:INFO:Defining folds
2024-08-01 12:33:31,171:INFO:Declaring metric variables
2024-08-01 12:33:31,172:INFO:Importing untrained model
2024-08-01 12:33:31,174:INFO:Decision Tree Classifier Imported successfully
2024-08-01 12:33:31,177:INFO:Starting cross validation
2024-08-01 12:33:31,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:31,428:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,429:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,430:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,431:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,436:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,436:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,436:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,436:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,436:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,439:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,439:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,439:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,441:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,441:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,442:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,443:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,446:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,447:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,448:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,449:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,450:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,451:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:31,452:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:35,374:INFO:Calculating mean and std
2024-08-01 12:33:35,374:INFO:Creating metrics dataframe
2024-08-01 12:33:35,895:INFO:Uploading results into container
2024-08-01 12:33:35,895:INFO:Uploading model into container now
2024-08-01 12:33:35,896:INFO:_master_model_container: 21
2024-08-01 12:33:35,896:INFO:_display_container: 3
2024-08-01 12:33:35,896:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best')
2024-08-01 12:33:35,896:INFO:create_model() successfully completed......................................
2024-08-01 12:33:35,969:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:35,969:INFO:Creating metrics dataframe
2024-08-01 12:33:35,973:INFO:Initializing SVM - Linear Kernel
2024-08-01 12:33:35,973:INFO:Total runtime is 0.41410961151123044 minutes
2024-08-01 12:33:35,974:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:35,975:INFO:Initializing create_model()
2024-08-01 12:33:35,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:35,975:INFO:Checking exceptions
2024-08-01 12:33:35,975:INFO:Importing libraries
2024-08-01 12:33:35,976:INFO:Copying training dataset
2024-08-01 12:33:35,978:INFO:Defining folds
2024-08-01 12:33:35,978:INFO:Declaring metric variables
2024-08-01 12:33:35,980:INFO:Importing untrained model
2024-08-01 12:33:35,982:INFO:SVM - Linear Kernel Imported successfully
2024-08-01 12:33:35,985:INFO:Starting cross validation
2024-08-01 12:33:35,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:36,196:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,196:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,196:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,197:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,198:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,198:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,199:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,199:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,201:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,201:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,201:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,201:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,202:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,203:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,203:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,203:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,204:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,206:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,207:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,207:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,211:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:36,211:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-08-01 12:33:36,216:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,162:INFO:Calculating mean and std
2024-08-01 12:33:40,163:INFO:Creating metrics dataframe
2024-08-01 12:33:40,688:INFO:Uploading results into container
2024-08-01 12:33:40,689:INFO:Uploading model into container now
2024-08-01 12:33:40,689:INFO:_master_model_container: 22
2024-08-01 12:33:40,689:INFO:_display_container: 3
2024-08-01 12:33:40,691:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-01 12:33:40,691:INFO:create_model() successfully completed......................................
2024-08-01 12:33:40,759:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:40,759:INFO:Creating metrics dataframe
2024-08-01 12:33:40,763:INFO:Initializing Ridge Classifier
2024-08-01 12:33:40,763:INFO:Total runtime is 0.4939384261767069 minutes
2024-08-01 12:33:40,765:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:40,765:INFO:Initializing create_model()
2024-08-01 12:33:40,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:40,765:INFO:Checking exceptions
2024-08-01 12:33:40,765:INFO:Importing libraries
2024-08-01 12:33:40,765:INFO:Copying training dataset
2024-08-01 12:33:40,767:INFO:Defining folds
2024-08-01 12:33:40,767:INFO:Declaring metric variables
2024-08-01 12:33:40,769:INFO:Importing untrained model
2024-08-01 12:33:40,771:INFO:Ridge Classifier Imported successfully
2024-08-01 12:33:40,775:INFO:Starting cross validation
2024-08-01 12:33:40,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:40,961:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,962:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,962:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,964:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,964:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,965:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,965:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,965:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,967:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,967:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,967:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,967:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,969:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,970:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,970:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,970:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,971:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,971:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,972:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,972:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,973:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,973:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,975:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,976:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,976:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,979:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,981:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-08-01 12:33:40,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,982:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:40,983:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:44,867:INFO:Calculating mean and std
2024-08-01 12:33:44,868:INFO:Creating metrics dataframe
2024-08-01 12:33:45,394:INFO:Uploading results into container
2024-08-01 12:33:45,395:INFO:Uploading model into container now
2024-08-01 12:33:45,395:INFO:_master_model_container: 23
2024-08-01 12:33:45,395:INFO:_display_container: 3
2024-08-01 12:33:45,396:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001)
2024-08-01 12:33:45,396:INFO:create_model() successfully completed......................................
2024-08-01 12:33:45,465:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:45,465:INFO:Creating metrics dataframe
2024-08-01 12:33:45,469:INFO:Initializing Random Forest Classifier
2024-08-01 12:33:45,469:INFO:Total runtime is 0.5723689277966817 minutes
2024-08-01 12:33:45,472:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:45,472:INFO:Initializing create_model()
2024-08-01 12:33:45,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:45,473:INFO:Checking exceptions
2024-08-01 12:33:45,473:INFO:Importing libraries
2024-08-01 12:33:45,473:INFO:Copying training dataset
2024-08-01 12:33:45,475:INFO:Defining folds
2024-08-01 12:33:45,475:INFO:Declaring metric variables
2024-08-01 12:33:45,477:INFO:Importing untrained model
2024-08-01 12:33:45,479:INFO:Random Forest Classifier Imported successfully
2024-08-01 12:33:45,482:INFO:Starting cross validation
2024-08-01 12:33:45,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:45,858:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,861:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,862:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,865:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,868:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,868:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,868:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,868:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,870:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,871:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,874:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,885:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,887:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,887:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,887:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,888:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,888:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,889:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,889:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,890:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,891:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,895:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,896:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,917:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,919:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,920:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,934:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:45,937:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:49,805:INFO:Calculating mean and std
2024-08-01 12:33:49,805:INFO:Creating metrics dataframe
2024-08-01 12:33:50,325:INFO:Uploading results into container
2024-08-01 12:33:50,326:INFO:Uploading model into container now
2024-08-01 12:33:50,326:INFO:_master_model_container: 24
2024-08-01 12:33:50,326:INFO:_display_container: 3
2024-08-01 12:33:50,326:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:33:50,327:INFO:create_model() successfully completed......................................
2024-08-01 12:33:50,392:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:50,392:INFO:Creating metrics dataframe
2024-08-01 12:33:50,397:INFO:Initializing Quadratic Discriminant Analysis
2024-08-01 12:33:50,397:INFO:Total runtime is 0.6544955492019653 minutes
2024-08-01 12:33:50,399:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:50,399:INFO:Initializing create_model()
2024-08-01 12:33:50,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:50,399:INFO:Checking exceptions
2024-08-01 12:33:50,399:INFO:Importing libraries
2024-08-01 12:33:50,399:INFO:Copying training dataset
2024-08-01 12:33:50,401:INFO:Defining folds
2024-08-01 12:33:50,401:INFO:Declaring metric variables
2024-08-01 12:33:50,403:INFO:Importing untrained model
2024-08-01 12:33:50,405:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-01 12:33:50,407:INFO:Starting cross validation
2024-08-01 12:33:50,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:50,534:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,535:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,537:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,539:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,541:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,545:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,545:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,550:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,552:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,555:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-01 12:33:50,660:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,661:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,662:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,663:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,664:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,665:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,666:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,670:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,672:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,676:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,678:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,681:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,683:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:50,684:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:54,552:INFO:Calculating mean and std
2024-08-01 12:33:54,552:INFO:Creating metrics dataframe
2024-08-01 12:33:55,079:INFO:Uploading results into container
2024-08-01 12:33:55,079:INFO:Uploading model into container now
2024-08-01 12:33:55,079:INFO:_master_model_container: 25
2024-08-01 12:33:55,079:INFO:_display_container: 3
2024-08-01 12:33:55,080:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-01 12:33:55,080:INFO:create_model() successfully completed......................................
2024-08-01 12:33:55,146:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:55,146:INFO:Creating metrics dataframe
2024-08-01 12:33:55,151:INFO:Initializing Ada Boost Classifier
2024-08-01 12:33:55,151:INFO:Total runtime is 0.7337304512659708 minutes
2024-08-01 12:33:55,153:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:55,153:INFO:Initializing create_model()
2024-08-01 12:33:55,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:55,153:INFO:Checking exceptions
2024-08-01 12:33:55,153:INFO:Importing libraries
2024-08-01 12:33:55,154:INFO:Copying training dataset
2024-08-01 12:33:55,156:INFO:Defining folds
2024-08-01 12:33:55,156:INFO:Declaring metric variables
2024-08-01 12:33:55,157:INFO:Importing untrained model
2024-08-01 12:33:55,159:INFO:Ada Boost Classifier Imported successfully
2024-08-01 12:33:55,162:INFO:Starting cross validation
2024-08-01 12:33:55,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:33:55,499:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,500:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,501:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,503:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,504:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,504:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,505:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,505:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,506:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,507:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,507:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,507:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,508:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,509:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,510:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,512:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,513:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,513:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,513:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,515:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,516:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,517:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,518:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,519:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:55,520:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:33:59,369:INFO:Calculating mean and std
2024-08-01 12:33:59,370:INFO:Creating metrics dataframe
2024-08-01 12:33:59,898:INFO:Uploading results into container
2024-08-01 12:33:59,898:INFO:Uploading model into container now
2024-08-01 12:33:59,898:INFO:_master_model_container: 26
2024-08-01 12:33:59,898:INFO:_display_container: 3
2024-08-01 12:33:59,899:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822)
2024-08-01 12:33:59,899:INFO:create_model() successfully completed......................................
2024-08-01 12:33:59,971:INFO:SubProcess create_model() end ==================================
2024-08-01 12:33:59,971:INFO:Creating metrics dataframe
2024-08-01 12:33:59,976:INFO:Initializing Gradient Boosting Classifier
2024-08-01 12:33:59,976:INFO:Total runtime is 0.8141451954841613 minutes
2024-08-01 12:33:59,978:INFO:SubProcess create_model() called ==================================
2024-08-01 12:33:59,978:INFO:Initializing create_model()
2024-08-01 12:33:59,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:33:59,978:INFO:Checking exceptions
2024-08-01 12:33:59,978:INFO:Importing libraries
2024-08-01 12:33:59,978:INFO:Copying training dataset
2024-08-01 12:33:59,980:INFO:Defining folds
2024-08-01 12:33:59,980:INFO:Declaring metric variables
2024-08-01 12:33:59,982:INFO:Importing untrained model
2024-08-01 12:33:59,984:INFO:Gradient Boosting Classifier Imported successfully
2024-08-01 12:33:59,987:INFO:Starting cross validation
2024-08-01 12:33:59,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:00,355:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,357:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,357:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,360:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,360:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,360:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,365:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,369:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,369:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,369:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,370:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,371:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,371:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,373:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,373:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,408:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,409:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,410:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,411:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,413:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:00,414:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:04,244:INFO:Calculating mean and std
2024-08-01 12:34:04,245:INFO:Creating metrics dataframe
2024-08-01 12:34:04,775:INFO:Uploading results into container
2024-08-01 12:34:04,776:INFO:Uploading model into container now
2024-08-01 12:34:04,776:INFO:_master_model_container: 27
2024-08-01 12:34:04,776:INFO:_display_container: 3
2024-08-01 12:34:04,776:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-01 12:34:04,776:INFO:create_model() successfully completed......................................
2024-08-01 12:34:04,838:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:04,838:INFO:Creating metrics dataframe
2024-08-01 12:34:04,843:INFO:Initializing Linear Discriminant Analysis
2024-08-01 12:34:04,843:INFO:Total runtime is 0.8952697833379109 minutes
2024-08-01 12:34:04,845:INFO:SubProcess create_model() called ==================================
2024-08-01 12:34:04,845:INFO:Initializing create_model()
2024-08-01 12:34:04,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:04,845:INFO:Checking exceptions
2024-08-01 12:34:04,845:INFO:Importing libraries
2024-08-01 12:34:04,845:INFO:Copying training dataset
2024-08-01 12:34:04,847:INFO:Defining folds
2024-08-01 12:34:04,847:INFO:Declaring metric variables
2024-08-01 12:34:04,849:INFO:Importing untrained model
2024-08-01 12:34:04,851:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:34:04,854:INFO:Starting cross validation
2024-08-01 12:34:04,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:05,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,104:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,106:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,113:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,122:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,122:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,124:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,126:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:05,127:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:09,065:INFO:Calculating mean and std
2024-08-01 12:34:09,066:INFO:Creating metrics dataframe
2024-08-01 12:34:09,607:INFO:Uploading results into container
2024-08-01 12:34:09,607:INFO:Uploading model into container now
2024-08-01 12:34:09,610:INFO:_master_model_container: 28
2024-08-01 12:34:09,610:INFO:_display_container: 3
2024-08-01 12:34:09,610:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:34:09,610:INFO:create_model() successfully completed......................................
2024-08-01 12:34:09,691:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:09,691:INFO:Creating metrics dataframe
2024-08-01 12:34:09,696:INFO:Initializing Extra Trees Classifier
2024-08-01 12:34:09,696:INFO:Total runtime is 0.9761480371157327 minutes
2024-08-01 12:34:09,698:INFO:SubProcess create_model() called ==================================
2024-08-01 12:34:09,698:INFO:Initializing create_model()
2024-08-01 12:34:09,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:09,698:INFO:Checking exceptions
2024-08-01 12:34:09,698:INFO:Importing libraries
2024-08-01 12:34:09,698:INFO:Copying training dataset
2024-08-01 12:34:09,700:INFO:Defining folds
2024-08-01 12:34:09,700:INFO:Declaring metric variables
2024-08-01 12:34:09,703:INFO:Importing untrained model
2024-08-01 12:34:09,705:INFO:Extra Trees Classifier Imported successfully
2024-08-01 12:34:09,708:INFO:Starting cross validation
2024-08-01 12:34:09,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:10,091:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,093:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,095:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,096:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,097:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,098:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,100:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,100:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,100:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,100:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,102:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,103:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,105:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,107:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,110:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,115:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,146:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,147:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,149:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,166:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,167:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:10,169:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,036:INFO:Calculating mean and std
2024-08-01 12:34:14,036:INFO:Creating metrics dataframe
2024-08-01 12:34:14,556:INFO:Uploading results into container
2024-08-01 12:34:14,557:INFO:Uploading model into container now
2024-08-01 12:34:14,557:INFO:_master_model_container: 29
2024-08-01 12:34:14,557:INFO:_display_container: 3
2024-08-01 12:34:14,558:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False)
2024-08-01 12:34:14,558:INFO:create_model() successfully completed......................................
2024-08-01 12:34:14,619:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:14,619:INFO:Creating metrics dataframe
2024-08-01 12:34:14,624:INFO:Initializing Extreme Gradient Boosting
2024-08-01 12:34:14,624:INFO:Total runtime is 1.0582927068074544 minutes
2024-08-01 12:34:14,626:INFO:SubProcess create_model() called ==================================
2024-08-01 12:34:14,626:INFO:Initializing create_model()
2024-08-01 12:34:14,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:14,626:INFO:Checking exceptions
2024-08-01 12:34:14,626:INFO:Importing libraries
2024-08-01 12:34:14,626:INFO:Copying training dataset
2024-08-01 12:34:14,630:INFO:Defining folds
2024-08-01 12:34:14,630:INFO:Declaring metric variables
2024-08-01 12:34:14,631:INFO:Importing untrained model
2024-08-01 12:34:14,633:INFO:Extreme Gradient Boosting Imported successfully
2024-08-01 12:34:14,635:INFO:Starting cross validation
2024-08-01 12:34:14,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:14,924:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,926:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,927:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,933:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,935:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,942:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,943:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,943:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,943:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,945:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,946:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,966:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,967:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,969:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,977:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,978:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,979:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,992:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,993:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,995:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,995:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,997:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,997:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,998:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:14,999:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:15,001:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:15,003:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:18,815:INFO:Calculating mean and std
2024-08-01 12:34:18,816:INFO:Creating metrics dataframe
2024-08-01 12:34:19,335:INFO:Uploading results into container
2024-08-01 12:34:19,335:INFO:Uploading model into container now
2024-08-01 12:34:19,335:INFO:_master_model_container: 30
2024-08-01 12:34:19,335:INFO:_display_container: 3
2024-08-01 12:34:19,337:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-01 12:34:19,337:INFO:create_model() successfully completed......................................
2024-08-01 12:34:19,399:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:19,399:INFO:Creating metrics dataframe
2024-08-01 12:34:19,405:INFO:Initializing Light Gradient Boosting Machine
2024-08-01 12:34:19,405:INFO:Total runtime is 1.1379633784294128 minutes
2024-08-01 12:34:19,407:INFO:SubProcess create_model() called ==================================
2024-08-01 12:34:19,407:INFO:Initializing create_model()
2024-08-01 12:34:19,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:19,407:INFO:Checking exceptions
2024-08-01 12:34:19,407:INFO:Importing libraries
2024-08-01 12:34:19,407:INFO:Copying training dataset
2024-08-01 12:34:19,409:INFO:Defining folds
2024-08-01 12:34:19,410:INFO:Declaring metric variables
2024-08-01 12:34:19,411:INFO:Importing untrained model
2024-08-01 12:34:19,413:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-01 12:34:19,416:INFO:Starting cross validation
2024-08-01 12:34:19,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:19,667:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,668:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,671:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,700:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,702:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,704:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,718:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,719:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,720:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,721:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,722:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,723:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,727:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,729:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,739:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,742:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,744:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,776:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,778:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,781:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,899:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,903:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:19,906:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,035:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,039:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,042:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,045:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,048:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:20,050:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:23,728:INFO:Calculating mean and std
2024-08-01 12:34:23,729:INFO:Creating metrics dataframe
2024-08-01 12:34:24,250:INFO:Uploading results into container
2024-08-01 12:34:24,251:INFO:Uploading model into container now
2024-08-01 12:34:24,251:INFO:_master_model_container: 31
2024-08-01 12:34:24,251:INFO:_display_container: 3
2024-08-01 12:34:24,251:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-01 12:34:24,251:INFO:create_model() successfully completed......................................
2024-08-01 12:34:24,313:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:24,313:INFO:Creating metrics dataframe
2024-08-01 12:34:24,319:INFO:Initializing CatBoost Classifier
2024-08-01 12:34:24,319:INFO:Total runtime is 1.2198616941769918 minutes
2024-08-01 12:34:24,321:INFO:SubProcess create_model() called ==================================
2024-08-01 12:34:24,321:INFO:Initializing create_model()
2024-08-01 12:34:24,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028E3942F450>, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:24,322:INFO:Checking exceptions
2024-08-01 12:34:24,322:INFO:Importing libraries
2024-08-01 12:34:24,322:INFO:Copying training dataset
2024-08-01 12:34:24,324:INFO:Defining folds
2024-08-01 12:34:24,324:INFO:Declaring metric variables
2024-08-01 12:34:24,325:INFO:Importing untrained model
2024-08-01 12:34:24,327:INFO:CatBoost Classifier Imported successfully
2024-08-01 12:34:24,331:INFO:Starting cross validation
2024-08-01 12:34:24,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-01 12:34:24,605:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,606:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,608:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,608:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,610:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,610:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,611:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,613:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,613:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,616:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,617:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,617:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,618:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,618:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,620:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,630:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,632:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,679:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,680:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,682:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,992:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,993:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,994:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,996:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,998:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:24,999:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:25,017:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:25,018:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:25,020:WARNING:c:\Users\JAL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-01 12:34:28,516:INFO:Calculating mean and std
2024-08-01 12:34:28,519:INFO:Creating metrics dataframe
2024-08-01 12:34:29,043:INFO:Uploading results into container
2024-08-01 12:34:29,043:INFO:Uploading model into container now
2024-08-01 12:34:29,044:INFO:_master_model_container: 32
2024-08-01 12:34:29,044:INFO:_display_container: 3
2024-08-01 12:34:29,044:INFO:<catboost.core.CatBoostClassifier object at 0x0000028E39407E50>
2024-08-01 12:34:29,044:INFO:create_model() successfully completed......................................
2024-08-01 12:34:29,105:INFO:SubProcess create_model() end ==================================
2024-08-01 12:34:29,106:INFO:Creating metrics dataframe
2024-08-01 12:34:29,106:WARNING:C:\Users\JAL\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:335: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-01 12:34:29,114:INFO:Initializing create_model()
2024-08-01 12:34:29,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028E39367750>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-08-01 12:34:29,114:INFO:Checking exceptions
2024-08-01 12:34:29,114:INFO:Importing libraries
2024-08-01 12:34:29,114:INFO:Copying training dataset
2024-08-01 12:34:29,114:INFO:Defining folds
2024-08-01 12:34:29,114:INFO:Declaring metric variables
2024-08-01 12:34:29,119:INFO:Importing untrained model
2024-08-01 12:34:29,119:INFO:Declaring custom model
2024-08-01 12:34:29,119:INFO:Linear Discriminant Analysis Imported successfully
2024-08-01 12:34:29,120:INFO:Cross validation set to False
2024-08-01 12:34:29,120:INFO:Fitting Model
2024-08-01 12:34:29,633:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:34:29,634:INFO:create_model() successfully completed......................................
2024-08-01 12:34:29,709:INFO:_master_model_container: 32
2024-08-01 12:34:29,709:INFO:_display_container: 3
2024-08-01 12:34:29,709:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-01 12:34:29,710:INFO:compare_models() successfully completed......................................
2024-08-01 12:34:29,746:INFO:Initializing save_model()
2024-08-01 12:34:29,746:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/LinearDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:29,746:INFO:Adding model into prep_pipe
2024-08-01 12:34:29,754:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/LinearDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:34:29,789:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-08-01 12:34:29,789:INFO:save_model() successfully completed......................................
2024-08-01 12:34:30,341:INFO:Initializing save_model()
2024-08-01 12:34:30,341:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6822, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/GradientBoostingClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:30,342:INFO:Adding model into prep_pipe
2024-08-01 12:34:30,353:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/GradientBoostingClassifier.pkl saved in current working directory
2024-08-01 12:34:30,389:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=6822, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:34:30,389:INFO:save_model() successfully completed......................................
2024-08-01 12:34:30,917:INFO:Initializing save_model()
2024-08-01 12:34:30,917:INFO:save_model(model=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6822, solver='auto',
                tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/RidgeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:30,917:INFO:Adding model into prep_pipe
2024-08-01 12:34:30,924:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/RidgeClassifier.pkl saved in current working directory
2024-08-01 12:34:30,959:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=6822,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-08-01 12:34:30,960:INFO:save_model() successfully completed......................................
2024-08-01 12:34:31,495:INFO:Initializing save_model()
2024-08-01 12:34:31,495:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6822, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/LogisticRegression, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:31,495:INFO:Adding model into prep_pipe
2024-08-01 12:34:31,502:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/LogisticRegression.pkl saved in current working directory
2024-08-01 12:34:31,538:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6822,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-08-01 12:34:31,538:INFO:save_model() successfully completed......................................
2024-08-01 12:34:32,064:INFO:Initializing save_model()
2024-08-01 12:34:32,064:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000028E392D7410>, model_name=GPU_0_XAPI_ML_VALIDATION_kfold/CatBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:32,064:INFO:Adding model into prep_pipe
2024-08-01 12:34:32,077:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/CatBoostClassifier.pkl saved in current working directory
2024-08-01 12:34:32,112:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000028E392D7410>)],
         verbose=False)
2024-08-01 12:34:32,112:INFO:save_model() successfully completed......................................
2024-08-01 12:34:32,656:INFO:Initializing save_model()
2024-08-01 12:34:32,656:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6822, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/RandomForestClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:32,656:INFO:Adding model into prep_pipe
2024-08-01 12:34:32,683:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/RandomForestClassifier.pkl saved in current working directory
2024-08-01 12:34:32,719:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=6822,
                                        verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:34:32,719:INFO:save_model() successfully completed......................................
2024-08-01 12:34:33,257:INFO:Initializing save_model()
2024-08-01 12:34:33,257:INFO:save_model(model=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6822, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/SGDClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:33,257:INFO:Adding model into prep_pipe
2024-08-01 12:34:33,259:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/SGDClassifier.pkl saved in current working directory
2024-08-01 12:34:33,299:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=6822,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:34:33,299:INFO:save_model() successfully completed......................................
2024-08-01 12:34:33,834:INFO:Initializing save_model()
2024-08-01 12:34:33,834:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6822), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/AdaBoostClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:33,834:INFO:Adding model into prep_pipe
2024-08-01 12:34:33,853:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/AdaBoostClassifier.pkl saved in current working directory
2024-08-01 12:34:33,887:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=6822))],
         verbose=False)
2024-08-01 12:34:33,887:INFO:save_model() successfully completed......................................
2024-08-01 12:34:34,421:INFO:Initializing save_model()
2024-08-01 12:34:34,421:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/XGBClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:34,421:INFO:Adding model into prep_pipe
2024-08-01 12:34:34,434:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/XGBClassifier.pkl saved in current working directory
2024-08-01 12:34:34,491:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-08-01 12:34:34,491:INFO:save_model() successfully completed......................................
2024-08-01 12:34:35,054:INFO:Initializing save_model()
2024-08-01 12:34:35,054:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6822, verbose=0, warm_start=False), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/ExtraTreesClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:35,054:INFO:Adding model into prep_pipe
2024-08-01 12:34:35,083:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/ExtraTreesClassifier.pkl saved in current working directory
2024-08-01 12:34:35,120:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=6822,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-08-01 12:34:35,120:INFO:save_model() successfully completed......................................
2024-08-01 12:34:35,671:INFO:Initializing save_model()
2024-08-01 12:34:35,671:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6822, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/LGBMClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:35,671:INFO:Adding model into prep_pipe
2024-08-01 12:34:35,695:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/LGBMClassifier.pkl saved in current working directory
2024-08-01 12:34:35,748:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=6822, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2024-08-01 12:34:35,748:INFO:save_model() successfully completed......................................
2024-08-01 12:34:36,295:INFO:Initializing save_model()
2024-08-01 12:34:36,295:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6822, splitter='best'), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/DecisionTreeClassifier, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:36,295:INFO:Adding model into prep_pipe
2024-08-01 12:34:36,302:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/DecisionTreeClassifier.pkl saved in current working directory
2024-08-01 12:34:36,335:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6822, splitter='best'))],
         verbose=False)
2024-08-01 12:34:36,335:INFO:save_model() successfully completed......................................
2024-08-01 12:34:36,871:INFO:Initializing save_model()
2024-08-01 12:34:36,871:INFO:save_model(model=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/QuadraticDiscriminantAnalysis, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:36,871:INFO:Adding model into prep_pipe
2024-08-01 12:34:36,879:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/QuadraticDiscriminantAnalysis.pkl saved in current working directory
2024-08-01 12:34:36,914:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-08-01 12:34:36,914:INFO:save_model() successfully completed......................................
2024-08-01 12:34:37,455:INFO:Initializing save_model()
2024-08-01 12:34:37,455:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=GPU_0_XAPI_ML_VALIDATION_kfold/GaussianNB, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-01 12:34:37,455:INFO:Adding model into prep_pipe
2024-08-01 12:34:37,463:INFO:GPU_0_XAPI_ML_VALIDATION_kfold/GaussianNB.pkl saved in current working directory
2024-08-01 12:34:37,498:INFO:Pipeline(memory=FastMemory(location=C:\Users\JAL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['raisedhands', 'VisITedResources',
                                             'AnnouncementsView',
                                             'Discussion'],
                                    transformer=SimpleImputer(add_indic...
                                    include=['NationalITy', 'PlaceofBirth',
                                             'StageID', 'GradeID', 'SectionID',
                                             'Topic'],
                                    transformer=OneHotEncoder(cols=['NationalITy',
                                                                    'PlaceofBirth',
                                                                    'StageID',
                                                                    'GradeID',
                                                                    'SectionID',
                                                                    'Topic'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-08-01 12:34:37,498:INFO:save_model() successfully completed......................................
2024-08-01 12:34:37,997:WARNING:C:\Users\JAL\AppData\Local\Temp\ipykernel_24440\220787957.py:82: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  best_model[best_model.select_dtypes(include=['number']).columns] *= 100

